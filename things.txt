restarting----cur word: 'a' looking for {'f', 'd', 't', 'u', 'y', 'x', 'e', 'v', 'q', 'l', 'j', 'm', 'k', 'n', 'z', 'w', 'o', 'b', 'i', 's', 'h', 'r', 'a', 'g', 'p', 'c'}, [(1, 2)], 0----
cur word: 'a' trying 'f' with node (0, 1)
----cur word: 'af' looking for {'f', 'l', 't', 'g', 'i', 'e', 'o', 'r', 'a'}, [(1, 2), (0, 1)], 0----
cur word: 'af' trying 'f' with node (0, 0)
----cur word: 'aff' looking for {'l', 'u', 'i', 'e', 'o', 'r', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'aff' trying 'l' with node (1, 0)
----cur word: 'affl' looking for {'u', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affl' trying 'u' with node (1, 1)
----cur word: 'afflu' looking for {'x', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afflu' trying 'x' with node (0, 2)
cur word: 'afflu' trying 'e' with node (0, 2)
----cur word: 'afflue' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afflue' trying 'n' with node (0, 3)
----cur word: 'affluen' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affluen' trying 'c' with node (0, 4)
----cur word: 'affluenc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affluenc' trying 'e' with node (1, 3)
cur word: 'affluen' trying 't' with node (0, 4)
----cur word: 'affluent' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affluent' trying 'l' with node (1, 3)
----cur word: 'affluentl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affluentl' trying 'y' with node (1, 4)
cur word: 'affluent' trying 'l' with node (1, 4)
cur word: 'affluen' trying 'c' with node (1, 3)
cur word: 'affluen' trying 't' with node (1, 3)
cur word: 'affluen' trying 'c' with node (1, 4)
cur word: 'affluen' trying 't' with node (1, 4)
cur word: 'afflue' trying 'n' with node (1, 3)
cur word: 'afflu' trying 'e' with node (2, 0)
cur word: 'afflu' trying 'e' with node (2, 1)
cur word: 'afflu' trying 'e' with node (2, 2)
cur word: 'affl' trying 'a' with node (1, 1)
----cur word: 'affla' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affla' trying 't' with node (0, 2)
----cur word: 'afflat' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afflat' trying 'u' with node (0, 3)
----cur word: 'afflatu' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afflatu' trying 's' with node (0, 4)
cur word: 'afflat' trying 'u' with node (1, 3)
cur word: 'affla' trying 't' with node (2, 0)
cur word: 'affla' trying 't' with node (2, 1)
cur word: 'affla' trying 't' with node (2, 2)
cur word: 'affl' trying 'i' with node (1, 1)
----cur word: 'affli' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affli' trying 'c' with node (0, 2)
----cur word: 'afflic' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afflic' trying 't' with node (0, 3)
----cur word: 'afflict' looking for {'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afflict' trying 'e' with node (0, 4)
----cur word: 'afflicte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afflicte' trying 'd' with node (1, 3)
cur word: 'afflict' trying 's' with node (0, 4)
cur word: 'afflict' trying 'i' with node (0, 4)
----cur word: 'afflicti' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afflicti' trying 'n' with node (1, 3)
----cur word: 'afflictin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afflictin' trying 'g' with node (1, 4)
cur word: 'afflicti' trying 'o' with node (1, 3)
----cur word: 'afflictio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afflictio' trying 'n' with node (1, 4)
----cur word: 'affliction' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affliction' trying 's' with node (2, 3)
cur word: 'afflictio' trying 'n' with node (2, 2)
cur word: 'afflictio' trying 'n' with node (2, 3)
cur word: 'afflictio' trying 'n' with node (2, 4)
cur word: 'afflicti' trying 'v' with node (1, 3)
----cur word: 'afflictiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afflictiv' trying 'e' with node (1, 4)
----cur word: 'afflictive' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afflictive' trying 'l' with node (2, 3)
----cur word: 'afflictivel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'afflictivel' trying 'y' with node (2, 2)
cur word: 'afflictive' trying 'l' with node (2, 4)
cur word: 'afflictiv' trying 'e' with node (2, 2)
cur word: 'afflictiv' trying 'e' with node (2, 3)
cur word: 'afflictiv' trying 'e' with node (2, 4)
cur word: 'afflicti' trying 'n' with node (1, 4)
cur word: 'afflicti' trying 'o' with node (1, 4)
cur word: 'afflicti' trying 'v' with node (1, 4)
cur word: 'afflict' trying 'e' with node (1, 3)
cur word: 'afflict' trying 'i' with node (1, 3)
cur word: 'afflict' trying 'e' with node (1, 4)
cur word: 'afflict' trying 'i' with node (1, 4)
cur word: 'afflic' trying 't' with node (1, 3)
cur word: 'affli' trying 'c' with node (2, 0)
cur word: 'affli' trying 'c' with node (2, 1)
cur word: 'affli' trying 'c' with node (2, 2)
cur word: 'affl' trying 'u' with node (2, 0)
cur word: 'affl' trying 'a' with node (2, 0)
cur word: 'affl' trying 'i' with node (2, 0)
cur word: 'affl' trying 'u' with node (2, 1)
cur word: 'affl' trying 'a' with node (2, 1)
cur word: 'affl' trying 'i' with node (2, 1)
cur word: 'aff' trying 'u' with node (1, 0)
----cur word: 'affu' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affu' trying 's' with node (1, 1)
----cur word: 'affus' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affus' trying 'i' with node (0, 2)
----cur word: 'affusi' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affusi' trying 'o' with node (0, 3)
----cur word: 'affusio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affusio' trying 'n' with node (0, 4)
----cur word: 'affusion' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affusion' trying 's' with node (1, 3)
cur word: 'affusio' trying 'n' with node (1, 3)
cur word: 'affusio' trying 'n' with node (1, 4)
cur word: 'affusi' trying 'o' with node (1, 3)
cur word: 'affus' trying 'i' with node (2, 0)
cur word: 'affus' trying 'i' with node (2, 1)
cur word: 'affus' trying 'i' with node (2, 2)
cur word: 'affu' trying 's' with node (2, 0)
cur word: 'affu' trying 's' with node (2, 1)
cur word: 'aff' trying 'i' with node (1, 0)
----cur word: 'affi' looking for {'d', 'l', 'n', 'x', 'c', 'r', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affi' trying 'd' with node (1, 1)
----cur word: 'affid' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affid' trying 'a' with node (0, 2)
----cur word: 'affida' looking for {'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affida' trying 'v' with node (0, 3)
----cur word: 'affidav' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affidav' trying 'i' with node (0, 4)
----cur word: 'affidavi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affidavi' trying 't' with node (1, 3)
----cur word: 'affidavit' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affidavit' trying 's' with node (1, 4)
cur word: 'affidavi' trying 't' with node (1, 4)
cur word: 'affidav' trying 'i' with node (1, 3)
cur word: 'affidav' trying 'i' with node (1, 4)
cur word: 'affida' trying 'v' with node (1, 3)
cur word: 'affid' trying 'a' with node (2, 0)
cur word: 'affid' trying 'a' with node (2, 1)
cur word: 'affid' trying 'a' with node (2, 2)
cur word: 'affi' trying 'l' with node (1, 1)
----cur word: 'affil' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affil' trying 'i' with node (0, 2)
----cur word: 'affili' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affili' trying 'a' with node (0, 3)
----cur word: 'affilia' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affilia' trying 't' with node (0, 4)
----cur word: 'affiliat' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affiliat' trying 'e' with node (1, 3)
----cur word: 'affiliate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affiliate' trying 'd' with node (1, 4)
cur word: 'affiliate' trying 's' with node (1, 4)
cur word: 'affiliat' trying 'i' with node (1, 3)
----cur word: 'affiliati' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affiliati' trying 'n' with node (1, 4)
----cur word: 'affiliatin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affiliatin' trying 'g' with node (2, 3)
cur word: 'affiliati' trying 'o' with node (1, 4)
----cur word: 'affiliatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affiliatio' trying 'n' with node (2, 3)
----cur word: 'affiliation' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affiliation' trying 's' with node (2, 2)
cur word: 'affiliatio' trying 'n' with node (2, 4)
cur word: 'affiliati' trying 'v' with node (1, 4)
----cur word: 'affiliativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affiliativ' trying 'e' with node (2, 3)
cur word: 'affiliati' trying 'n' with node (2, 2)
cur word: 'affiliati' trying 'o' with node (2, 2)
cur word: 'affiliati' trying 'v' with node (2, 2)
cur word: 'affiliati' trying 'n' with node (2, 3)
cur word: 'affiliati' trying 'o' with node (2, 3)
cur word: 'affiliati' trying 'v' with node (2, 3)
cur word: 'affiliati' trying 'n' with node (2, 4)
cur word: 'affiliati' trying 'o' with node (2, 4)
cur word: 'affiliati' trying 'v' with node (2, 4)
cur word: 'affiliat' trying 'e' with node (1, 4)
cur word: 'affiliat' trying 'i' with node (1, 4)
cur word: 'affilia' trying 't' with node (1, 3)
cur word: 'affilia' trying 't' with node (1, 4)
cur word: 'affili' trying 'a' with node (1, 3)
cur word: 'affil' trying 'i' with node (2, 0)
cur word: 'affil' trying 'i' with node (2, 1)
cur word: 'affil' trying 'i' with node (2, 2)
cur word: 'affi' trying 'n' with node (1, 1)
----cur word: 'affin' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affin' trying 'e' with node (0, 2)
----cur word: 'affine' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affine' trying 'd' with node (0, 3)
cur word: 'affin' trying 'i' with node (0, 2)
----cur word: 'affini' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affini' trying 't' with node (0, 3)
----cur word: 'affinit' looking for {'y', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affinit' trying 'y' with node (0, 4)
cur word: 'affinit' trying 'i' with node (0, 4)
----cur word: 'affiniti' looking for {'e', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affiniti' trying 'e' with node (1, 3)
----cur word: 'affinitie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affinitie' trying 's' with node (1, 4)
cur word: 'affiniti' trying 'v' with node (1, 3)
----cur word: 'affinitiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affinitiv' trying 'e' with node (1, 4)
cur word: 'affiniti' trying 'e' with node (1, 4)
cur word: 'affiniti' trying 'v' with node (1, 4)
cur word: 'affinit' trying 'i' with node (1, 3)
cur word: 'affinit' trying 'i' with node (1, 4)
cur word: 'affini' trying 't' with node (1, 3)
cur word: 'affin' trying 'a' with node (0, 2)
----cur word: 'affina' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affina' trying 'l' with node (0, 3)
cur word: 'affin' trying 'e' with node (2, 0)
cur word: 'affin' trying 'i' with node (2, 0)
cur word: 'affin' trying 'a' with node (2, 0)
cur word: 'affin' trying 'e' with node (2, 1)
cur word: 'affin' trying 'i' with node (2, 1)
cur word: 'affin' trying 'a' with node (2, 1)
cur word: 'affin' trying 'e' with node (2, 2)
cur word: 'affin' trying 'i' with node (2, 2)
cur word: 'affin' trying 'a' with node (2, 2)
cur word: 'affi' trying 'x' with node (1, 1)
----cur word: 'affix' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affix' trying 'e' with node (0, 2)
----cur word: 'affixe' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affixe' trying 'd' with node (0, 3)
cur word: 'affixe' trying 's' with node (0, 3)
cur word: 'affix' trying 'i' with node (0, 2)
----cur word: 'affixi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affixi' trying 'n' with node (0, 3)
----cur word: 'affixin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affixin' trying 'g' with node (0, 4)
cur word: 'affixi' trying 'n' with node (1, 3)
cur word: 'affix' trying 'a' with node (0, 2)
----cur word: 'affixa' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affixa' trying 't' with node (0, 3)
----cur word: 'affixat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affixat' trying 'i' with node (0, 4)
----cur word: 'affixati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affixati' trying 'o' with node (1, 3)
----cur word: 'affixatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affixatio' trying 'n' with node (1, 4)
----cur word: 'affixation' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affixation' trying 's' with node (2, 3)
cur word: 'affixatio' trying 'n' with node (2, 2)
cur word: 'affixatio' trying 'n' with node (2, 3)
cur word: 'affixatio' trying 'n' with node (2, 4)
cur word: 'affixati' trying 'o' with node (1, 4)
cur word: 'affixat' trying 'i' with node (1, 3)
cur word: 'affixat' trying 'i' with node (1, 4)
cur word: 'affixa' trying 't' with node (1, 3)
cur word: 'affix' trying 'e' with node (2, 0)
cur word: 'affix' trying 'i' with node (2, 0)
cur word: 'affix' trying 'a' with node (2, 0)
cur word: 'affix' trying 'e' with node (2, 1)
cur word: 'affix' trying 'i' with node (2, 1)
cur word: 'affix' trying 'a' with node (2, 1)
cur word: 'affix' trying 'e' with node (2, 2)
cur word: 'affix' trying 'i' with node (2, 2)
cur word: 'affix' trying 'a' with node (2, 2)
cur word: 'affi' trying 'c' with node (1, 1)
----cur word: 'affic' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affic' trying 'h' with node (0, 2)
----cur word: 'affich' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affich' trying 'e' with node (0, 3)
cur word: 'affic' trying 'h' with node (2, 0)
cur word: 'affic' trying 'h' with node (2, 1)
cur word: 'affic' trying 'h' with node (2, 2)
cur word: 'affi' trying 'r' with node (1, 1)
----cur word: 'affir' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affir' trying 'm' with node (0, 2)
----cur word: 'affirm' looking for {'s', 'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affirm' trying 's' with node (0, 3)
cur word: 'affirm' trying 'e' with node (0, 3)
----cur word: 'affirme' looking for {'d', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affirme' trying 'd' with node (0, 4)
cur word: 'affirme' trying 'r' with node (0, 4)
cur word: 'affirm' trying 'a' with node (0, 3)
----cur word: 'affirma' looking for {'n', 't', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affirma' trying 'n' with node (0, 4)
----cur word: 'affirman' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affirman' trying 't' with node (1, 3)
cur word: 'affirma' trying 't' with node (0, 4)
----cur word: 'affirmat' looking for {'o', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affirmat' trying 'o' with node (1, 3)
----cur word: 'affirmato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affirmato' trying 'r' with node (1, 4)
----cur word: 'affirmator' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affirmator' trying 'y' with node (2, 3)
cur word: 'affirmato' trying 'r' with node (2, 2)
cur word: 'affirmato' trying 'r' with node (2, 3)
cur word: 'affirmato' trying 'r' with node (2, 4)
cur word: 'affirmat' trying 'i' with node (1, 3)
----cur word: 'affirmati' looking for {'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affirmati' trying 'o' with node (1, 4)
----cur word: 'affirmatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affirmatio' trying 'n' with node (2, 3)
----cur word: 'affirmation' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affirmation' trying 's' with node (2, 2)
cur word: 'affirmatio' trying 'n' with node (2, 4)
cur word: 'affirmati' trying 'v' with node (1, 4)
----cur word: 'affirmativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affirmativ' trying 'e' with node (2, 3)
----cur word: 'affirmative' looking for {'l', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affirmative' trying 'l' with node (2, 2)
----cur word: 'affirmativel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affirmativel' trying 'y' with node (2, 1)
cur word: 'affirmative' trying 's' with node (2, 2)
cur word: 'affirmative' trying 'l' with node (2, 4)
cur word: 'affirmative' trying 'l' with node (3, 2)
cur word: 'affirmative' trying 'l' with node (3, 3)
cur word: 'affirmative' trying 'l' with node (3, 4)
cur word: 'affirmativ' trying 'e' with node (2, 4)
cur word: 'affirmati' trying 'o' with node (2, 2)
cur word: 'affirmati' trying 'v' with node (2, 2)
cur word: 'affirmati' trying 'o' with node (2, 3)
cur word: 'affirmati' trying 'v' with node (2, 3)
cur word: 'affirmati' trying 'o' with node (2, 4)
cur word: 'affirmati' trying 'v' with node (2, 4)
cur word: 'affirmat' trying 'o' with node (1, 4)
cur word: 'affirmat' trying 'i' with node (1, 4)
cur word: 'affirma' trying 'b' with node (0, 4)
----cur word: 'affirmab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affirmab' trying 'l' with node (1, 3)
----cur word: 'affirmabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affirmabl' trying 'e' with node (1, 4)
cur word: 'affirmab' trying 'l' with node (1, 4)
cur word: 'affirma' trying 'n' with node (1, 3)
cur word: 'affirma' trying 't' with node (1, 3)
cur word: 'affirma' trying 'b' with node (1, 3)
cur word: 'affirma' trying 'n' with node (1, 4)
cur word: 'affirma' trying 't' with node (1, 4)
cur word: 'affirma' trying 'b' with node (1, 4)
cur word: 'affirm' trying 'i' with node (0, 3)
----cur word: 'affirmi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affirmi' trying 'n' with node (0, 4)
----cur word: 'affirmin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affirmin' trying 'g' with node (1, 3)
cur word: 'affirmi' trying 'n' with node (1, 3)
cur word: 'affirmi' trying 'n' with node (1, 4)
cur word: 'affirm' trying 'e' with node (1, 3)
cur word: 'affirm' trying 'a' with node (1, 3)
cur word: 'affirm' trying 'i' with node (1, 3)
cur word: 'affir' trying 'm' with node (2, 0)
cur word: 'affir' trying 'm' with node (2, 1)
cur word: 'affir' trying 'm' with node (2, 2)
cur word: 'affi' trying 'a' with node (1, 1)
----cur word: 'affia' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affia' trying 'n' with node (0, 2)
----cur word: 'affian' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affian' trying 'c' with node (0, 3)
----cur word: 'affianc' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affianc' trying 'e' with node (0, 4)
----cur word: 'affiance' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affiance' trying 'd' with node (1, 3)
cur word: 'affiance' trying 's' with node (1, 3)
cur word: 'affianc' trying 'i' with node (0, 4)
----cur word: 'affianci' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affianci' trying 'n' with node (1, 3)
----cur word: 'affiancin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affiancin' trying 'g' with node (1, 4)
cur word: 'affianci' trying 'n' with node (1, 4)
cur word: 'affianc' trying 'e' with node (1, 3)
cur word: 'affianc' trying 'i' with node (1, 3)
cur word: 'affianc' trying 'e' with node (1, 4)
cur word: 'affianc' trying 'i' with node (1, 4)
cur word: 'affian' trying 't' with node (0, 3)
cur word: 'affian' trying 'c' with node (1, 3)
cur word: 'affia' trying 'n' with node (2, 0)
cur word: 'affia' trying 'n' with node (2, 1)
cur word: 'affia' trying 'n' with node (2, 2)
cur word: 'affi' trying 'd' with node (2, 0)
cur word: 'affi' trying 'l' with node (2, 0)
cur word: 'affi' trying 'n' with node (2, 0)
cur word: 'affi' trying 'x' with node (2, 0)
cur word: 'affi' trying 'c' with node (2, 0)
cur word: 'affi' trying 'r' with node (2, 0)
cur word: 'affi' trying 'a' with node (2, 0)
cur word: 'affi' trying 'd' with node (2, 1)
cur word: 'affi' trying 'l' with node (2, 1)
cur word: 'affi' trying 'n' with node (2, 1)
cur word: 'affi' trying 'x' with node (2, 1)
cur word: 'affi' trying 'c' with node (2, 1)
cur word: 'affi' trying 'r' with node (2, 1)
cur word: 'affi' trying 'a' with node (2, 1)
cur word: 'aff' trying 'e' with node (1, 0)
----cur word: 'affe' looking for {'n', 'c', 'r', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affe' trying 'n' with node (1, 1)
----cur word: 'affen' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affen' trying 'p' with node (0, 2)
----cur word: 'affenp' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affenp' trying 'i' with node (0, 3)
----cur word: 'affenpi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affenpi' trying 'n' with node (0, 4)
----cur word: 'affenpin' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affenpin' trying 's' with node (1, 3)
----cur word: 'affenpins' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affenpins' trying 'c' with node (1, 4)
----cur word: 'affenpinsc' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affenpinsc' trying 'h' with node (2, 3)
----cur word: 'affenpinsch' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affenpinsch' trying 'e' with node (2, 2)
----cur word: 'affenpinsche' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affenpinsche' trying 'r' with node (2, 1)
----cur word: 'affenpinscher' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'affenpinscher' trying 's' with node (2, 0)
cur word: 'affenpinsche' trying 'r' with node (3, 1)
cur word: 'affenpinsche' trying 'r' with node (3, 2)
cur word: 'affenpinsche' trying 'r' with node (3, 3)
cur word: 'affenpinsch' trying 'e' with node (2, 4)
cur word: 'affenpinsch' trying 'e' with node (3, 2)
cur word: 'affenpinsch' trying 'e' with node (3, 3)
cur word: 'affenpinsch' trying 'e' with node (3, 4)
cur word: 'affenpinsc' trying 'h' with node (2, 4)
cur word: 'affenpins' trying 'c' with node (2, 2)
cur word: 'affenpins' trying 'c' with node (2, 3)
cur word: 'affenpins' trying 'c' with node (2, 4)
cur word: 'affenpin' trying 's' with node (1, 4)
cur word: 'affenpi' trying 'n' with node (1, 3)
cur word: 'affenpi' trying 'n' with node (1, 4)
cur word: 'affenp' trying 'i' with node (1, 3)
cur word: 'affen' trying 'p' with node (2, 0)
cur word: 'affen' trying 'p' with node (2, 1)
cur word: 'affen' trying 'p' with node (2, 2)
cur word: 'affe' trying 'c' with node (1, 1)
----cur word: 'affec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affec' trying 't' with node (0, 2)
----cur word: 'affect' looking for {'l', 'i', 'e', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affect' trying 'l' with node (0, 3)
----cur word: 'affectl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affectl' trying 'e' with node (0, 4)
----cur word: 'affectle' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affectle' trying 's' with node (1, 3)
----cur word: 'affectles' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affectles' trying 's' with node (1, 4)
----cur word: 'affectless' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectless' trying 'n' with node (2, 3)
----cur word: 'affectlessn' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affectlessn' trying 'e' with node (2, 2)
----cur word: 'affectlessne' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affectlessne' trying 's' with node (2, 1)
----cur word: 'affectlessnes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'affectlessnes' trying 's' with node (2, 0)
cur word: 'affectlessne' trying 's' with node (3, 1)
cur word: 'affectlessne' trying 's' with node (3, 2)
cur word: 'affectlessne' trying 's' with node (3, 3)
cur word: 'affectlessn' trying 'e' with node (2, 4)
cur word: 'affectlessn' trying 'e' with node (3, 2)
cur word: 'affectlessn' trying 'e' with node (3, 3)
cur word: 'affectlessn' trying 'e' with node (3, 4)
cur word: 'affectless' trying 'n' with node (2, 4)
cur word: 'affectles' trying 's' with node (2, 2)
cur word: 'affectles' trying 's' with node (2, 3)
cur word: 'affectles' trying 's' with node (2, 4)
cur word: 'affectle' trying 's' with node (1, 4)
cur word: 'affectl' trying 'e' with node (1, 3)
cur word: 'affectl' trying 'e' with node (1, 4)
cur word: 'affect' trying 'i' with node (0, 3)
----cur word: 'affecti' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affecti' trying 'n' with node (0, 4)
----cur word: 'affectin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affectin' trying 'g' with node (1, 3)
----cur word: 'affecting' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affecting' trying 'l' with node (1, 4)
----cur word: 'affectingl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectingl' trying 'y' with node (2, 3)
cur word: 'affecting' trying 'l' with node (2, 2)
cur word: 'affecting' trying 'l' with node (2, 3)
cur word: 'affecting' trying 'l' with node (2, 4)
cur word: 'affectin' trying 'g' with node (1, 4)
cur word: 'affecti' trying 'o' with node (0, 4)
----cur word: 'affectio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affectio' trying 'n' with node (1, 3)
----cur word: 'affection' looking for {'s', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affection' trying 's' with node (1, 4)
cur word: 'affection' trying 'a' with node (1, 4)
----cur word: 'affectiona' looking for {'l', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectiona' trying 'l' with node (2, 3)
cur word: 'affectiona' trying 't' with node (2, 3)
----cur word: 'affectionat' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affectionat' trying 'e' with node (2, 2)
----cur word: 'affectionate' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affectionate' trying 'l' with node (2, 1)
----cur word: 'affectionatel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'affectionatel' trying 'y' with node (2, 0)
cur word: 'affectionate' trying 'l' with node (3, 1)
cur word: 'affectionate' trying 'l' with node (3, 2)
cur word: 'affectionate' trying 'l' with node (3, 3)
cur word: 'affectionat' trying 'e' with node (2, 4)
cur word: 'affectionat' trying 'e' with node (3, 2)
cur word: 'affectionat' trying 'e' with node (3, 3)
cur word: 'affectionat' trying 'e' with node (3, 4)
cur word: 'affectiona' trying 't' with node (2, 4)
cur word: 'affection' trying 'a' with node (2, 2)
cur word: 'affection' trying 'a' with node (2, 3)
cur word: 'affection' trying 'a' with node (2, 4)
cur word: 'affectio' trying 'n' with node (1, 4)
cur word: 'affecti' trying 'v' with node (0, 4)
----cur word: 'affectiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affectiv' trying 'e' with node (1, 3)
----cur word: 'affective' looking for {'n', 'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affective' trying 'n' with node (1, 4)
----cur word: 'affectiven' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectiven' trying 'e' with node (2, 3)
----cur word: 'affectivene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affectivene' trying 's' with node (2, 2)
----cur word: 'affectivenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affectivenes' trying 's' with node (2, 1)
cur word: 'affectivene' trying 's' with node (2, 4)
cur word: 'affectivene' trying 's' with node (3, 2)
cur word: 'affectivene' trying 's' with node (3, 3)
cur word: 'affectivene' trying 's' with node (3, 4)
cur word: 'affectiven' trying 'e' with node (2, 4)
cur word: 'affective' trying 'l' with node (1, 4)
----cur word: 'affectivel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectivel' trying 'y' with node (2, 3)
cur word: 'affective' trying 'n' with node (2, 2)
cur word: 'affective' trying 'l' with node (2, 2)
cur word: 'affective' trying 'n' with node (2, 3)
cur word: 'affective' trying 'l' with node (2, 3)
cur word: 'affective' trying 'n' with node (2, 4)
cur word: 'affective' trying 'l' with node (2, 4)
cur word: 'affectiv' trying 'e' with node (1, 4)
cur word: 'affecti' trying 'n' with node (1, 3)
cur word: 'affecti' trying 'o' with node (1, 3)
cur word: 'affecti' trying 'v' with node (1, 3)
cur word: 'affecti' trying 'n' with node (1, 4)
cur word: 'affecti' trying 'o' with node (1, 4)
cur word: 'affecti' trying 'v' with node (1, 4)
cur word: 'affect' trying 'e' with node (0, 3)
----cur word: 'affecte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affecte' trying 'd' with node (0, 4)
----cur word: 'affected' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affected' trying 'l' with node (1, 3)
----cur word: 'affectedl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affectedl' trying 'y' with node (1, 4)
cur word: 'affected' trying 'l' with node (1, 4)
cur word: 'affecte' trying 'd' with node (1, 3)
cur word: 'affecte' trying 'd' with node (1, 4)
cur word: 'affect' trying 's' with node (0, 3)
cur word: 'affect' trying 'a' with node (0, 3)
----cur word: 'affecta' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affecta' trying 't' with node (0, 4)
----cur word: 'affectat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affectat' trying 'i' with node (1, 3)
----cur word: 'affectati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affectati' trying 'o' with node (1, 4)
----cur word: 'affectatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affectatio' trying 'n' with node (2, 3)
----cur word: 'affectation' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affectation' trying 's' with node (2, 2)
cur word: 'affectatio' trying 'n' with node (2, 4)
cur word: 'affectati' trying 'o' with node (2, 2)
cur word: 'affectati' trying 'o' with node (2, 3)
cur word: 'affectati' trying 'o' with node (2, 4)
cur word: 'affectat' trying 'i' with node (1, 4)
cur word: 'affecta' trying 't' with node (1, 3)
cur word: 'affecta' trying 't' with node (1, 4)
cur word: 'affect' trying 'l' with node (1, 3)
cur word: 'affect' trying 'e' with node (1, 3)
cur word: 'affect' trying 'a' with node (1, 3)
cur word: 'affect' trying 'i' with node (1, 3)
cur word: 'affec' trying 't' with node (2, 0)
cur word: 'affec' trying 't' with node (2, 1)
cur word: 'affec' trying 't' with node (2, 2)
cur word: 'affe' trying 'r' with node (1, 1)
----cur word: 'affer' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affer' trying 'e' with node (0, 2)
----cur word: 'affere' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affere' trying 'n' with node (0, 3)
----cur word: 'afferen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afferen' trying 't' with node (0, 4)
cur word: 'affere' trying 'n' with node (1, 3)
cur word: 'affer' trying 'e' with node (2, 0)
cur word: 'affer' trying 'e' with node (2, 1)
cur word: 'affer' trying 'e' with node (2, 2)
cur word: 'affe' trying 't' with node (1, 1)
----cur word: 'affet' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affet' trying 't' with node (0, 2)
----cur word: 'affett' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affett' trying 'u' with node (0, 3)
----cur word: 'affettu' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affettu' trying 'o' with node (0, 4)
----cur word: 'affettuo' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affettuo' trying 's' with node (1, 3)
----cur word: 'affettuos' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affettuos' trying 'o' with node (1, 4)
cur word: 'affettuo' trying 's' with node (1, 4)
cur word: 'affettu' trying 'o' with node (1, 3)
cur word: 'affettu' trying 'o' with node (1, 4)
cur word: 'affett' trying 'u' with node (1, 3)
cur word: 'affet' trying 't' with node (2, 0)
cur word: 'affet' trying 't' with node (2, 1)
cur word: 'affet' trying 't' with node (2, 2)
cur word: 'affe' trying 'n' with node (2, 0)
cur word: 'affe' trying 'c' with node (2, 0)
cur word: 'affe' trying 'r' with node (2, 0)
cur word: 'affe' trying 't' with node (2, 0)
cur word: 'affe' trying 'n' with node (2, 1)
cur word: 'affe' trying 'c' with node (2, 1)
cur word: 'affe' trying 'r' with node (2, 1)
cur word: 'affe' trying 't' with node (2, 1)
cur word: 'aff' trying 'o' with node (1, 0)
----cur word: 'affo' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affo' trying 'r' with node (1, 1)
----cur word: 'affor' looking for {'d', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affor' trying 'd' with node (0, 2)
----cur word: 'afford' looking for {'s', 'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afford' trying 's' with node (0, 3)
cur word: 'afford' trying 'e' with node (0, 3)
----cur word: 'afforde' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afforde' trying 'd' with node (0, 4)
cur word: 'afford' trying 'a' with node (0, 3)
----cur word: 'afforda' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afforda' trying 'b' with node (0, 4)
----cur word: 'affordab' looking for {'l', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affordab' trying 'l' with node (1, 3)
----cur word: 'affordabl' looking for {'y', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affordabl' trying 'y' with node (1, 4)
cur word: 'affordabl' trying 'e' with node (1, 4)
cur word: 'affordab' trying 'i' with node (1, 3)
----cur word: 'affordabi' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affordabi' trying 'l' with node (1, 4)
----cur word: 'affordabil' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affordabil' trying 'i' with node (2, 3)
----cur word: 'affordabili' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affordabili' trying 't' with node (2, 2)
----cur word: 'affordabilit' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affordabilit' trying 'y' with node (2, 1)
cur word: 'affordabili' trying 't' with node (2, 4)
cur word: 'affordabili' trying 't' with node (3, 2)
cur word: 'affordabili' trying 't' with node (3, 3)
cur word: 'affordabili' trying 't' with node (3, 4)
cur word: 'affordabil' trying 'i' with node (2, 4)
cur word: 'affordabi' trying 'l' with node (2, 2)
cur word: 'affordabi' trying 'l' with node (2, 3)
cur word: 'affordabi' trying 'l' with node (2, 4)
cur word: 'affordab' trying 'l' with node (1, 4)
cur word: 'affordab' trying 'i' with node (1, 4)
cur word: 'afforda' trying 'b' with node (1, 3)
cur word: 'afforda' trying 'b' with node (1, 4)
cur word: 'afford' trying 'i' with node (0, 3)
----cur word: 'affordi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affordi' trying 'n' with node (0, 4)
----cur word: 'affordin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affordin' trying 'g' with node (1, 3)
cur word: 'affordi' trying 'n' with node (1, 3)
cur word: 'affordi' trying 'n' with node (1, 4)
cur word: 'afford' trying 'e' with node (1, 3)
cur word: 'afford' trying 'a' with node (1, 3)
cur word: 'afford' trying 'i' with node (1, 3)
cur word: 'affor' trying 'e' with node (0, 2)
----cur word: 'affore' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affore' trying 's' with node (0, 3)
----cur word: 'affores' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affores' trying 't' with node (0, 4)
----cur word: 'afforest' looking for {'e', 'a', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afforest' trying 'e' with node (1, 3)
----cur word: 'afforeste' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afforeste' trying 'd' with node (1, 4)
cur word: 'afforest' trying 'a' with node (1, 3)
----cur word: 'afforesta' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afforesta' trying 't' with node (1, 4)
----cur word: 'afforestat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afforestat' trying 'i' with node (2, 3)
----cur word: 'afforestati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'afforestati' trying 'o' with node (2, 2)
----cur word: 'afforestatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'afforestatio' trying 'n' with node (2, 1)
cur word: 'afforestati' trying 'o' with node (2, 4)
cur word: 'afforestati' trying 'o' with node (3, 2)
cur word: 'afforestati' trying 'o' with node (3, 3)
cur word: 'afforestati' trying 'o' with node (3, 4)
cur word: 'afforestat' trying 'i' with node (2, 4)
cur word: 'afforesta' trying 't' with node (2, 2)
cur word: 'afforesta' trying 't' with node (2, 3)
cur word: 'afforesta' trying 't' with node (2, 4)
cur word: 'afforest' trying 's' with node (1, 3)
cur word: 'afforest' trying 'i' with node (1, 3)
----cur word: 'afforesti' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afforesti' trying 'n' with node (1, 4)
----cur word: 'afforestin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afforestin' trying 'g' with node (2, 3)
cur word: 'afforesti' trying 'n' with node (2, 2)
cur word: 'afforesti' trying 'n' with node (2, 3)
cur word: 'afforesti' trying 'n' with node (2, 4)
cur word: 'afforest' trying 'e' with node (1, 4)
cur word: 'afforest' trying 'a' with node (1, 4)
cur word: 'afforest' trying 'i' with node (1, 4)
cur word: 'affores' trying 't' with node (1, 3)
cur word: 'affores' trying 't' with node (1, 4)
cur word: 'affore' trying 's' with node (1, 3)
cur word: 'affor' trying 'd' with node (2, 0)
cur word: 'affor' trying 'e' with node (2, 0)
cur word: 'affor' trying 'd' with node (2, 1)
cur word: 'affor' trying 'e' with node (2, 1)
cur word: 'affor' trying 'd' with node (2, 2)
cur word: 'affor' trying 'e' with node (2, 2)
cur word: 'affo' trying 'r' with node (2, 0)
cur word: 'affo' trying 'r' with node (2, 1)
cur word: 'aff' trying 'r' with node (1, 0)
----cur word: 'affr' looking for {'o', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affr' trying 'o' with node (1, 1)
----cur word: 'affro' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affro' trying 'n' with node (0, 2)
----cur word: 'affron' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affron' trying 't' with node (0, 3)
----cur word: 'affront' looking for {'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affront' trying 'e' with node (0, 4)
----cur word: 'affronte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affronte' trying 'd' with node (1, 3)
cur word: 'affront' trying 's' with node (0, 4)
cur word: 'affront' trying 'i' with node (0, 4)
----cur word: 'affronti' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affronti' trying 'n' with node (1, 3)
----cur word: 'affrontin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affrontin' trying 'g' with node (1, 4)
cur word: 'affronti' trying 'n' with node (1, 4)
cur word: 'affront' trying 'e' with node (1, 3)
cur word: 'affront' trying 'i' with node (1, 3)
cur word: 'affront' trying 'e' with node (1, 4)
cur word: 'affront' trying 'i' with node (1, 4)
cur word: 'affron' trying 't' with node (1, 3)
cur word: 'affro' trying 'n' with node (2, 0)
cur word: 'affro' trying 'n' with node (2, 1)
cur word: 'affro' trying 'n' with node (2, 2)
cur word: 'affr' trying 'i' with node (1, 1)
----cur word: 'affri' looking for {'g', 'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affri' trying 'g' with node (0, 2)
----cur word: 'affrig' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affrig' trying 'h' with node (0, 3)
----cur word: 'affrigh' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affrigh' trying 't' with node (0, 4)
----cur word: 'affright' looking for {'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affright' trying 'e' with node (1, 3)
----cur word: 'affrighte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affrighte' trying 'd' with node (1, 4)
cur word: 'affright' trying 's' with node (1, 3)
cur word: 'affright' trying 'i' with node (1, 3)
----cur word: 'affrighti' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affrighti' trying 'n' with node (1, 4)
----cur word: 'affrightin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affrightin' trying 'g' with node (2, 3)
cur word: 'affrighti' trying 'n' with node (2, 2)
cur word: 'affrighti' trying 'n' with node (2, 3)
cur word: 'affrighti' trying 'n' with node (2, 4)
cur word: 'affright' trying 'e' with node (1, 4)
cur word: 'affright' trying 'i' with node (1, 4)
cur word: 'affrigh' trying 't' with node (1, 3)
cur word: 'affrigh' trying 't' with node (1, 4)
cur word: 'affrig' trying 'h' with node (1, 3)
cur word: 'affri' trying 'c' with node (0, 2)
----cur word: 'affric' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affric' trying 'a' with node (0, 3)
----cur word: 'affrica' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affrica' trying 't' with node (0, 4)
----cur word: 'affricat' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affricat' trying 'e' with node (1, 3)
----cur word: 'affricate' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affricate' trying 's' with node (1, 4)
cur word: 'affricat' trying 'i' with node (1, 3)
----cur word: 'affricati' looking for {'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affricati' trying 'v' with node (1, 4)
----cur word: 'affricativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affricativ' trying 'e' with node (2, 3)
----cur word: 'affricative' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affricative' trying 's' with node (2, 2)
cur word: 'affricativ' trying 'e' with node (2, 4)
cur word: 'affricati' trying 'v' with node (2, 2)
cur word: 'affricati' trying 'v' with node (2, 3)
cur word: 'affricati' trying 'v' with node (2, 4)
cur word: 'affricat' trying 'e' with node (1, 4)
cur word: 'affricat' trying 'i' with node (1, 4)
cur word: 'affrica' trying 't' with node (1, 3)
cur word: 'affrica' trying 't' with node (1, 4)
cur word: 'affric' trying 'a' with node (1, 3)
cur word: 'affri' trying 'g' with node (2, 0)
cur word: 'affri' trying 'c' with node (2, 0)
cur word: 'affri' trying 'g' with node (2, 1)
cur word: 'affri' trying 'c' with node (2, 1)
cur word: 'affri' trying 'g' with node (2, 2)
cur word: 'affri' trying 'c' with node (2, 2)
cur word: 'affr' trying 'a' with node (1, 1)
----cur word: 'affra' looking for {'y', 'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affra' trying 'y' with node (0, 2)
----cur word: 'affray' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affray' trying 's' with node (0, 3)
cur word: 'affra' trying 'n' with node (0, 2)
----cur word: 'affran' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affran' trying 'c' with node (0, 3)
----cur word: 'affranc' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affranc' trying 'h' with node (0, 4)
----cur word: 'affranch' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affranch' trying 'i' with node (1, 3)
----cur word: 'affranchi' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affranchi' trying 's' with node (1, 4)
----cur word: 'affranchis' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'affranchis' trying 'e' with node (2, 3)
----cur word: 'affranchise' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affranchise' trying 'd' with node (2, 2)
cur word: 'affranchise' trying 's' with node (2, 2)
cur word: 'affranchis' trying 'i' with node (2, 3)
----cur word: 'affranchisi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'affranchisi' trying 'n' with node (2, 2)
----cur word: 'affranchisin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'affranchisin' trying 'g' with node (2, 1)
cur word: 'affranchisi' trying 'n' with node (2, 4)
cur word: 'affranchisi' trying 'n' with node (3, 2)
cur word: 'affranchisi' trying 'n' with node (3, 3)
cur word: 'affranchisi' trying 'n' with node (3, 4)
cur word: 'affranchis' trying 'e' with node (2, 4)
cur word: 'affranchis' trying 'i' with node (2, 4)
cur word: 'affranchi' trying 's' with node (2, 2)
cur word: 'affranchi' trying 's' with node (2, 3)
cur word: 'affranchi' trying 's' with node (2, 4)
cur word: 'affranch' trying 'i' with node (1, 4)
cur word: 'affranc' trying 'h' with node (1, 3)
cur word: 'affranc' trying 'h' with node (1, 4)
cur word: 'affran' trying 'c' with node (1, 3)
cur word: 'affra' trying 'y' with node (2, 0)
cur word: 'affra' trying 'n' with node (2, 0)
cur word: 'affra' trying 'y' with node (2, 1)
cur word: 'affra' trying 'n' with node (2, 1)
cur word: 'affra' trying 'y' with node (2, 2)
cur word: 'affra' trying 'n' with node (2, 2)
cur word: 'affr' trying 'o' with node (2, 0)
cur word: 'affr' trying 'i' with node (2, 0)
cur word: 'affr' trying 'a' with node (2, 0)
cur word: 'affr' trying 'o' with node (2, 1)
cur word: 'affr' trying 'i' with node (2, 1)
cur word: 'affr' trying 'a' with node (2, 1)
cur word: 'aff' trying 'a' with node (1, 0)
----cur word: 'affa' looking for {'b', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'affa' trying 'b' with node (1, 1)
----cur word: 'affab' looking for {'l', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affab' trying 'l' with node (0, 2)
----cur word: 'affabl' looking for {'y', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affabl' trying 'y' with node (0, 3)
cur word: 'affabl' trying 'e' with node (0, 3)
cur word: 'affab' trying 'i' with node (0, 2)
----cur word: 'affabi' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affabi' trying 'l' with node (0, 3)
----cur word: 'affabil' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affabil' trying 'i' with node (0, 4)
----cur word: 'affabili' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'affabili' trying 't' with node (1, 3)
----cur word: 'affabilit' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'affabilit' trying 'y' with node (1, 4)
cur word: 'affabili' trying 't' with node (1, 4)
cur word: 'affabil' trying 'i' with node (1, 3)
cur word: 'affabil' trying 'i' with node (1, 4)
cur word: 'affabi' trying 'l' with node (1, 3)
cur word: 'affab' trying 'l' with node (2, 0)
cur word: 'affab' trying 'i' with node (2, 0)
cur word: 'affab' trying 'l' with node (2, 1)
cur word: 'affab' trying 'i' with node (2, 1)
cur word: 'affab' trying 'l' with node (2, 2)
cur word: 'affab' trying 'i' with node (2, 2)
cur word: 'affa' trying 'i' with node (1, 1)
----cur word: 'affai' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'affai' trying 'r' with node (0, 2)
----cur word: 'affair' looking for {'e', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'affair' trying 'e' with node (0, 3)
----cur word: 'affaire' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'affaire' trying 's' with node (0, 4)
cur word: 'affair' trying 's' with node (0, 3)
cur word: 'affair' trying 'e' with node (1, 3)
cur word: 'affai' trying 'r' with node (2, 0)
cur word: 'affai' trying 'r' with node (2, 1)
cur word: 'affai' trying 'r' with node (2, 2)
cur word: 'affa' trying 'b' with node (2, 0)
cur word: 'affa' trying 'i' with node (2, 0)
cur word: 'affa' trying 'b' with node (2, 1)
cur word: 'affa' trying 'i' with node (2, 1)
cur word: 'aff' trying 'l' with node (1, 1)
cur word: 'aff' trying 'u' with node (1, 1)
cur word: 'aff' trying 'i' with node (1, 1)
cur word: 'aff' trying 'e' with node (1, 1)
cur word: 'aff' trying 'o' with node (1, 1)
cur word: 'aff' trying 'r' with node (1, 1)
cur word: 'aff' trying 'a' with node (1, 1)
cur word: 'af' trying 'l' with node (0, 0)
----cur word: 'afl' looking for {'u', 'o', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afl' trying 'u' with node (1, 0)
----cur word: 'aflu' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'aflu' trying 't' with node (1, 1)
----cur word: 'aflut' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aflut' trying 't' with node (0, 2)
----cur word: 'aflutt' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aflutt' trying 'e' with node (0, 3)
----cur word: 'aflutte' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aflutte' trying 'r' with node (0, 4)
cur word: 'aflutt' trying 'e' with node (1, 3)
cur word: 'aflut' trying 't' with node (2, 0)
cur word: 'aflut' trying 't' with node (2, 1)
cur word: 'aflut' trying 't' with node (2, 2)
cur word: 'aflu' trying 't' with node (2, 0)
cur word: 'aflu' trying 't' with node (2, 1)
cur word: 'afl' trying 'o' with node (1, 0)
----cur word: 'aflo' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'aflo' trying 'a' with node (1, 1)
----cur word: 'afloa' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afloa' trying 't' with node (0, 2)
cur word: 'aflo' trying 'a' with node (2, 0)
cur word: 'aflo' trying 'a' with node (2, 1)
cur word: 'afl' trying 'a' with node (1, 0)
----cur word: 'afla' looking for {'t', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afla' trying 't' with node (1, 1)
----cur word: 'aflat' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aflat' trying 'o' with node (0, 2)
----cur word: 'aflato' looking for {'x'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aflato' trying 'x' with node (0, 3)
----cur word: 'aflatox' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aflatox' trying 'i' with node (0, 4)
----cur word: 'aflatoxi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aflatoxi' trying 'n' with node (1, 3)
cur word: 'aflatox' trying 'i' with node (1, 3)
cur word: 'aflatox' trying 'i' with node (1, 4)
cur word: 'aflato' trying 'x' with node (1, 3)
cur word: 'aflat' trying 'o' with node (2, 0)
cur word: 'aflat' trying 'o' with node (2, 1)
cur word: 'aflat' trying 'o' with node (2, 2)
cur word: 'afla' trying 'm' with node (1, 1)
----cur word: 'aflam' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aflam' trying 'e' with node (0, 2)
cur word: 'afla' trying 't' with node (2, 0)
cur word: 'afla' trying 'm' with node (2, 0)
cur word: 'afla' trying 't' with node (2, 1)
cur word: 'afla' trying 'm' with node (2, 1)
cur word: 'afl' trying 'u' with node (1, 1)
cur word: 'afl' trying 'o' with node (1, 1)
cur word: 'afl' trying 'a' with node (1, 1)
cur word: 'af' trying 't' with node (0, 0)
----cur word: 'aft' looking for {'o', 'e', 'i', 'm'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'aft' trying 'o' with node (1, 0)
----cur word: 'afto' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afto' trying 's' with node (1, 1)
cur word: 'aft' trying 'e' with node (1, 0)
----cur word: 'afte' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afte' trying 'r' with node (1, 1)
----cur word: 'after' looking for {'d', 'l', 't', 'g', 'p', 'i', 'b', 'n', 'y', 'm', 'e', 's', 'w', 'h', 'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'after' trying 'd' with node (0, 2)
----cur word: 'afterd' looking for {'e', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterd' trying 'e' with node (0, 3)
----cur word: 'afterde' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterde' trying 'c' with node (0, 4)
----cur word: 'afterdec' looking for {'k'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterdec' trying 'k' with node (1, 3)
----cur word: 'afterdeck' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterdeck' trying 's' with node (1, 4)
cur word: 'afterdec' trying 'k' with node (1, 4)
cur word: 'afterde' trying 'c' with node (1, 3)
cur word: 'afterde' trying 'c' with node (1, 4)
cur word: 'afterd' trying 'a' with node (0, 3)
----cur word: 'afterda' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterda' trying 'm' with node (0, 4)
----cur word: 'afterdam' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterdam' trying 'p' with node (1, 3)
----cur word: 'afterdamp' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterdamp' trying 's' with node (1, 4)
cur word: 'afterdam' trying 'p' with node (1, 4)
cur word: 'afterda' trying 'm' with node (1, 3)
cur word: 'afterda' trying 'm' with node (1, 4)
cur word: 'afterd' trying 'e' with node (1, 3)
cur word: 'afterd' trying 'a' with node (1, 3)
cur word: 'after' trying 'l' with node (0, 2)
----cur word: 'afterl' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterl' trying 'i' with node (0, 3)
----cur word: 'afterli' looking for {'f', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterli' trying 'f' with node (0, 4)
----cur word: 'afterlif' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterlif' trying 'e' with node (1, 3)
cur word: 'afterli' trying 'v' with node (0, 4)
----cur word: 'afterliv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterliv' trying 'e' with node (1, 3)
----cur word: 'afterlive' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterlive' trying 's' with node (1, 4)
cur word: 'afterliv' trying 'e' with node (1, 4)
cur word: 'afterli' trying 'f' with node (1, 3)
cur word: 'afterli' trying 'v' with node (1, 3)
cur word: 'afterli' trying 'f' with node (1, 4)
cur word: 'afterli' trying 'v' with node (1, 4)
cur word: 'afterl' trying 'i' with node (1, 3)
cur word: 'after' trying 't' with node (0, 2)
----cur word: 'aftert' looking for {'h', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aftert' trying 'h' with node (0, 3)
----cur word: 'afterth' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterth' trying 'o' with node (0, 4)
----cur word: 'aftertho' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftertho' trying 'u' with node (1, 3)
----cur word: 'afterthou' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterthou' trying 'g' with node (1, 4)
----cur word: 'afterthoug' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterthoug' trying 'h' with node (2, 3)
----cur word: 'afterthough' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'afterthough' trying 't' with node (2, 2)
----cur word: 'afterthought' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'afterthought' trying 's' with node (2, 1)
cur word: 'afterthough' trying 't' with node (2, 4)
cur word: 'afterthough' trying 't' with node (3, 2)
cur word: 'afterthough' trying 't' with node (3, 3)
cur word: 'afterthough' trying 't' with node (3, 4)
cur word: 'afterthoug' trying 'h' with node (2, 4)
cur word: 'afterthou' trying 'g' with node (2, 2)
cur word: 'afterthou' trying 'g' with node (2, 3)
cur word: 'afterthou' trying 'g' with node (2, 4)
cur word: 'aftertho' trying 'u' with node (1, 4)
cur word: 'afterth' trying 'o' with node (1, 3)
cur word: 'afterth' trying 'o' with node (1, 4)
cur word: 'aftert' trying 'i' with node (0, 3)
----cur word: 'afterti' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterti' trying 'm' with node (0, 4)
----cur word: 'aftertim' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftertim' trying 'e' with node (1, 3)
cur word: 'afterti' trying 'm' with node (1, 3)
cur word: 'afterti' trying 'm' with node (1, 4)
cur word: 'aftert' trying 'a' with node (0, 3)
----cur word: 'afterta' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterta' trying 's' with node (0, 4)
----cur word: 'aftertas' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftertas' trying 't' with node (1, 3)
----cur word: 'aftertast' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftertast' trying 'e' with node (1, 4)
----cur word: 'aftertaste' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftertaste' trying 's' with node (2, 3)
cur word: 'aftertast' trying 'e' with node (2, 2)
cur word: 'aftertast' trying 'e' with node (2, 3)
cur word: 'aftertast' trying 'e' with node (2, 4)
cur word: 'aftertas' trying 't' with node (1, 4)
cur word: 'afterta' trying 's' with node (1, 3)
cur word: 'afterta' trying 's' with node (1, 4)
cur word: 'aftert' trying 'h' with node (1, 3)
cur word: 'aftert' trying 'i' with node (1, 3)
cur word: 'aftert' trying 'a' with node (1, 3)
cur word: 'after' trying 'g' with node (0, 2)
----cur word: 'afterg' looking for {'l', 'u', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterg' trying 'l' with node (0, 3)
----cur word: 'aftergl' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftergl' trying 'o' with node (0, 4)
----cur word: 'afterglo' looking for {'w'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterglo' trying 'w' with node (1, 3)
----cur word: 'afterglow' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterglow' trying 's' with node (1, 4)
cur word: 'afterglo' trying 'w' with node (1, 4)
cur word: 'aftergl' trying 'o' with node (1, 3)
cur word: 'aftergl' trying 'o' with node (1, 4)
cur word: 'afterg' trying 'u' with node (0, 3)
----cur word: 'aftergu' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftergu' trying 'a' with node (0, 4)
----cur word: 'aftergua' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftergua' trying 'r' with node (1, 3)
----cur word: 'afterguar' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterguar' trying 'd' with node (1, 4)
cur word: 'aftergua' trying 'r' with node (1, 4)
cur word: 'aftergu' trying 'a' with node (1, 3)
cur word: 'aftergu' trying 'a' with node (1, 4)
cur word: 'afterg' trying 'r' with node (0, 3)
----cur word: 'aftergr' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftergr' trying 'o' with node (0, 4)
----cur word: 'aftergro' looking for {'w'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftergro' trying 'w' with node (1, 3)
----cur word: 'aftergrow' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftergrow' trying 't' with node (1, 4)
----cur word: 'aftergrowt' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftergrowt' trying 'h' with node (2, 3)
cur word: 'aftergrow' trying 't' with node (2, 2)
cur word: 'aftergrow' trying 't' with node (2, 3)
cur word: 'aftergrow' trying 't' with node (2, 4)
cur word: 'aftergro' trying 'w' with node (1, 4)
cur word: 'aftergr' trying 'o' with node (1, 3)
cur word: 'aftergr' trying 'o' with node (1, 4)
cur word: 'afterg' trying 'l' with node (1, 3)
cur word: 'afterg' trying 'u' with node (1, 3)
cur word: 'afterg' trying 'r' with node (1, 3)
cur word: 'after' trying 'p' with node (0, 2)
----cur word: 'afterp' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterp' trying 'i' with node (0, 3)
----cur word: 'afterpi' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterpi' trying 'e' with node (0, 4)
----cur word: 'afterpie' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterpie' trying 'c' with node (1, 3)
----cur word: 'afterpiec' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterpiec' trying 'e' with node (1, 4)
----cur word: 'afterpiece' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterpiece' trying 's' with node (2, 3)
cur word: 'afterpiec' trying 'e' with node (2, 2)
cur word: 'afterpiec' trying 'e' with node (2, 3)
cur word: 'afterpiec' trying 'e' with node (2, 4)
cur word: 'afterpie' trying 'c' with node (1, 4)
cur word: 'afterpi' trying 'e' with node (1, 3)
cur word: 'afterpi' trying 'e' with node (1, 4)
cur word: 'afterp' trying 'i' with node (1, 3)
cur word: 'after' trying 'i' with node (0, 2)
----cur word: 'afteri' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afteri' trying 'm' with node (0, 3)
----cur word: 'afterim' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterim' trying 'a' with node (0, 4)
----cur word: 'afterima' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterima' trying 'g' with node (1, 3)
----cur word: 'afterimag' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterimag' trying 'e' with node (1, 4)
----cur word: 'afterimage' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterimage' trying 's' with node (2, 3)
cur word: 'afterimag' trying 'e' with node (2, 2)
cur word: 'afterimag' trying 'e' with node (2, 3)
cur word: 'afterimag' trying 'e' with node (2, 4)
cur word: 'afterima' trying 'g' with node (1, 4)
cur word: 'afterim' trying 'a' with node (1, 3)
cur word: 'afterim' trying 'a' with node (1, 4)
cur word: 'afteri' trying 'm' with node (1, 3)
cur word: 'after' trying 'b' with node (0, 2)
----cur word: 'afterb' looking for {'o', 'r', 'u', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterb' trying 'o' with node (0, 3)
----cur word: 'afterbo' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterbo' trying 'd' with node (0, 4)
----cur word: 'afterbod' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterbod' trying 'y' with node (1, 3)
cur word: 'afterbo' trying 'd' with node (1, 3)
cur word: 'afterbo' trying 'd' with node (1, 4)
cur word: 'afterb' trying 'r' with node (0, 3)
----cur word: 'afterbr' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterbr' trying 'a' with node (0, 4)
----cur word: 'afterbra' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterbra' trying 'i' with node (1, 3)
----cur word: 'afterbrai' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterbrai' trying 'n' with node (1, 4)
cur word: 'afterbra' trying 'i' with node (1, 4)
cur word: 'afterbr' trying 'a' with node (1, 3)
cur word: 'afterbr' trying 'a' with node (1, 4)
cur word: 'afterb' trying 'u' with node (0, 3)
----cur word: 'afterbu' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterbu' trying 'r' with node (0, 4)
----cur word: 'afterbur' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterbur' trying 'n' with node (1, 3)
----cur word: 'afterburn' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterburn' trying 'e' with node (1, 4)
----cur word: 'afterburne' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterburne' trying 'r' with node (2, 3)
----cur word: 'afterburner' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'afterburner' trying 's' with node (2, 2)
cur word: 'afterburne' trying 'r' with node (2, 4)
cur word: 'afterburn' trying 'i' with node (1, 4)
----cur word: 'afterburni' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterburni' trying 'n' with node (2, 3)
----cur word: 'afterburnin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'afterburnin' trying 'g' with node (2, 2)
cur word: 'afterburni' trying 'n' with node (2, 4)
cur word: 'afterburn' trying 'e' with node (2, 2)
cur word: 'afterburn' trying 'i' with node (2, 2)
cur word: 'afterburn' trying 'e' with node (2, 3)
cur word: 'afterburn' trying 'i' with node (2, 3)
cur word: 'afterburn' trying 'e' with node (2, 4)
cur word: 'afterburn' trying 'i' with node (2, 4)
cur word: 'afterbur' trying 'n' with node (1, 4)
cur word: 'afterbu' trying 'r' with node (1, 3)
cur word: 'afterbu' trying 'r' with node (1, 4)
cur word: 'afterb' trying 'i' with node (0, 3)
----cur word: 'afterbi' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterbi' trying 'r' with node (0, 4)
----cur word: 'afterbir' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterbir' trying 't' with node (1, 3)
----cur word: 'afterbirt' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterbirt' trying 'h' with node (1, 4)
----cur word: 'afterbirth' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterbirth' trying 's' with node (2, 3)
cur word: 'afterbirt' trying 'h' with node (2, 2)
cur word: 'afterbirt' trying 'h' with node (2, 3)
cur word: 'afterbirt' trying 'h' with node (2, 4)
cur word: 'afterbir' trying 't' with node (1, 4)
cur word: 'afterbi' trying 'r' with node (1, 3)
cur word: 'afterbi' trying 'r' with node (1, 4)
cur word: 'afterb' trying 'o' with node (1, 3)
cur word: 'afterb' trying 'r' with node (1, 3)
cur word: 'afterb' trying 'u' with node (1, 3)
cur word: 'afterb' trying 'i' with node (1, 3)
cur word: 'after' trying 'n' with node (0, 2)
----cur word: 'aftern' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aftern' trying 'o' with node (0, 3)
----cur word: 'afterno' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterno' trying 'o' with node (0, 4)
----cur word: 'afternoo' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afternoo' trying 'n' with node (1, 3)
----cur word: 'afternoon' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afternoon' trying 's' with node (1, 4)
cur word: 'afternoo' trying 'n' with node (1, 4)
cur word: 'afterno' trying 'o' with node (1, 3)
cur word: 'afterno' trying 'o' with node (1, 4)
cur word: 'aftern' trying 'o' with node (1, 3)
cur word: 'after' trying 'y' with node (0, 2)
----cur word: 'aftery' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aftery' trying 'e' with node (0, 3)
----cur word: 'afterye' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterye' trying 'a' with node (0, 4)
----cur word: 'afteryea' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afteryea' trying 'r' with node (1, 3)
----cur word: 'afteryear' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afteryear' trying 's' with node (1, 4)
cur word: 'afteryea' trying 'r' with node (1, 4)
cur word: 'afterye' trying 'a' with node (1, 3)
cur word: 'afterye' trying 'a' with node (1, 4)
cur word: 'aftery' trying 'e' with node (1, 3)
cur word: 'after' trying 'm' with node (0, 2)
----cur word: 'afterm' looking for {'o', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterm' trying 'o' with node (0, 3)
----cur word: 'aftermo' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftermo' trying 's' with node (0, 4)
----cur word: 'aftermos' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftermos' trying 't' with node (1, 3)
cur word: 'aftermo' trying 's' with node (1, 3)
cur word: 'aftermo' trying 's' with node (1, 4)
cur word: 'afterm' trying 'a' with node (0, 3)
----cur word: 'afterma' looking for {'r', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterma' trying 'r' with node (0, 4)
----cur word: 'aftermar' looking for {'k'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftermar' trying 'k' with node (1, 3)
----cur word: 'aftermark' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftermark' trying 'e' with node (1, 4)
----cur word: 'aftermarke' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftermarke' trying 't' with node (2, 3)
----cur word: 'aftermarket' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'aftermarket' trying 's' with node (2, 2)
cur word: 'aftermarke' trying 't' with node (2, 4)
cur word: 'aftermark' trying 'e' with node (2, 2)
cur word: 'aftermark' trying 'e' with node (2, 3)
cur word: 'aftermark' trying 'e' with node (2, 4)
cur word: 'aftermar' trying 'k' with node (1, 4)
cur word: 'afterma' trying 't' with node (0, 4)
----cur word: 'aftermat' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftermat' trying 'h' with node (1, 3)
----cur word: 'aftermath' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftermath' trying 's' with node (1, 4)
cur word: 'aftermat' trying 'h' with node (1, 4)
cur word: 'afterma' trying 'r' with node (1, 3)
cur word: 'afterma' trying 't' with node (1, 3)
cur word: 'afterma' trying 'r' with node (1, 4)
cur word: 'afterma' trying 't' with node (1, 4)
cur word: 'afterm' trying 'o' with node (1, 3)
cur word: 'afterm' trying 'a' with node (1, 3)
cur word: 'after' trying 'e' with node (0, 2)
----cur word: 'aftere' looking for {'f'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aftere' trying 'f' with node (0, 3)
----cur word: 'afteref' looking for {'f'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afteref' trying 'f' with node (0, 4)
----cur word: 'aftereff' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftereff' trying 'e' with node (1, 3)
----cur word: 'aftereffe' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftereffe' trying 'c' with node (1, 4)
----cur word: 'aftereffec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftereffec' trying 't' with node (2, 3)
----cur word: 'aftereffect' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'aftereffect' trying 's' with node (2, 2)
cur word: 'aftereffec' trying 't' with node (2, 4)
cur word: 'aftereffe' trying 'c' with node (2, 2)
cur word: 'aftereffe' trying 'c' with node (2, 3)
cur word: 'aftereffe' trying 'c' with node (2, 4)
cur word: 'aftereff' trying 'e' with node (1, 4)
cur word: 'afteref' trying 'f' with node (1, 3)
cur word: 'afteref' trying 'f' with node (1, 4)
cur word: 'aftere' trying 'f' with node (1, 3)
cur word: 'after' trying 's' with node (0, 2)
----cur word: 'afters' looking for {'h', 'c', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afters' trying 'h' with node (0, 3)
----cur word: 'aftersh' looking for {'o', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftersh' trying 'o' with node (0, 4)
----cur word: 'aftersho' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftersho' trying 'c' with node (1, 3)
----cur word: 'aftershoc' looking for {'k'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftershoc' trying 'k' with node (1, 4)
----cur word: 'aftershock' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftershock' trying 's' with node (2, 3)
cur word: 'aftershoc' trying 'k' with node (2, 2)
cur word: 'aftershoc' trying 'k' with node (2, 3)
cur word: 'aftershoc' trying 'k' with node (2, 4)
cur word: 'aftersho' trying 'c' with node (1, 4)
cur word: 'aftersh' trying 'a' with node (0, 4)
----cur word: 'aftersha' looking for {'f', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftersha' trying 'f' with node (1, 3)
----cur word: 'aftershaf' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftershaf' trying 't' with node (1, 4)
----cur word: 'aftershaft' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftershaft' trying 's' with node (2, 3)
cur word: 'aftershaf' trying 't' with node (2, 2)
cur word: 'aftershaf' trying 't' with node (2, 3)
cur word: 'aftershaf' trying 't' with node (2, 4)
cur word: 'aftersha' trying 'v' with node (1, 3)
----cur word: 'aftershav' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftershav' trying 'e' with node (1, 4)
----cur word: 'aftershave' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftershave' trying 's' with node (2, 3)
cur word: 'aftershav' trying 'e' with node (2, 2)
cur word: 'aftershav' trying 'e' with node (2, 3)
cur word: 'aftershav' trying 'e' with node (2, 4)
cur word: 'aftersha' trying 'f' with node (1, 4)
cur word: 'aftersha' trying 'v' with node (1, 4)
cur word: 'aftersh' trying 'o' with node (1, 3)
cur word: 'aftersh' trying 'a' with node (1, 3)
cur word: 'aftersh' trying 'o' with node (1, 4)
cur word: 'aftersh' trying 'a' with node (1, 4)
cur word: 'afters' trying 'c' with node (0, 3)
----cur word: 'aftersc' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftersc' trying 'h' with node (0, 4)
----cur word: 'aftersch' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftersch' trying 'o' with node (1, 3)
----cur word: 'afterscho' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterscho' trying 'o' with node (1, 4)
----cur word: 'afterschoo' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterschoo' trying 'l' with node (2, 3)
cur word: 'afterscho' trying 'o' with node (2, 2)
cur word: 'afterscho' trying 'o' with node (2, 3)
cur word: 'afterscho' trying 'o' with node (2, 4)
cur word: 'aftersch' trying 'o' with node (1, 4)
cur word: 'aftersc' trying 'h' with node (1, 3)
cur word: 'aftersc' trying 'h' with node (1, 4)
cur word: 'afters' trying 'e' with node (0, 3)
----cur word: 'afterse' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterse' trying 'n' with node (0, 4)
----cur word: 'aftersen' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftersen' trying 's' with node (1, 3)
----cur word: 'aftersens' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aftersens' trying 'a' with node (1, 4)
----cur word: 'aftersensa' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aftersensa' trying 't' with node (2, 3)
----cur word: 'aftersensat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'aftersensat' trying 'i' with node (2, 2)
----cur word: 'aftersensati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'aftersensati' trying 'o' with node (2, 1)
----cur word: 'aftersensatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'aftersensatio' trying 'n' with node (2, 0)
----cur word: 'aftersensation' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'aftersensation' trying 's' with node (3, 0)
cur word: 'aftersensatio' trying 'n' with node (3, 0)
cur word: 'aftersensatio' trying 'n' with node (3, 1)
cur word: 'aftersensatio' trying 'n' with node (3, 2)
cur word: 'aftersensati' trying 'o' with node (3, 1)
cur word: 'aftersensati' trying 'o' with node (3, 2)
cur word: 'aftersensati' trying 'o' with node (3, 3)
cur word: 'aftersensat' trying 'i' with node (2, 4)
cur word: 'aftersensat' trying 'i' with node (3, 2)
cur word: 'aftersensat' trying 'i' with node (3, 3)
cur word: 'aftersensat' trying 'i' with node (3, 4)
cur word: 'aftersensa' trying 't' with node (2, 4)
cur word: 'aftersens' trying 'a' with node (2, 2)
cur word: 'aftersens' trying 'a' with node (2, 3)
cur word: 'aftersens' trying 'a' with node (2, 4)
cur word: 'aftersen' trying 's' with node (1, 4)
cur word: 'afterse' trying 'n' with node (1, 3)
cur word: 'afterse' trying 'n' with node (1, 4)
cur word: 'afters' trying 'h' with node (1, 3)
cur word: 'afters' trying 'c' with node (1, 3)
cur word: 'afters' trying 'e' with node (1, 3)
cur word: 'after' trying 'w' with node (0, 2)
----cur word: 'afterw' looking for {'o', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterw' trying 'o' with node (0, 3)
----cur word: 'afterwo' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterwo' trying 'r' with node (0, 4)
----cur word: 'afterwor' looking for {'d', 'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterwor' trying 'd' with node (1, 3)
----cur word: 'afterword' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterword' trying 's' with node (1, 4)
cur word: 'afterwor' trying 'l' with node (1, 3)
----cur word: 'afterworl' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterworl' trying 'd' with node (1, 4)
----cur word: 'afterworld' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'afterworld' trying 's' with node (2, 3)
cur word: 'afterworl' trying 'd' with node (2, 2)
cur word: 'afterworl' trying 'd' with node (2, 3)
cur word: 'afterworl' trying 'd' with node (2, 4)
cur word: 'afterwor' trying 'd' with node (1, 4)
cur word: 'afterwor' trying 'l' with node (1, 4)
cur word: 'afterwo' trying 'r' with node (1, 3)
cur word: 'afterwo' trying 'r' with node (1, 4)
cur word: 'afterw' trying 'a' with node (0, 3)
----cur word: 'afterwa' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterwa' trying 'r' with node (0, 4)
----cur word: 'afterwar' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterwar' trying 'd' with node (1, 3)
----cur word: 'afterward' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'afterward' trying 's' with node (1, 4)
cur word: 'afterwar' trying 'd' with node (1, 4)
cur word: 'afterwa' trying 'r' with node (1, 3)
cur word: 'afterwa' trying 'r' with node (1, 4)
cur word: 'afterw' trying 'o' with node (1, 3)
cur word: 'afterw' trying 'a' with node (1, 3)
cur word: 'after' trying 'h' with node (0, 2)
----cur word: 'afterh' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterh' trying 'e' with node (0, 3)
----cur word: 'afterhe' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterhe' trying 'a' with node (0, 4)
----cur word: 'afterhea' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'afterhea' trying 't' with node (1, 3)
cur word: 'afterhe' trying 'a' with node (1, 3)
cur word: 'afterhe' trying 'a' with node (1, 4)
cur word: 'afterh' trying 'e' with node (1, 3)
cur word: 'after' trying 'c' with node (0, 2)
----cur word: 'afterc' looking for {'l', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afterc' trying 'l' with node (0, 3)
----cur word: 'aftercl' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aftercl' trying 'a' with node (0, 4)
----cur word: 'aftercla' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftercla' trying 'p' with node (1, 3)
cur word: 'aftercl' trying 'a' with node (1, 3)
cur word: 'aftercl' trying 'a' with node (1, 4)
cur word: 'afterc' trying 'a' with node (0, 3)
----cur word: 'afterca' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afterca' trying 'r' with node (0, 4)
----cur word: 'aftercar' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aftercar' trying 'e' with node (1, 3)
cur word: 'afterca' trying 'r' with node (1, 3)
cur word: 'afterca' trying 'r' with node (1, 4)
cur word: 'afterc' trying 'l' with node (1, 3)
cur word: 'afterc' trying 'a' with node (1, 3)
cur word: 'after' trying 'd' with node (2, 0)
cur word: 'after' trying 'l' with node (2, 0)
cur word: 'after' trying 't' with node (2, 0)
cur word: 'after' trying 'g' with node (2, 0)
cur word: 'after' trying 'p' with node (2, 0)
cur word: 'after' trying 'i' with node (2, 0)
cur word: 'after' trying 'b' with node (2, 0)
cur word: 'after' trying 'n' with node (2, 0)
cur word: 'after' trying 'y' with node (2, 0)
cur word: 'after' trying 'm' with node (2, 0)
cur word: 'after' trying 'e' with node (2, 0)
cur word: 'after' trying 's' with node (2, 0)
cur word: 'after' trying 'w' with node (2, 0)
cur word: 'after' trying 'h' with node (2, 0)
cur word: 'after' trying 'c' with node (2, 0)
cur word: 'after' trying 'd' with node (2, 1)
cur word: 'after' trying 'l' with node (2, 1)
cur word: 'after' trying 't' with node (2, 1)
cur word: 'after' trying 'g' with node (2, 1)
cur word: 'after' trying 'p' with node (2, 1)
cur word: 'after' trying 'i' with node (2, 1)
cur word: 'after' trying 'b' with node (2, 1)
cur word: 'after' trying 'n' with node (2, 1)
cur word: 'after' trying 'y' with node (2, 1)
cur word: 'after' trying 'm' with node (2, 1)
cur word: 'after' trying 'e' with node (2, 1)
cur word: 'after' trying 's' with node (2, 1)
cur word: 'after' trying 'w' with node (2, 1)
cur word: 'after' trying 'h' with node (2, 1)
cur word: 'after' trying 'c' with node (2, 1)
cur word: 'after' trying 'd' with node (2, 2)
cur word: 'after' trying 'l' with node (2, 2)
cur word: 'after' trying 't' with node (2, 2)
cur word: 'after' trying 'g' with node (2, 2)
cur word: 'after' trying 'p' with node (2, 2)
cur word: 'after' trying 'i' with node (2, 2)
cur word: 'after' trying 'b' with node (2, 2)
cur word: 'after' trying 'n' with node (2, 2)
cur word: 'after' trying 'y' with node (2, 2)
cur word: 'after' trying 'm' with node (2, 2)
cur word: 'after' trying 'e' with node (2, 2)
cur word: 'after' trying 's' with node (2, 2)
cur word: 'after' trying 'w' with node (2, 2)
cur word: 'after' trying 'h' with node (2, 2)
cur word: 'after' trying 'c' with node (2, 2)
cur word: 'afte' trying 'r' with node (2, 0)
cur word: 'afte' trying 'r' with node (2, 1)
cur word: 'aft' trying 'i' with node (1, 0)
----cur word: 'afti' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afti' trying 'e' with node (1, 1)
----cur word: 'aftie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aftie' trying 's' with node (0, 2)
cur word: 'afti' trying 'e' with node (2, 0)
cur word: 'afti' trying 'e' with node (2, 1)
cur word: 'aft' trying 'm' with node (1, 0)
----cur word: 'aftm' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'aftm' trying 'o' with node (1, 1)
----cur word: 'aftmo' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aftmo' trying 's' with node (0, 2)
----cur word: 'aftmos' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aftmos' trying 't' with node (0, 3)
cur word: 'aftmo' trying 's' with node (2, 0)
cur word: 'aftmo' trying 's' with node (2, 1)
cur word: 'aftmo' trying 's' with node (2, 2)
cur word: 'aftm' trying 'o' with node (2, 0)
cur word: 'aftm' trying 'o' with node (2, 1)
cur word: 'aft' trying 'o' with node (1, 1)
cur word: 'aft' trying 'e' with node (1, 1)
cur word: 'aft' trying 'i' with node (1, 1)
cur word: 'aft' trying 'm' with node (1, 1)
cur word: 'af' trying 'g' with node (0, 0)
----cur word: 'afg' looking for {'h'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afg' trying 'h' with node (1, 0)
----cur word: 'afgh' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afgh' trying 'a' with node (1, 1)
----cur word: 'afgha' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afgha' trying 'n' with node (0, 2)
----cur word: 'afghan' looking for {'s', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afghan' trying 's' with node (0, 3)
cur word: 'afghan' trying 'i' with node (0, 3)
----cur word: 'afghani' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afghani' trying 's' with node (0, 4)
cur word: 'afghan' trying 'i' with node (1, 3)
cur word: 'afgha' trying 'n' with node (2, 0)
cur word: 'afgha' trying 'n' with node (2, 1)
cur word: 'afgha' trying 'n' with node (2, 2)
cur word: 'afgh' trying 'a' with node (2, 0)
cur word: 'afgh' trying 'a' with node (2, 1)
cur word: 'afg' trying 'h' with node (1, 1)
cur word: 'af' trying 'i' with node (0, 0)
----cur word: 'afi' looking for {'c', 'e', 'r'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afi' trying 'c' with node (1, 0)
----cur word: 'afic' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afic' trying 'i' with node (1, 1)
----cur word: 'afici' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afici' trying 'o' with node (0, 2)
----cur word: 'aficio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aficio' trying 'n' with node (0, 3)
----cur word: 'aficion' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aficion' trying 'a' with node (0, 4)
----cur word: 'aficiona' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aficiona' trying 'd' with node (1, 3)
----cur word: 'aficionad' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aficionad' trying 'o' with node (1, 4)
----cur word: 'aficionado' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aficionado' trying 's' with node (2, 3)
cur word: 'aficionad' trying 'o' with node (2, 2)
cur word: 'aficionad' trying 'o' with node (2, 3)
cur word: 'aficionad' trying 'o' with node (2, 4)
cur word: 'aficiona' trying 'd' with node (1, 4)
cur word: 'aficion' trying 'a' with node (1, 3)
cur word: 'aficion' trying 'a' with node (1, 4)
cur word: 'aficio' trying 'n' with node (1, 3)
cur word: 'afici' trying 'o' with node (2, 0)
cur word: 'afici' trying 'o' with node (2, 1)
cur word: 'afici' trying 'o' with node (2, 2)
cur word: 'afic' trying 'i' with node (2, 0)
cur word: 'afic' trying 'i' with node (2, 1)
cur word: 'afi' trying 'e' with node (1, 0)
----cur word: 'afie' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afie' trying 'l' with node (1, 1)
----cur word: 'afiel' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afiel' trying 'd' with node (0, 2)
cur word: 'afie' trying 'l' with node (2, 0)
cur word: 'afie' trying 'l' with node (2, 1)
cur word: 'afi' trying 'r' with node (1, 0)
----cur word: 'afir' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afir' trying 'e' with node (1, 1)
cur word: 'afi' trying 'c' with node (1, 1)
cur word: 'afi' trying 'e' with node (1, 1)
cur word: 'afi' trying 'r' with node (1, 1)
cur word: 'af' trying 'e' with node (0, 0)
----cur word: 'afe' looking for {'b', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afe' trying 'b' with node (1, 0)
----cur word: 'afeb' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afeb' trying 'r' with node (1, 1)
----cur word: 'afebr' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afebr' trying 'i' with node (0, 2)
----cur word: 'afebri' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afebri' trying 'l' with node (0, 3)
----cur word: 'afebril' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'afebril' trying 'e' with node (0, 4)
cur word: 'afebri' trying 'l' with node (1, 3)
cur word: 'afebr' trying 'i' with node (2, 0)
cur word: 'afebr' trying 'i' with node (2, 1)
cur word: 'afebr' trying 'i' with node (2, 2)
cur word: 'afeb' trying 'r' with node (2, 0)
cur word: 'afeb' trying 'r' with node (2, 1)
cur word: 'afe' trying 'a' with node (1, 0)
----cur word: 'afea' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afea' trying 'r' with node (1, 1)
----cur word: 'afear' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afear' trying 'd' with node (0, 2)
cur word: 'afea' trying 'r' with node (2, 0)
cur word: 'afea' trying 'r' with node (2, 1)
cur word: 'afe' trying 'b' with node (1, 1)
cur word: 'afe' trying 'a' with node (1, 1)
cur word: 'af' trying 'o' with node (0, 0)
----cur word: 'afo' looking for {'o', 'r', 'u'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afo' trying 'o' with node (1, 0)
----cur word: 'afoo' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afoo' trying 't' with node (1, 1)
cur word: 'afo' trying 'r' with node (1, 0)
----cur word: 'afor' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afor' trying 'e' with node (1, 1)
----cur word: 'afore' looking for {'s', 't', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afore' trying 's' with node (0, 2)
----cur word: 'afores' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'afores' trying 'a' with node (0, 3)
----cur word: 'aforesa' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aforesa' trying 'i' with node (0, 4)
----cur word: 'aforesai' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aforesai' trying 'd' with node (1, 3)
cur word: 'aforesa' trying 'i' with node (1, 3)
cur word: 'aforesa' trying 'i' with node (1, 4)
cur word: 'afores' trying 'a' with node (1, 3)
cur word: 'afore' trying 't' with node (0, 2)
----cur word: 'aforet' looking for {'h', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aforet' trying 'h' with node (0, 3)
----cur word: 'aforeth' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aforeth' trying 'o' with node (0, 4)
----cur word: 'aforetho' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aforetho' trying 'u' with node (1, 3)
----cur word: 'aforethou' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aforethou' trying 'g' with node (1, 4)
----cur word: 'aforethoug' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aforethoug' trying 'h' with node (2, 3)
----cur word: 'aforethough' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'aforethough' trying 't' with node (2, 2)
cur word: 'aforethoug' trying 'h' with node (2, 4)
cur word: 'aforethou' trying 'g' with node (2, 2)
cur word: 'aforethou' trying 'g' with node (2, 3)
cur word: 'aforethou' trying 'g' with node (2, 4)
cur word: 'aforetho' trying 'u' with node (1, 4)
cur word: 'aforeth' trying 'o' with node (1, 3)
cur word: 'aforeth' trying 'o' with node (1, 4)
cur word: 'aforet' trying 'i' with node (0, 3)
----cur word: 'aforeti' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aforeti' trying 'm' with node (0, 4)
----cur word: 'aforetim' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aforetim' trying 'e' with node (1, 3)
cur word: 'aforeti' trying 'm' with node (1, 3)
cur word: 'aforeti' trying 'm' with node (1, 4)
cur word: 'aforet' trying 'h' with node (1, 3)
cur word: 'aforet' trying 'i' with node (1, 3)
cur word: 'afore' trying 'm' with node (0, 2)
----cur word: 'aforem' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'aforem' trying 'e' with node (0, 3)
----cur word: 'aforeme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'aforeme' trying 'n' with node (0, 4)
----cur word: 'aforemen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'aforemen' trying 't' with node (1, 3)
----cur word: 'aforement' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'aforement' trying 'i' with node (1, 4)
----cur word: 'aforementi' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'aforementi' trying 'o' with node (2, 3)
----cur word: 'aforementio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'aforementio' trying 'n' with node (2, 2)
----cur word: 'aforemention' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'aforemention' trying 'e' with node (2, 1)
----cur word: 'aforementione' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'aforementione' trying 'd' with node (2, 0)
cur word: 'aforemention' trying 'e' with node (3, 1)
cur word: 'aforemention' trying 'e' with node (3, 2)
cur word: 'aforemention' trying 'e' with node (3, 3)
cur word: 'aforementio' trying 'n' with node (2, 4)
cur word: 'aforementio' trying 'n' with node (3, 2)
cur word: 'aforementio' trying 'n' with node (3, 3)
cur word: 'aforementio' trying 'n' with node (3, 4)
cur word: 'aforementi' trying 'o' with node (2, 4)
cur word: 'aforement' trying 'i' with node (2, 2)
cur word: 'aforement' trying 'i' with node (2, 3)
cur word: 'aforement' trying 'i' with node (2, 4)
cur word: 'aforemen' trying 't' with node (1, 4)
cur word: 'aforeme' trying 'n' with node (1, 3)
cur word: 'aforeme' trying 'n' with node (1, 4)
cur word: 'aforem' trying 'e' with node (1, 3)
cur word: 'afore' trying 's' with node (2, 0)
cur word: 'afore' trying 't' with node (2, 0)
cur word: 'afore' trying 'm' with node (2, 0)
cur word: 'afore' trying 's' with node (2, 1)
cur word: 'afore' trying 't' with node (2, 1)
cur word: 'afore' trying 'm' with node (2, 1)
cur word: 'afore' trying 's' with node (2, 2)
cur word: 'afore' trying 't' with node (2, 2)
cur word: 'afore' trying 'm' with node (2, 2)
cur word: 'afor' trying 'e' with node (2, 0)
cur word: 'afor' trying 'e' with node (2, 1)
cur word: 'afo' trying 'u' with node (1, 0)
----cur word: 'afou' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afou' trying 'l' with node (1, 1)
cur word: 'afo' trying 'o' with node (1, 1)
cur word: 'afo' trying 'r' with node (1, 1)
cur word: 'afo' trying 'u' with node (1, 1)
cur word: 'af' trying 'r' with node (0, 0)
----cur word: 'afr' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afr' trying 'e' with node (1, 0)
----cur word: 'afre' looking for {'e', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afre' trying 'e' with node (1, 1)
----cur word: 'afree' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afree' trying 't' with node (0, 2)
cur word: 'afre' trying 's' with node (1, 1)
----cur word: 'afres' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afres' trying 'h' with node (0, 2)
cur word: 'afre' trying 'e' with node (2, 0)
cur word: 'afre' trying 's' with node (2, 0)
cur word: 'afre' trying 'e' with node (2, 1)
cur word: 'afre' trying 's' with node (2, 1)
cur word: 'afr' trying 'i' with node (1, 0)
----cur word: 'afri' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afri' trying 't' with node (1, 1)
cur word: 'afr' trying 'a' with node (1, 0)
----cur word: 'afra' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'afra' trying 'i' with node (1, 1)
----cur word: 'afrai' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'afrai' trying 'd' with node (0, 2)
cur word: 'afra' trying 'i' with node (2, 0)
cur word: 'afra' trying 'i' with node (2, 1)
cur word: 'afr' trying 'e' with node (1, 1)
cur word: 'afr' trying 'i' with node (1, 1)
cur word: 'afr' trying 'a' with node (1, 1)
cur word: 'af' trying 'a' with node (0, 0)
----cur word: 'afa' looking for {'r'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'afa' trying 'r' with node (1, 0)
cur word: 'af' trying 'f' with node (0, 2)
cur word: 'af' trying 'l' with node (0, 2)
cur word: 'af' trying 't' with node (0, 2)
cur word: 'af' trying 'g' with node (0, 2)
cur word: 'af' trying 'i' with node (0, 2)
cur word: 'af' trying 'e' with node (0, 2)
cur word: 'af' trying 'o' with node (0, 2)
cur word: 'af' trying 'r' with node (0, 2)
cur word: 'af' trying 'a' with node (0, 2)
cur word: 'af' trying 'f' with node (1, 0)
cur word: 'af' trying 'l' with node (1, 0)
cur word: 'af' trying 't' with node (1, 0)
cur word: 'af' trying 'g' with node (1, 0)
cur word: 'af' trying 'i' with node (1, 0)
cur word: 'af' trying 'e' with node (1, 0)
cur word: 'af' trying 'o' with node (1, 0)
cur word: 'af' trying 'r' with node (1, 0)
cur word: 'af' trying 'a' with node (1, 0)
cur word: 'af' trying 'f' with node (1, 1)
cur word: 'af' trying 'l' with node (1, 1)
cur word: 'af' trying 't' with node (1, 1)
cur word: 'af' trying 'g' with node (1, 1)
cur word: 'af' trying 'i' with node (1, 1)
cur word: 'af' trying 'e' with node (1, 1)
cur word: 'af' trying 'o' with node (1, 1)
cur word: 'af' trying 'r' with node (1, 1)
cur word: 'af' trying 'a' with node (1, 1)
cur word: 'a' trying 'd' with node (0, 1)
----cur word: 'ad' looking for {'d', 'j', 'u', 'm', 'i', 'y', 'n', 'e', 'z', 's', 'w', 'h', 'o', 'r', 'v', 'a'}, [(1, 2), (0, 1)], 0----
cur word: 'ad' trying 'd' with node (0, 0)
----cur word: 'add' looking for {'l', 'u', 'i', 'e', 's', 'r', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'add' trying 'l' with node (1, 0)
----cur word: 'addl' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'addl' trying 'e' with node (1, 1)
----cur word: 'addle' looking for {'d', 'p', 's', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addle' trying 'd' with node (0, 2)
cur word: 'addle' trying 'p' with node (0, 2)
----cur word: 'addlep' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addlep' trying 'a' with node (0, 3)
----cur word: 'addlepa' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'addlepa' trying 't' with node (0, 4)
----cur word: 'addlepat' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addlepat' trying 'e' with node (1, 3)
----cur word: 'addlepate' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addlepate' trying 'd' with node (1, 4)
cur word: 'addlepat' trying 'e' with node (1, 4)
cur word: 'addlepa' trying 't' with node (1, 3)
cur word: 'addlepa' trying 't' with node (1, 4)
cur word: 'addlep' trying 'a' with node (1, 3)
cur word: 'addle' trying 's' with node (0, 2)
cur word: 'addle' trying 'b' with node (0, 2)
----cur word: 'addleb' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addleb' trying 'r' with node (0, 3)
----cur word: 'addlebr' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'addlebr' trying 'a' with node (0, 4)
----cur word: 'addlebra' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addlebra' trying 'i' with node (1, 3)
----cur word: 'addlebrai' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addlebrai' trying 'n' with node (1, 4)
----cur word: 'addlebrain' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'addlebrain' trying 'e' with node (2, 3)
----cur word: 'addlebraine' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'addlebraine' trying 'd' with node (2, 2)
cur word: 'addlebrain' trying 'e' with node (2, 4)
cur word: 'addlebrai' trying 'n' with node (2, 2)
cur word: 'addlebrai' trying 'n' with node (2, 3)
cur word: 'addlebrai' trying 'n' with node (2, 4)
cur word: 'addlebra' trying 'i' with node (1, 4)
cur word: 'addlebr' trying 'a' with node (1, 3)
cur word: 'addlebr' trying 'a' with node (1, 4)
cur word: 'addleb' trying 'r' with node (1, 3)
cur word: 'addle' trying 'p' with node (2, 0)
cur word: 'addle' trying 'b' with node (2, 0)
cur word: 'addle' trying 'p' with node (2, 1)
cur word: 'addle' trying 'b' with node (2, 1)
cur word: 'addle' trying 'p' with node (2, 2)
cur word: 'addle' trying 'b' with node (2, 2)
cur word: 'addl' trying 'i' with node (1, 1)
----cur word: 'addli' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addli' trying 'n' with node (0, 2)
----cur word: 'addlin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addlin' trying 'g' with node (0, 3)
cur word: 'addli' trying 'n' with node (2, 0)
cur word: 'addli' trying 'n' with node (2, 1)
cur word: 'addli' trying 'n' with node (2, 2)
cur word: 'addl' trying 'e' with node (2, 0)
cur word: 'addl' trying 'i' with node (2, 0)
cur word: 'addl' trying 'e' with node (2, 1)
cur word: 'addl' trying 'i' with node (2, 1)
cur word: 'add' trying 'u' with node (1, 0)
----cur word: 'addu' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'addu' trying 'c' with node (1, 1)
----cur word: 'adduc' looking for {'e', 't', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adduc' trying 'e' with node (0, 2)
----cur word: 'adduce' looking for {'d', 'r', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adduce' trying 'd' with node (0, 3)
cur word: 'adduce' trying 'r' with node (0, 3)
cur word: 'adduce' trying 's' with node (0, 3)
cur word: 'adduce' trying 'a' with node (0, 3)
----cur word: 'adducea' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducea' trying 'b' with node (0, 4)
----cur word: 'adduceab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adduceab' trying 'l' with node (1, 3)
----cur word: 'adduceabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adduceabl' trying 'e' with node (1, 4)
cur word: 'adduceab' trying 'l' with node (1, 4)
cur word: 'adducea' trying 'b' with node (1, 3)
cur word: 'adducea' trying 'b' with node (1, 4)
cur word: 'adduce' trying 'a' with node (1, 3)
cur word: 'adduc' trying 't' with node (0, 2)
----cur word: 'adduct' looking for {'o', 'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adduct' trying 'o' with node (0, 3)
----cur word: 'adducto' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducto' trying 'r' with node (0, 4)
----cur word: 'adductor' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adductor' trying 's' with node (1, 3)
cur word: 'adducto' trying 'r' with node (1, 3)
cur word: 'adducto' trying 'r' with node (1, 4)
cur word: 'adduct' trying 'e' with node (0, 3)
----cur word: 'adducte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducte' trying 'd' with node (0, 4)
cur word: 'adduct' trying 's' with node (0, 3)
cur word: 'adduct' trying 'i' with node (0, 3)
----cur word: 'adducti' looking for {'n', 'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducti' trying 'n' with node (0, 4)
----cur word: 'adductin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adductin' trying 'g' with node (1, 3)
cur word: 'adducti' trying 'o' with node (0, 4)
----cur word: 'adductio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adductio' trying 'n' with node (1, 3)
----cur word: 'adduction' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adduction' trying 's' with node (1, 4)
cur word: 'adductio' trying 'n' with node (1, 4)
cur word: 'adducti' trying 'n' with node (1, 3)
cur word: 'adducti' trying 'o' with node (1, 3)
cur word: 'adducti' trying 'n' with node (1, 4)
cur word: 'adducti' trying 'o' with node (1, 4)
cur word: 'adduct' trying 'o' with node (1, 3)
cur word: 'adduct' trying 'e' with node (1, 3)
cur word: 'adduct' trying 'i' with node (1, 3)
cur word: 'adduc' trying 'i' with node (0, 2)
----cur word: 'adduci' looking for {'n', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adduci' trying 'n' with node (0, 3)
----cur word: 'adducin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducin' trying 'g' with node (0, 4)
cur word: 'adduci' trying 'b' with node (0, 3)
----cur word: 'adducib' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adducib' trying 'l' with node (0, 4)
----cur word: 'adducibl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adducibl' trying 'e' with node (1, 3)
cur word: 'adducib' trying 'l' with node (1, 3)
cur word: 'adducib' trying 'l' with node (1, 4)
cur word: 'adduci' trying 'n' with node (1, 3)
cur word: 'adduci' trying 'b' with node (1, 3)
cur word: 'adduc' trying 'e' with node (2, 0)
cur word: 'adduc' trying 't' with node (2, 0)
cur word: 'adduc' trying 'i' with node (2, 0)
cur word: 'adduc' trying 'e' with node (2, 1)
cur word: 'adduc' trying 't' with node (2, 1)
cur word: 'adduc' trying 'i' with node (2, 1)
cur word: 'adduc' trying 'e' with node (2, 2)
cur word: 'adduc' trying 't' with node (2, 2)
cur word: 'adduc' trying 'i' with node (2, 2)
cur word: 'addu' trying 'c' with node (2, 0)
cur word: 'addu' trying 'c' with node (2, 1)
cur word: 'add' trying 'i' with node (1, 0)
----cur word: 'addi' looking for {'n', 'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'addi' trying 'n' with node (1, 1)
----cur word: 'addin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addin' trying 'g' with node (0, 2)
cur word: 'addi' trying 'c' with node (1, 1)
----cur word: 'addic' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addic' trying 't' with node (0, 2)
----cur word: 'addict' looking for {'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addict' trying 'e' with node (0, 3)
----cur word: 'addicte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'addicte' trying 'd' with node (0, 4)
cur word: 'addict' trying 's' with node (0, 3)
cur word: 'addict' trying 'i' with node (0, 3)
----cur word: 'addicti' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'addicti' trying 'n' with node (0, 4)
----cur word: 'addictin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addictin' trying 'g' with node (1, 3)
cur word: 'addicti' trying 'o' with node (0, 4)
----cur word: 'addictio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addictio' trying 'n' with node (1, 3)
----cur word: 'addiction' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addiction' trying 's' with node (1, 4)
cur word: 'addictio' trying 'n' with node (1, 4)
cur word: 'addicti' trying 'v' with node (0, 4)
----cur word: 'addictiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addictiv' trying 'e' with node (1, 3)
cur word: 'addicti' trying 'n' with node (1, 3)
cur word: 'addicti' trying 'o' with node (1, 3)
cur word: 'addicti' trying 'v' with node (1, 3)
cur word: 'addicti' trying 'n' with node (1, 4)
cur word: 'addicti' trying 'o' with node (1, 4)
cur word: 'addicti' trying 'v' with node (1, 4)
cur word: 'addict' trying 'e' with node (1, 3)
cur word: 'addict' trying 'i' with node (1, 3)
cur word: 'addic' trying 't' with node (2, 0)
cur word: 'addic' trying 't' with node (2, 1)
cur word: 'addic' trying 't' with node (2, 2)
cur word: 'addi' trying 't' with node (1, 1)
----cur word: 'addit' looking for {'o', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addit' trying 'o' with node (0, 2)
----cur word: 'addito' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addito' trying 'r' with node (0, 3)
----cur word: 'additor' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'additor' trying 'y' with node (0, 4)
cur word: 'addito' trying 'r' with node (1, 3)
cur word: 'addit' trying 'a' with node (0, 2)
----cur word: 'addita' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addita' trying 'm' with node (0, 3)
----cur word: 'additam' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'additam' trying 'e' with node (0, 4)
----cur word: 'additame' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'additame' trying 'n' with node (1, 3)
----cur word: 'additamen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'additamen' trying 't' with node (1, 4)
cur word: 'additame' trying 'n' with node (1, 4)
cur word: 'additam' trying 'e' with node (1, 3)
cur word: 'additam' trying 'e' with node (1, 4)
cur word: 'addita' trying 'm' with node (1, 3)
cur word: 'addit' trying 'i' with node (0, 2)
----cur word: 'additi' looking for {'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'additi' trying 'o' with node (0, 3)
----cur word: 'additio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'additio' trying 'n' with node (0, 4)
----cur word: 'addition' looking for {'s', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addition' trying 's' with node (1, 3)
cur word: 'addition' trying 'a' with node (1, 3)
----cur word: 'additiona' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'additiona' trying 'l' with node (1, 4)
----cur word: 'additional' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'additional' trying 'l' with node (2, 3)
----cur word: 'additionall' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'additionall' trying 'y' with node (2, 2)
cur word: 'additional' trying 'l' with node (2, 4)
cur word: 'additiona' trying 'l' with node (2, 2)
cur word: 'additiona' trying 'l' with node (2, 3)
cur word: 'additiona' trying 'l' with node (2, 4)
cur word: 'addition' trying 'a' with node (1, 4)
cur word: 'additio' trying 'n' with node (1, 3)
cur word: 'additio' trying 'n' with node (1, 4)
cur word: 'additi' trying 'v' with node (0, 3)
----cur word: 'additiv' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'additiv' trying 'e' with node (0, 4)
----cur word: 'additive' looking for {'l', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'additive' trying 'l' with node (1, 3)
----cur word: 'additivel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'additivel' trying 'y' with node (1, 4)
cur word: 'additive' trying 's' with node (1, 3)
cur word: 'additive' trying 'l' with node (1, 4)
cur word: 'additiv' trying 'i' with node (0, 4)
----cur word: 'additivi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'additivi' trying 't' with node (1, 3)
----cur word: 'additivit' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'additivit' trying 'y' with node (1, 4)
cur word: 'additivi' trying 't' with node (1, 4)
cur word: 'additiv' trying 'e' with node (1, 3)
cur word: 'additiv' trying 'i' with node (1, 3)
cur word: 'additiv' trying 'e' with node (1, 4)
cur word: 'additiv' trying 'i' with node (1, 4)
cur word: 'additi' trying 'o' with node (1, 3)
cur word: 'additi' trying 'v' with node (1, 3)
cur word: 'addit' trying 'o' with node (2, 0)
cur word: 'addit' trying 'a' with node (2, 0)
cur word: 'addit' trying 'i' with node (2, 0)
cur word: 'addit' trying 'o' with node (2, 1)
cur word: 'addit' trying 'a' with node (2, 1)
cur word: 'addit' trying 'i' with node (2, 1)
cur word: 'addit' trying 'o' with node (2, 2)
cur word: 'addit' trying 'a' with node (2, 2)
cur word: 'addit' trying 'i' with node (2, 2)
cur word: 'addi' trying 'n' with node (2, 0)
cur word: 'addi' trying 'c' with node (2, 0)
cur word: 'addi' trying 't' with node (2, 0)
cur word: 'addi' trying 'n' with node (2, 1)
cur word: 'addi' trying 'c' with node (2, 1)
cur word: 'addi' trying 't' with node (2, 1)
cur word: 'add' trying 'e' with node (1, 0)
----cur word: 'adde' looking for {'n', 'r', 'd'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adde' trying 'n' with node (1, 1)
----cur word: 'adden' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adden' trying 'd' with node (0, 2)
----cur word: 'addend' looking for {'u', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addend' trying 'u' with node (0, 3)
----cur word: 'addendu' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'addendu' trying 'm' with node (0, 4)
cur word: 'addend' trying 's' with node (0, 3)
cur word: 'addend' trying 'a' with node (0, 3)
cur word: 'addend' trying 'u' with node (1, 3)
cur word: 'adden' trying 'd' with node (2, 0)
cur word: 'adden' trying 'd' with node (2, 1)
cur word: 'adden' trying 'd' with node (2, 2)
cur word: 'adde' trying 'r' with node (1, 1)
----cur word: 'adder' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adder' trying 's' with node (0, 2)
cur word: 'adde' trying 'd' with node (1, 1)
cur word: 'adde' trying 'n' with node (2, 0)
cur word: 'adde' trying 'r' with node (2, 0)
cur word: 'adde' trying 'n' with node (2, 1)
cur word: 'adde' trying 'r' with node (2, 1)
cur word: 'add' trying 's' with node (1, 0)
cur word: 'add' trying 'r' with node (1, 0)
----cur word: 'addr' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'addr' trying 'e' with node (1, 1)
----cur word: 'addre' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addre' trying 's' with node (0, 2)
----cur word: 'addres' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addres' trying 's' with node (0, 3)
----cur word: 'address' looking for {'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'address' trying 'e' with node (0, 4)
----cur word: 'addresse' looking for {'d', 'e', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addresse' trying 'd' with node (1, 3)
cur word: 'addresse' trying 'e' with node (1, 3)
----cur word: 'addressee' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addressee' trying 's' with node (1, 4)
cur word: 'addresse' trying 's' with node (1, 3)
cur word: 'addresse' trying 'e' with node (1, 4)
cur word: 'address' trying 'a' with node (0, 4)
----cur word: 'addressa' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addressa' trying 'b' with node (1, 3)
----cur word: 'addressab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addressab' trying 'l' with node (1, 4)
----cur word: 'addressabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'addressabl' trying 'e' with node (2, 3)
cur word: 'addressab' trying 'l' with node (2, 2)
cur word: 'addressab' trying 'l' with node (2, 3)
cur word: 'addressab' trying 'l' with node (2, 4)
cur word: 'addressa' trying 'b' with node (1, 4)
cur word: 'address' trying 'i' with node (0, 4)
----cur word: 'addressi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'addressi' trying 'n' with node (1, 3)
----cur word: 'addressin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'addressin' trying 'g' with node (1, 4)
cur word: 'addressi' trying 'n' with node (1, 4)
cur word: 'address' trying 'e' with node (1, 3)
cur word: 'address' trying 'a' with node (1, 3)
cur word: 'address' trying 'i' with node (1, 3)
cur word: 'address' trying 'e' with node (1, 4)
cur word: 'address' trying 'a' with node (1, 4)
cur word: 'address' trying 'i' with node (1, 4)
cur word: 'addres' trying 's' with node (1, 3)
cur word: 'addre' trying 's' with node (2, 0)
cur word: 'addre' trying 's' with node (2, 1)
cur word: 'addre' trying 's' with node (2, 2)
cur word: 'addr' trying 'e' with node (2, 0)
cur word: 'addr' trying 'e' with node (2, 1)
cur word: 'add' trying 'a' with node (1, 0)
----cur word: 'adda' looking for {'x', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adda' trying 'x' with node (1, 1)
----cur word: 'addax' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addax' trying 'e' with node (0, 2)
----cur word: 'addaxe' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addaxe' trying 's' with node (0, 3)
cur word: 'addax' trying 'e' with node (2, 0)
cur word: 'addax' trying 'e' with node (2, 1)
cur word: 'addax' trying 'e' with node (2, 2)
cur word: 'adda' trying 'b' with node (1, 1)
----cur word: 'addab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'addab' trying 'l' with node (0, 2)
----cur word: 'addabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'addabl' trying 'e' with node (0, 3)
cur word: 'addab' trying 'l' with node (2, 0)
cur word: 'addab' trying 'l' with node (2, 1)
cur word: 'addab' trying 'l' with node (2, 2)
cur word: 'adda' trying 'x' with node (2, 0)
cur word: 'adda' trying 'b' with node (2, 0)
cur word: 'adda' trying 'x' with node (2, 1)
cur word: 'adda' trying 'b' with node (2, 1)
cur word: 'add' trying 'l' with node (1, 1)
cur word: 'add' trying 'u' with node (1, 1)
cur word: 'add' trying 'i' with node (1, 1)
cur word: 'add' trying 'e' with node (1, 1)
cur word: 'add' trying 'r' with node (1, 1)
cur word: 'add' trying 'a' with node (1, 1)
cur word: 'ad' trying 'j' with node (0, 0)
----cur word: 'adj' looking for {'u', 'e', 'a', 'o'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adj' trying 'u' with node (1, 0)
----cur word: 'adju' looking for {'d', 't', 'n', 's', 'r', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adju' trying 'd' with node (1, 1)
----cur word: 'adjud' looking for {'g', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjud' trying 'g' with node (0, 2)
----cur word: 'adjudg' looking for {'e', 'i', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjudg' trying 'e' with node (0, 3)
----cur word: 'adjudge' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjudge' trying 'd' with node (0, 4)
cur word: 'adjudge' trying 's' with node (0, 4)
cur word: 'adjudg' trying 'i' with node (0, 3)
----cur word: 'adjudgi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjudgi' trying 'n' with node (0, 4)
----cur word: 'adjudgin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjudgin' trying 'g' with node (1, 3)
cur word: 'adjudgi' trying 'n' with node (1, 3)
cur word: 'adjudgi' trying 'n' with node (1, 4)
cur word: 'adjudg' trying 'm' with node (0, 3)
----cur word: 'adjudgm' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjudgm' trying 'e' with node (0, 4)
----cur word: 'adjudgme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjudgme' trying 'n' with node (1, 3)
----cur word: 'adjudgmen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjudgmen' trying 't' with node (1, 4)
cur word: 'adjudgme' trying 'n' with node (1, 4)
cur word: 'adjudgm' trying 'e' with node (1, 3)
cur word: 'adjudgm' trying 'e' with node (1, 4)
cur word: 'adjudg' trying 'e' with node (1, 3)
cur word: 'adjudg' trying 'i' with node (1, 3)
cur word: 'adjudg' trying 'm' with node (1, 3)
cur word: 'adjud' trying 'i' with node (0, 2)
----cur word: 'adjudi' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjudi' trying 'c' with node (0, 3)
----cur word: 'adjudic' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjudic' trying 'a' with node (0, 4)
----cur word: 'adjudica' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjudica' trying 't' with node (1, 3)
----cur word: 'adjudicat' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjudicat' trying 'o' with node (1, 4)
----cur word: 'adjudicato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjudicato' trying 'r' with node (2, 3)
----cur word: 'adjudicator' looking for {'y', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjudicator' trying 'y' with node (2, 2)
cur word: 'adjudicator' trying 's' with node (2, 2)
cur word: 'adjudicato' trying 'r' with node (2, 4)
cur word: 'adjudicat' trying 'e' with node (1, 4)
----cur word: 'adjudicate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjudicate' trying 'd' with node (2, 3)
cur word: 'adjudicate' trying 's' with node (2, 3)
cur word: 'adjudicat' trying 'i' with node (1, 4)
----cur word: 'adjudicati' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjudicati' trying 'n' with node (2, 3)
----cur word: 'adjudicatin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjudicatin' trying 'g' with node (2, 2)
cur word: 'adjudicati' trying 'o' with node (2, 3)
----cur word: 'adjudicatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjudicatio' trying 'n' with node (2, 2)
----cur word: 'adjudication' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adjudication' trying 's' with node (2, 1)
cur word: 'adjudicatio' trying 'n' with node (2, 4)
cur word: 'adjudicatio' trying 'n' with node (3, 2)
cur word: 'adjudicatio' trying 'n' with node (3, 3)
cur word: 'adjudicatio' trying 'n' with node (3, 4)
cur word: 'adjudicati' trying 'v' with node (2, 3)
----cur word: 'adjudicativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjudicativ' trying 'e' with node (2, 2)
cur word: 'adjudicati' trying 'n' with node (2, 4)
cur word: 'adjudicati' trying 'o' with node (2, 4)
cur word: 'adjudicati' trying 'v' with node (2, 4)
cur word: 'adjudicat' trying 'o' with node (2, 2)
cur word: 'adjudicat' trying 'e' with node (2, 2)
cur word: 'adjudicat' trying 'i' with node (2, 2)
cur word: 'adjudicat' trying 'o' with node (2, 3)
cur word: 'adjudicat' trying 'e' with node (2, 3)
cur word: 'adjudicat' trying 'i' with node (2, 3)
cur word: 'adjudicat' trying 'o' with node (2, 4)
cur word: 'adjudicat' trying 'e' with node (2, 4)
cur word: 'adjudicat' trying 'i' with node (2, 4)
cur word: 'adjudica' trying 't' with node (1, 4)
cur word: 'adjudic' trying 'a' with node (1, 3)
cur word: 'adjudic' trying 'a' with node (1, 4)
cur word: 'adjudi' trying 'c' with node (1, 3)
cur word: 'adjud' trying 'g' with node (2, 0)
cur word: 'adjud' trying 'i' with node (2, 0)
cur word: 'adjud' trying 'g' with node (2, 1)
cur word: 'adjud' trying 'i' with node (2, 1)
cur word: 'adjud' trying 'g' with node (2, 2)
cur word: 'adjud' trying 'i' with node (2, 2)
cur word: 'adju' trying 't' with node (1, 1)
----cur word: 'adjut' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjut' trying 'a' with node (0, 2)
----cur word: 'adjuta' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjuta' trying 'n' with node (0, 3)
----cur word: 'adjutan' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjutan' trying 'c' with node (0, 4)
----cur word: 'adjutanc' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjutanc' trying 'y' with node (1, 3)
cur word: 'adjutan' trying 't' with node (0, 4)
----cur word: 'adjutant' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjutant' trying 's' with node (1, 3)
cur word: 'adjutan' trying 'c' with node (1, 3)
cur word: 'adjutan' trying 't' with node (1, 3)
cur word: 'adjutan' trying 'c' with node (1, 4)
cur word: 'adjutan' trying 't' with node (1, 4)
cur word: 'adjuta' trying 'n' with node (1, 3)
cur word: 'adjut' trying 'a' with node (2, 0)
cur word: 'adjut' trying 'a' with node (2, 1)
cur word: 'adjut' trying 'a' with node (2, 2)
cur word: 'adju' trying 'n' with node (1, 1)
----cur word: 'adjun' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjun' trying 'c' with node (0, 2)
----cur word: 'adjunc' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjunc' trying 't' with node (0, 3)
----cur word: 'adjunct' looking for {'s', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjunct' trying 's' with node (0, 4)
cur word: 'adjunct' trying 'i' with node (0, 4)
----cur word: 'adjuncti' looking for {'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjuncti' trying 'o' with node (1, 3)
----cur word: 'adjunctio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjunctio' trying 'n' with node (1, 4)
----cur word: 'adjunction' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjunction' trying 's' with node (2, 3)
cur word: 'adjunctio' trying 'n' with node (2, 2)
cur word: 'adjunctio' trying 'n' with node (2, 3)
cur word: 'adjunctio' trying 'n' with node (2, 4)
cur word: 'adjuncti' trying 'v' with node (1, 3)
----cur word: 'adjunctiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjunctiv' trying 'e' with node (1, 4)
cur word: 'adjuncti' trying 'o' with node (1, 4)
cur word: 'adjuncti' trying 'v' with node (1, 4)
cur word: 'adjunct' trying 'i' with node (1, 3)
cur word: 'adjunct' trying 'i' with node (1, 4)
cur word: 'adjunc' trying 't' with node (1, 3)
cur word: 'adjun' trying 'c' with node (2, 0)
cur word: 'adjun' trying 'c' with node (2, 1)
cur word: 'adjun' trying 'c' with node (2, 2)
cur word: 'adju' trying 's' with node (1, 1)
----cur word: 'adjus' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjus' trying 't' with node (0, 2)
----cur word: 'adjust' looking for {'i', 'm', 'e', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjust' trying 'i' with node (0, 3)
----cur word: 'adjusti' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjusti' trying 'n' with node (0, 4)
----cur word: 'adjustin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjustin' trying 'g' with node (1, 3)
cur word: 'adjusti' trying 'n' with node (1, 3)
cur word: 'adjusti' trying 'n' with node (1, 4)
cur word: 'adjust' trying 'm' with node (0, 3)
----cur word: 'adjustm' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjustm' trying 'e' with node (0, 4)
----cur word: 'adjustme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjustme' trying 'n' with node (1, 3)
----cur word: 'adjustmen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjustmen' trying 't' with node (1, 4)
----cur word: 'adjustment' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjustment' trying 's' with node (2, 3)
cur word: 'adjustmen' trying 't' with node (2, 2)
cur word: 'adjustmen' trying 't' with node (2, 3)
cur word: 'adjustmen' trying 't' with node (2, 4)
cur word: 'adjustme' trying 'n' with node (1, 4)
cur word: 'adjustm' trying 'e' with node (1, 3)
cur word: 'adjustm' trying 'e' with node (1, 4)
cur word: 'adjust' trying 'e' with node (0, 3)
----cur word: 'adjuste' looking for {'d', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjuste' trying 'd' with node (0, 4)
cur word: 'adjuste' trying 'r' with node (0, 4)
----cur word: 'adjuster' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjuster' trying 's' with node (1, 3)
cur word: 'adjuste' trying 'r' with node (1, 3)
cur word: 'adjuste' trying 'r' with node (1, 4)
cur word: 'adjust' trying 's' with node (0, 3)
cur word: 'adjust' trying 'a' with node (0, 3)
----cur word: 'adjusta' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjusta' trying 'b' with node (0, 4)
----cur word: 'adjustab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjustab' trying 'l' with node (1, 3)
----cur word: 'adjustabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjustabl' trying 'e' with node (1, 4)
cur word: 'adjustab' trying 'l' with node (1, 4)
cur word: 'adjusta' trying 'b' with node (1, 3)
cur word: 'adjusta' trying 'b' with node (1, 4)
cur word: 'adjust' trying 'm' with node (1, 3)
cur word: 'adjust' trying 'e' with node (1, 3)
cur word: 'adjust' trying 'i' with node (1, 3)
cur word: 'adjust' trying 'a' with node (1, 3)
cur word: 'adjus' trying 't' with node (2, 0)
cur word: 'adjus' trying 't' with node (2, 1)
cur word: 'adjus' trying 't' with node (2, 2)
cur word: 'adju' trying 'r' with node (1, 1)
----cur word: 'adjur' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjur' trying 'e' with node (0, 2)
----cur word: 'adjure' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjure' trying 'd' with node (0, 3)
cur word: 'adjure' trying 's' with node (0, 3)
cur word: 'adjur' trying 'i' with node (0, 2)
----cur word: 'adjuri' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjuri' trying 'n' with node (0, 3)
----cur word: 'adjurin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjurin' trying 'g' with node (0, 4)
cur word: 'adjuri' trying 'n' with node (1, 3)
cur word: 'adjur' trying 'a' with node (0, 2)
----cur word: 'adjura' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjura' trying 't' with node (0, 3)
----cur word: 'adjurat' looking for {'o', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjurat' trying 'o' with node (0, 4)
----cur word: 'adjurato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjurato' trying 'r' with node (1, 3)
----cur word: 'adjurator' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjurator' trying 'y' with node (1, 4)
cur word: 'adjurato' trying 'r' with node (1, 4)
cur word: 'adjurat' trying 'i' with node (0, 4)
----cur word: 'adjurati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjurati' trying 'o' with node (1, 3)
----cur word: 'adjuratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjuratio' trying 'n' with node (1, 4)
----cur word: 'adjuration' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjuration' trying 's' with node (2, 3)
cur word: 'adjuratio' trying 'n' with node (2, 2)
cur word: 'adjuratio' trying 'n' with node (2, 3)
cur word: 'adjuratio' trying 'n' with node (2, 4)
cur word: 'adjurati' trying 'o' with node (1, 4)
cur word: 'adjurat' trying 'o' with node (1, 3)
cur word: 'adjurat' trying 'i' with node (1, 3)
cur word: 'adjurat' trying 'o' with node (1, 4)
cur word: 'adjurat' trying 'i' with node (1, 4)
cur word: 'adjura' trying 't' with node (1, 3)
cur word: 'adjur' trying 'e' with node (2, 0)
cur word: 'adjur' trying 'i' with node (2, 0)
cur word: 'adjur' trying 'a' with node (2, 0)
cur word: 'adjur' trying 'e' with node (2, 1)
cur word: 'adjur' trying 'i' with node (2, 1)
cur word: 'adjur' trying 'a' with node (2, 1)
cur word: 'adjur' trying 'e' with node (2, 2)
cur word: 'adjur' trying 'i' with node (2, 2)
cur word: 'adjur' trying 'a' with node (2, 2)
cur word: 'adju' trying 'v' with node (1, 1)
----cur word: 'adjuv' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjuv' trying 'a' with node (0, 2)
----cur word: 'adjuva' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjuva' trying 'n' with node (0, 3)
----cur word: 'adjuvan' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjuvan' trying 't' with node (0, 4)
----cur word: 'adjuvant' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjuvant' trying 's' with node (1, 3)
cur word: 'adjuvan' trying 't' with node (1, 3)
cur word: 'adjuvan' trying 't' with node (1, 4)
cur word: 'adjuva' trying 'n' with node (1, 3)
cur word: 'adjuv' trying 'a' with node (2, 0)
cur word: 'adjuv' trying 'a' with node (2, 1)
cur word: 'adjuv' trying 'a' with node (2, 2)
cur word: 'adju' trying 'd' with node (2, 0)
cur word: 'adju' trying 't' with node (2, 0)
cur word: 'adju' trying 'n' with node (2, 0)
cur word: 'adju' trying 's' with node (2, 0)
cur word: 'adju' trying 'r' with node (2, 0)
cur word: 'adju' trying 'v' with node (2, 0)
cur word: 'adju' trying 'd' with node (2, 1)
cur word: 'adju' trying 't' with node (2, 1)
cur word: 'adju' trying 'n' with node (2, 1)
cur word: 'adju' trying 's' with node (2, 1)
cur word: 'adju' trying 'r' with node (2, 1)
cur word: 'adju' trying 'v' with node (2, 1)
cur word: 'adj' trying 'e' with node (1, 0)
----cur word: 'adje' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adje' trying 'c' with node (1, 1)
----cur word: 'adjec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjec' trying 't' with node (0, 2)
----cur word: 'adject' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adject' trying 'i' with node (0, 3)
----cur word: 'adjecti' looking for {'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjecti' trying 'v' with node (0, 4)
----cur word: 'adjectiv' looking for {'e', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjectiv' trying 'e' with node (1, 3)
----cur word: 'adjective' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjective' trying 's' with node (1, 4)
cur word: 'adjectiv' trying 'a' with node (1, 3)
----cur word: 'adjectiva' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjectiva' trying 'l' with node (1, 4)
----cur word: 'adjectival' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjectival' trying 'l' with node (2, 3)
----cur word: 'adjectivall' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjectivall' trying 'y' with node (2, 2)
cur word: 'adjectival' trying 'l' with node (2, 4)
cur word: 'adjectiva' trying 'l' with node (2, 2)
cur word: 'adjectiva' trying 'l' with node (2, 3)
cur word: 'adjectiva' trying 'l' with node (2, 4)
cur word: 'adjectiv' trying 'e' with node (1, 4)
cur word: 'adjectiv' trying 'a' with node (1, 4)
cur word: 'adjecti' trying 'v' with node (1, 3)
cur word: 'adjecti' trying 'v' with node (1, 4)
cur word: 'adject' trying 'i' with node (1, 3)
cur word: 'adjec' trying 't' with node (2, 0)
cur word: 'adjec' trying 't' with node (2, 1)
cur word: 'adjec' trying 't' with node (2, 2)
cur word: 'adje' trying 'c' with node (2, 0)
cur word: 'adje' trying 'c' with node (2, 1)
cur word: 'adj' trying 'a' with node (1, 0)
----cur word: 'adja' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adja' trying 'c' with node (1, 1)
----cur word: 'adjac' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjac' trying 'e' with node (0, 2)
----cur word: 'adjace' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjace' trying 'n' with node (0, 3)
----cur word: 'adjacen' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjacen' trying 'c' with node (0, 4)
----cur word: 'adjacenc' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjacenc' trying 'y' with node (1, 3)
cur word: 'adjacen' trying 't' with node (0, 4)
----cur word: 'adjacent' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjacent' trying 'l' with node (1, 3)
----cur word: 'adjacentl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjacentl' trying 'y' with node (1, 4)
cur word: 'adjacent' trying 'l' with node (1, 4)
cur word: 'adjacen' trying 'c' with node (1, 3)
cur word: 'adjacen' trying 't' with node (1, 3)
cur word: 'adjacen' trying 'c' with node (1, 4)
cur word: 'adjacen' trying 't' with node (1, 4)
cur word: 'adjace' trying 'n' with node (1, 3)
cur word: 'adjac' trying 'e' with node (2, 0)
cur word: 'adjac' trying 'e' with node (2, 1)
cur word: 'adjac' trying 'e' with node (2, 2)
cur word: 'adja' trying 'c' with node (2, 0)
cur word: 'adja' trying 'c' with node (2, 1)
cur word: 'adj' trying 'o' with node (1, 0)
----cur word: 'adjo' looking for {'u', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adjo' trying 'u' with node (1, 1)
----cur word: 'adjou' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjou' trying 'r' with node (0, 2)
----cur word: 'adjour' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjour' trying 'n' with node (0, 3)
----cur word: 'adjourn' looking for {'s', 'e', 'i', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjourn' trying 's' with node (0, 4)
cur word: 'adjourn' trying 'e' with node (0, 4)
----cur word: 'adjourne' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjourne' trying 'd' with node (1, 3)
cur word: 'adjourn' trying 'i' with node (0, 4)
----cur word: 'adjourni' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjourni' trying 'n' with node (1, 3)
----cur word: 'adjournin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjournin' trying 'g' with node (1, 4)
cur word: 'adjourni' trying 'n' with node (1, 4)
cur word: 'adjourn' trying 'm' with node (0, 4)
----cur word: 'adjournm' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjournm' trying 'e' with node (1, 3)
----cur word: 'adjournme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adjournme' trying 'n' with node (1, 4)
----cur word: 'adjournmen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adjournmen' trying 't' with node (2, 3)
----cur word: 'adjournment' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adjournment' trying 's' with node (2, 2)
cur word: 'adjournmen' trying 't' with node (2, 4)
cur word: 'adjournme' trying 'n' with node (2, 2)
cur word: 'adjournme' trying 'n' with node (2, 3)
cur word: 'adjournme' trying 'n' with node (2, 4)
cur word: 'adjournm' trying 'e' with node (1, 4)
cur word: 'adjourn' trying 'e' with node (1, 3)
cur word: 'adjourn' trying 'i' with node (1, 3)
cur word: 'adjourn' trying 'm' with node (1, 3)
cur word: 'adjourn' trying 'e' with node (1, 4)
cur word: 'adjourn' trying 'i' with node (1, 4)
cur word: 'adjourn' trying 'm' with node (1, 4)
cur word: 'adjour' trying 'n' with node (1, 3)
cur word: 'adjou' trying 'r' with node (2, 0)
cur word: 'adjou' trying 'r' with node (2, 1)
cur word: 'adjou' trying 'r' with node (2, 2)
cur word: 'adjo' trying 'i' with node (1, 1)
----cur word: 'adjoi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adjoi' trying 'n' with node (0, 2)
----cur word: 'adjoin' looking for {'s', 'e', 't', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adjoin' trying 's' with node (0, 3)
cur word: 'adjoin' trying 'e' with node (0, 3)
----cur word: 'adjoine' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjoine' trying 'd' with node (0, 4)
cur word: 'adjoin' trying 't' with node (0, 3)
cur word: 'adjoin' trying 'i' with node (0, 3)
----cur word: 'adjoini' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adjoini' trying 'n' with node (0, 4)
----cur word: 'adjoinin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adjoinin' trying 'g' with node (1, 3)
cur word: 'adjoini' trying 'n' with node (1, 3)
cur word: 'adjoini' trying 'n' with node (1, 4)
cur word: 'adjoin' trying 'e' with node (1, 3)
cur word: 'adjoin' trying 'i' with node (1, 3)
cur word: 'adjoi' trying 'n' with node (2, 0)
cur word: 'adjoi' trying 'n' with node (2, 1)
cur word: 'adjoi' trying 'n' with node (2, 2)
cur word: 'adjo' trying 'u' with node (2, 0)
cur word: 'adjo' trying 'i' with node (2, 0)
cur word: 'adjo' trying 'u' with node (2, 1)
cur word: 'adjo' trying 'i' with node (2, 1)
cur word: 'adj' trying 'u' with node (1, 1)
cur word: 'adj' trying 'e' with node (1, 1)
cur word: 'adj' trying 'a' with node (1, 1)
cur word: 'adj' trying 'o' with node (1, 1)
cur word: 'ad' trying 'u' with node (0, 0)
----cur word: 'adu' looking for {'l', 's', 'm'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adu' trying 'l' with node (1, 0)
----cur word: 'adul' looking for {'t', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adul' trying 't' with node (1, 1)
----cur word: 'adult' looking for {'h', 'e', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adult' trying 'h' with node (0, 2)
----cur word: 'adulth' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adulth' trying 'o' with node (0, 3)
----cur word: 'adultho' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adultho' trying 'o' with node (0, 4)
----cur word: 'adulthoo' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adulthoo' trying 'd' with node (1, 3)
cur word: 'adultho' trying 'o' with node (1, 3)
cur word: 'adultho' trying 'o' with node (1, 4)
cur word: 'adulth' trying 'o' with node (1, 3)
cur word: 'adult' trying 'e' with node (0, 2)
----cur word: 'adulte' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adulte' trying 'r' with node (0, 3)
----cur word: 'adulter' looking for {'i', 'y', 'e', 'o', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adulter' trying 'i' with node (0, 4)
----cur word: 'adulteri' looking for {'n', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adulteri' trying 'n' with node (1, 3)
----cur word: 'adulterin' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulterin' trying 'e' with node (1, 4)
cur word: 'adulteri' trying 'e' with node (1, 3)
----cur word: 'adulterie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulterie' trying 's' with node (1, 4)
cur word: 'adulteri' trying 'n' with node (1, 4)
cur word: 'adulteri' trying 'e' with node (1, 4)
cur word: 'adulter' trying 'y' with node (0, 4)
cur word: 'adulter' trying 'e' with node (0, 4)
----cur word: 'adultere' looking for {'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adultere' trying 'r' with node (1, 3)
----cur word: 'adulterer' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulterer' trying 's' with node (1, 4)
cur word: 'adultere' trying 's' with node (1, 3)
----cur word: 'adulteres' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulteres' trying 's' with node (1, 4)
----cur word: 'adulteress' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adulteress' trying 'e' with node (2, 3)
----cur word: 'adulteresse' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adulteresse' trying 's' with node (2, 2)
cur word: 'adulteress' trying 'e' with node (2, 4)
cur word: 'adulteres' trying 's' with node (2, 2)
cur word: 'adulteres' trying 's' with node (2, 3)
cur word: 'adulteres' trying 's' with node (2, 4)
cur word: 'adultere' trying 'r' with node (1, 4)
cur word: 'adultere' trying 's' with node (1, 4)
cur word: 'adulter' trying 'o' with node (0, 4)
----cur word: 'adultero' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adultero' trying 'u' with node (1, 3)
----cur word: 'adulterou' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulterou' trying 's' with node (1, 4)
cur word: 'adultero' trying 'u' with node (1, 4)
cur word: 'adulter' trying 'a' with node (0, 4)
----cur word: 'adultera' looking for {'n', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adultera' trying 'n' with node (1, 3)
----cur word: 'adulteran' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulteran' trying 't' with node (1, 4)
----cur word: 'adulterant' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adulterant' trying 's' with node (2, 3)
cur word: 'adulteran' trying 't' with node (2, 2)
cur word: 'adulteran' trying 't' with node (2, 3)
cur word: 'adulteran' trying 't' with node (2, 4)
cur word: 'adultera' trying 't' with node (1, 3)
----cur word: 'adulterat' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adulterat' trying 'o' with node (1, 4)
----cur word: 'adulterato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adulterato' trying 'r' with node (2, 3)
cur word: 'adulterat' trying 'e' with node (1, 4)
----cur word: 'adulterate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adulterate' trying 'd' with node (2, 3)
cur word: 'adulterate' trying 's' with node (2, 3)
cur word: 'adulterat' trying 'i' with node (1, 4)
----cur word: 'adulterati' looking for {'n', 'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adulterati' trying 'n' with node (2, 3)
----cur word: 'adulteratin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adulteratin' trying 'g' with node (2, 2)
cur word: 'adulterati' trying 'o' with node (2, 3)
----cur word: 'adulteratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adulteratio' trying 'n' with node (2, 2)
----cur word: 'adulteration' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adulteration' trying 's' with node (2, 1)
cur word: 'adulteratio' trying 'n' with node (2, 4)
cur word: 'adulteratio' trying 'n' with node (3, 2)
cur word: 'adulteratio' trying 'n' with node (3, 3)
cur word: 'adulteratio' trying 'n' with node (3, 4)
cur word: 'adulterati' trying 'n' with node (2, 4)
cur word: 'adulterati' trying 'o' with node (2, 4)
cur word: 'adulterat' trying 'o' with node (2, 2)
cur word: 'adulterat' trying 'e' with node (2, 2)
cur word: 'adulterat' trying 'i' with node (2, 2)
cur word: 'adulterat' trying 'o' with node (2, 3)
cur word: 'adulterat' trying 'e' with node (2, 3)
cur word: 'adulterat' trying 'i' with node (2, 3)
cur word: 'adulterat' trying 'o' with node (2, 4)
cur word: 'adulterat' trying 'e' with node (2, 4)
cur word: 'adulterat' trying 'i' with node (2, 4)
cur word: 'adultera' trying 'n' with node (1, 4)
cur word: 'adultera' trying 't' with node (1, 4)
cur word: 'adulter' trying 'o' with node (1, 3)
cur word: 'adulter' trying 'e' with node (1, 3)
cur word: 'adulter' trying 'i' with node (1, 3)
cur word: 'adulter' trying 'a' with node (1, 3)
cur word: 'adulter' trying 'o' with node (1, 4)
cur word: 'adulter' trying 'e' with node (1, 4)
cur word: 'adulter' trying 'i' with node (1, 4)
cur word: 'adulter' trying 'a' with node (1, 4)
cur word: 'adulte' trying 'r' with node (1, 3)
cur word: 'adult' trying 's' with node (0, 2)
cur word: 'adult' trying 'h' with node (2, 0)
cur word: 'adult' trying 'e' with node (2, 0)
cur word: 'adult' trying 'h' with node (2, 1)
cur word: 'adult' trying 'e' with node (2, 1)
cur word: 'adult' trying 'h' with node (2, 2)
cur word: 'adult' trying 'e' with node (2, 2)
cur word: 'adul' trying 'a' with node (1, 1)
----cur word: 'adula' looking for {'r', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adula' trying 'r' with node (0, 2)
----cur word: 'adular' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adular' trying 'i' with node (0, 3)
----cur word: 'adulari' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adulari' trying 'a' with node (0, 4)
cur word: 'adular' trying 'i' with node (1, 3)
cur word: 'adula' trying 't' with node (0, 2)
----cur word: 'adulat' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adulat' trying 'o' with node (0, 3)
----cur word: 'adulato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adulato' trying 'r' with node (0, 4)
----cur word: 'adulator' looking for {'y', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adulator' trying 'y' with node (1, 3)
cur word: 'adulator' trying 's' with node (1, 3)
cur word: 'adulato' trying 'r' with node (1, 3)
cur word: 'adulato' trying 'r' with node (1, 4)
cur word: 'adulat' trying 'e' with node (0, 3)
----cur word: 'adulate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adulate' trying 'd' with node (0, 4)
cur word: 'adulate' trying 's' with node (0, 4)
cur word: 'adulat' trying 'i' with node (0, 3)
----cur word: 'adulati' looking for {'n', 'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adulati' trying 'n' with node (0, 4)
----cur word: 'adulatin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adulatin' trying 'g' with node (1, 3)
cur word: 'adulati' trying 'o' with node (0, 4)
----cur word: 'adulatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adulatio' trying 'n' with node (1, 3)
cur word: 'adulati' trying 'n' with node (1, 3)
cur word: 'adulati' trying 'o' with node (1, 3)
cur word: 'adulati' trying 'n' with node (1, 4)
cur word: 'adulati' trying 'o' with node (1, 4)
cur word: 'adulat' trying 'o' with node (1, 3)
cur word: 'adulat' trying 'e' with node (1, 3)
cur word: 'adulat' trying 'i' with node (1, 3)
cur word: 'adula' trying 'r' with node (2, 0)
cur word: 'adula' trying 't' with node (2, 0)
cur word: 'adula' trying 'r' with node (2, 1)
cur word: 'adula' trying 't' with node (2, 1)
cur word: 'adula' trying 'r' with node (2, 2)
cur word: 'adula' trying 't' with node (2, 2)
cur word: 'adul' trying 't' with node (2, 0)
cur word: 'adul' trying 'a' with node (2, 0)
cur word: 'adul' trying 't' with node (2, 1)
cur word: 'adul' trying 'a' with node (2, 1)
cur word: 'adu' trying 's' with node (1, 0)
----cur word: 'adus' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adus' trying 't' with node (1, 1)
cur word: 'adu' trying 'm' with node (1, 0)
----cur word: 'adum' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adum' trying 'b' with node (1, 1)
----cur word: 'adumb' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adumb' trying 'r' with node (0, 2)
----cur word: 'adumbr' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adumbr' trying 'a' with node (0, 3)
----cur word: 'adumbra' looking for {'l', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adumbra' trying 'l' with node (0, 4)
cur word: 'adumbra' trying 't' with node (0, 4)
----cur word: 'adumbrat' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adumbrat' trying 'e' with node (1, 3)
----cur word: 'adumbrate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adumbrate' trying 'd' with node (1, 4)
cur word: 'adumbrate' trying 's' with node (1, 4)
cur word: 'adumbrat' trying 'i' with node (1, 3)
----cur word: 'adumbrati' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adumbrati' trying 'n' with node (1, 4)
----cur word: 'adumbratin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adumbratin' trying 'g' with node (2, 3)
cur word: 'adumbrati' trying 'o' with node (1, 4)
----cur word: 'adumbratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adumbratio' trying 'n' with node (2, 3)
cur word: 'adumbrati' trying 'v' with node (1, 4)
----cur word: 'adumbrativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adumbrativ' trying 'e' with node (2, 3)
cur word: 'adumbrati' trying 'n' with node (2, 2)
cur word: 'adumbrati' trying 'o' with node (2, 2)
cur word: 'adumbrati' trying 'v' with node (2, 2)
cur word: 'adumbrati' trying 'n' with node (2, 3)
cur word: 'adumbrati' trying 'o' with node (2, 3)
cur word: 'adumbrati' trying 'v' with node (2, 3)
cur word: 'adumbrati' trying 'n' with node (2, 4)
cur word: 'adumbrati' trying 'o' with node (2, 4)
cur word: 'adumbrati' trying 'v' with node (2, 4)
cur word: 'adumbrat' trying 'e' with node (1, 4)
cur word: 'adumbrat' trying 'i' with node (1, 4)
cur word: 'adumbra' trying 't' with node (1, 3)
cur word: 'adumbra' trying 't' with node (1, 4)
cur word: 'adumbr' trying 'a' with node (1, 3)
cur word: 'adumb' trying 'r' with node (2, 0)
cur word: 'adumb' trying 'r' with node (2, 1)
cur word: 'adumb' trying 'r' with node (2, 2)
cur word: 'adum' trying 'b' with node (2, 0)
cur word: 'adum' trying 'b' with node (2, 1)
cur word: 'adu' trying 'l' with node (1, 1)
cur word: 'adu' trying 's' with node (1, 1)
cur word: 'adu' trying 'm' with node (1, 1)
cur word: 'ad' trying 'm' with node (0, 0)
----cur word: 'adm' looking for {'o', 'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adm' trying 'o' with node (1, 0)
----cur word: 'admo' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'admo' trying 'n' with node (1, 1)
----cur word: 'admon' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admon' trying 'i' with node (0, 2)
----cur word: 'admoni' looking for {'s', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admoni' trying 's' with node (0, 3)
----cur word: 'admonis' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admonis' trying 'h' with node (0, 4)
----cur word: 'admonish' looking for {'m', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admonish' trying 'm' with node (1, 3)
----cur word: 'admonishm' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admonishm' trying 'e' with node (1, 4)
----cur word: 'admonishme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admonishme' trying 'n' with node (2, 3)
----cur word: 'admonishmen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admonishmen' trying 't' with node (2, 2)
----cur word: 'admonishment' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admonishment' trying 's' with node (2, 1)
cur word: 'admonishmen' trying 't' with node (2, 4)
cur word: 'admonishmen' trying 't' with node (3, 2)
cur word: 'admonishmen' trying 't' with node (3, 3)
cur word: 'admonishmen' trying 't' with node (3, 4)
cur word: 'admonishme' trying 'n' with node (2, 4)
cur word: 'admonishm' trying 'e' with node (2, 2)
cur word: 'admonishm' trying 'e' with node (2, 3)
cur word: 'admonishm' trying 'e' with node (2, 4)
cur word: 'admonish' trying 'e' with node (1, 3)
----cur word: 'admonishe' looking for {'d', 'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admonishe' trying 'd' with node (1, 4)
cur word: 'admonishe' trying 'r' with node (1, 4)
----cur word: 'admonisher' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admonisher' trying 's' with node (2, 3)
cur word: 'admonishe' trying 's' with node (1, 4)
cur word: 'admonishe' trying 'r' with node (2, 2)
cur word: 'admonishe' trying 'r' with node (2, 3)
cur word: 'admonishe' trying 'r' with node (2, 4)
cur word: 'admonish' trying 'i' with node (1, 3)
----cur word: 'admonishi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admonishi' trying 'n' with node (1, 4)
----cur word: 'admonishin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admonishin' trying 'g' with node (2, 3)
----cur word: 'admonishing' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admonishing' trying 'l' with node (2, 2)
----cur word: 'admonishingl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admonishingl' trying 'y' with node (2, 1)
cur word: 'admonishing' trying 'l' with node (2, 4)
cur word: 'admonishing' trying 'l' with node (3, 2)
cur word: 'admonishing' trying 'l' with node (3, 3)
cur word: 'admonishing' trying 'l' with node (3, 4)
cur word: 'admonishin' trying 'g' with node (2, 4)
cur word: 'admonishi' trying 'n' with node (2, 2)
cur word: 'admonishi' trying 'n' with node (2, 3)
cur word: 'admonishi' trying 'n' with node (2, 4)
cur word: 'admonish' trying 'm' with node (1, 4)
cur word: 'admonish' trying 'e' with node (1, 4)
cur word: 'admonish' trying 'i' with node (1, 4)
cur word: 'admonis' trying 'h' with node (1, 3)
cur word: 'admonis' trying 'h' with node (1, 4)
cur word: 'admoni' trying 't' with node (0, 3)
----cur word: 'admonit' looking for {'o', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admonit' trying 'o' with node (0, 4)
----cur word: 'admonito' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admonito' trying 'r' with node (1, 3)
----cur word: 'admonitor' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admonitor' trying 'y' with node (1, 4)
cur word: 'admonito' trying 'r' with node (1, 4)
cur word: 'admonit' trying 'i' with node (0, 4)
----cur word: 'admoniti' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admoniti' trying 'o' with node (1, 3)
----cur word: 'admonitio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admonitio' trying 'n' with node (1, 4)
----cur word: 'admonition' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admonition' trying 's' with node (2, 3)
cur word: 'admonitio' trying 'n' with node (2, 2)
cur word: 'admonitio' trying 'n' with node (2, 3)
cur word: 'admonitio' trying 'n' with node (2, 4)
cur word: 'admoniti' trying 'o' with node (1, 4)
cur word: 'admonit' trying 'o' with node (1, 3)
cur word: 'admonit' trying 'i' with node (1, 3)
cur word: 'admonit' trying 'o' with node (1, 4)
cur word: 'admonit' trying 'i' with node (1, 4)
cur word: 'admoni' trying 's' with node (1, 3)
cur word: 'admoni' trying 't' with node (1, 3)
cur word: 'admon' trying 'i' with node (2, 0)
cur word: 'admon' trying 'i' with node (2, 1)
cur word: 'admon' trying 'i' with node (2, 2)
cur word: 'admo' trying 'n' with node (2, 0)
cur word: 'admo' trying 'n' with node (2, 1)
cur word: 'adm' trying 'e' with node (1, 0)
----cur word: 'adme' looking for {'n', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adme' trying 'n' with node (1, 1)
cur word: 'adme' trying 'a' with node (1, 1)
----cur word: 'admea' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admea' trying 's' with node (0, 2)
----cur word: 'admeas' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admeas' trying 'u' with node (0, 3)
----cur word: 'admeasu' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admeasu' trying 'r' with node (0, 4)
----cur word: 'admeasur' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admeasur' trying 'e' with node (1, 3)
----cur word: 'admeasure' looking for {'d', 's', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admeasure' trying 'd' with node (1, 4)
cur word: 'admeasure' trying 's' with node (1, 4)
cur word: 'admeasure' trying 'm' with node (1, 4)
----cur word: 'admeasurem' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admeasurem' trying 'e' with node (2, 3)
----cur word: 'admeasureme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admeasureme' trying 'n' with node (2, 2)
----cur word: 'admeasuremen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admeasuremen' trying 't' with node (2, 1)
cur word: 'admeasureme' trying 'n' with node (2, 4)
cur word: 'admeasureme' trying 'n' with node (3, 2)
cur word: 'admeasureme' trying 'n' with node (3, 3)
cur word: 'admeasureme' trying 'n' with node (3, 4)
cur word: 'admeasurem' trying 'e' with node (2, 4)
cur word: 'admeasure' trying 'm' with node (2, 2)
cur word: 'admeasure' trying 'm' with node (2, 3)
cur word: 'admeasure' trying 'm' with node (2, 4)
cur word: 'admeasur' trying 'i' with node (1, 3)
----cur word: 'admeasuri' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admeasuri' trying 'n' with node (1, 4)
----cur word: 'admeasurin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admeasurin' trying 'g' with node (2, 3)
cur word: 'admeasuri' trying 'n' with node (2, 2)
cur word: 'admeasuri' trying 'n' with node (2, 3)
cur word: 'admeasuri' trying 'n' with node (2, 4)
cur word: 'admeasur' trying 'e' with node (1, 4)
cur word: 'admeasur' trying 'i' with node (1, 4)
cur word: 'admeasu' trying 'r' with node (1, 3)
cur word: 'admeasu' trying 'r' with node (1, 4)
cur word: 'admeas' trying 'u' with node (1, 3)
cur word: 'admea' trying 's' with node (2, 0)
cur word: 'admea' trying 's' with node (2, 1)
cur word: 'admea' trying 's' with node (2, 2)
cur word: 'adme' trying 'a' with node (2, 0)
cur word: 'adme' trying 'a' with node (2, 1)
cur word: 'adm' trying 'a' with node (1, 0)
----cur word: 'adma' looking for {'n', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adma' trying 'n' with node (1, 1)
cur word: 'adma' trying 's' with node (1, 1)
----cur word: 'admas' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admas' trying 's' with node (0, 2)
----cur word: 'admass' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admass' trying 'e' with node (0, 3)
----cur word: 'admasse' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admasse' trying 's' with node (0, 4)
cur word: 'admass' trying 'e' with node (1, 3)
cur word: 'admas' trying 's' with node (2, 0)
cur word: 'admas' trying 's' with node (2, 1)
cur word: 'admas' trying 's' with node (2, 2)
cur word: 'adma' trying 's' with node (2, 0)
cur word: 'adma' trying 's' with node (2, 1)
cur word: 'adm' trying 'i' with node (1, 0)
----cur word: 'admi' looking for {'t', 'n', 'x', 's', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'admi' trying 't' with node (1, 1)
----cur word: 'admit' looking for {'s', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admit' trying 's' with node (0, 2)
cur word: 'admit' trying 't' with node (0, 2)
----cur word: 'admitt' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admitt' trying 'e' with node (0, 3)
----cur word: 'admitte' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admitte' trying 'd' with node (0, 4)
----cur word: 'admitted' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admitted' trying 'l' with node (1, 3)
----cur word: 'admittedl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admittedl' trying 'y' with node (1, 4)
cur word: 'admitted' trying 'l' with node (1, 4)
cur word: 'admitte' trying 'd' with node (1, 3)
cur word: 'admitte' trying 'd' with node (1, 4)
cur word: 'admitt' trying 'i' with node (0, 3)
----cur word: 'admitti' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admitti' trying 'n' with node (0, 4)
----cur word: 'admittin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admittin' trying 'g' with node (1, 3)
cur word: 'admitti' trying 'n' with node (1, 3)
cur word: 'admitti' trying 'n' with node (1, 4)
cur word: 'admitt' trying 'a' with node (0, 3)
----cur word: 'admitta' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admitta' trying 'n' with node (0, 4)
----cur word: 'admittan' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admittan' trying 'c' with node (1, 3)
----cur word: 'admittanc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admittanc' trying 'e' with node (1, 4)
----cur word: 'admittance' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admittance' trying 's' with node (2, 3)
cur word: 'admittanc' trying 'e' with node (2, 2)
cur word: 'admittanc' trying 'e' with node (2, 3)
cur word: 'admittanc' trying 'e' with node (2, 4)
cur word: 'admittan' trying 'c' with node (1, 4)
cur word: 'admitta' trying 'n' with node (1, 3)
cur word: 'admitta' trying 'n' with node (1, 4)
cur word: 'admitt' trying 'e' with node (1, 3)
cur word: 'admitt' trying 'i' with node (1, 3)
cur word: 'admitt' trying 'a' with node (1, 3)
cur word: 'admit' trying 't' with node (2, 0)
cur word: 'admit' trying 't' with node (2, 1)
cur word: 'admit' trying 't' with node (2, 2)
cur word: 'admi' trying 'n' with node (1, 1)
----cur word: 'admin' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admin' trying 'i' with node (0, 2)
----cur word: 'admini' looking for {'c', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admini' trying 'c' with node (0, 3)
----cur word: 'adminic' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adminic' trying 'l' with node (0, 4)
----cur word: 'adminicl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adminicl' trying 'e' with node (1, 3)
cur word: 'adminic' trying 'l' with node (1, 3)
cur word: 'adminic' trying 'l' with node (1, 4)
cur word: 'admini' trying 's' with node (0, 3)
----cur word: 'adminis' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adminis' trying 't' with node (0, 4)
----cur word: 'administ' looking for {'e', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'administ' trying 'e' with node (1, 3)
----cur word: 'administe' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'administe' trying 'r' with node (1, 4)
----cur word: 'administer' looking for {'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'administer' trying 'e' with node (2, 3)
----cur word: 'administere' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'administere' trying 'd' with node (2, 2)
cur word: 'administer' trying 's' with node (2, 3)
cur word: 'administer' trying 'i' with node (2, 3)
----cur word: 'administeri' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'administeri' trying 'n' with node (2, 2)
----cur word: 'administerin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'administerin' trying 'g' with node (2, 1)
cur word: 'administeri' trying 'n' with node (2, 4)
cur word: 'administeri' trying 'n' with node (3, 2)
cur word: 'administeri' trying 'n' with node (3, 3)
cur word: 'administeri' trying 'n' with node (3, 4)
cur word: 'administer' trying 'e' with node (2, 4)
cur word: 'administer' trying 'i' with node (2, 4)
cur word: 'administe' trying 'r' with node (2, 2)
cur word: 'administe' trying 'r' with node (2, 3)
cur word: 'administe' trying 'r' with node (2, 4)
cur word: 'administ' trying 'r' with node (1, 3)
----cur word: 'administr' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'administr' trying 'a' with node (1, 4)
----cur word: 'administra' looking for {'n', 't', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'administra' trying 'n' with node (2, 3)
----cur word: 'administran' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'administran' trying 't' with node (2, 2)
cur word: 'administra' trying 't' with node (2, 3)
----cur word: 'administrat' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'administrat' trying 'o' with node (2, 2)
----cur word: 'administrato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'administrato' trying 'r' with node (2, 1)
----cur word: 'administrator' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'administrator' trying 's' with node (2, 0)
cur word: 'administrato' trying 'r' with node (3, 1)
cur word: 'administrato' trying 'r' with node (3, 2)
cur word: 'administrato' trying 'r' with node (3, 3)
cur word: 'administrat' trying 'e' with node (2, 2)
----cur word: 'administrate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'administrate' trying 'd' with node (2, 1)
cur word: 'administrate' trying 's' with node (2, 1)
cur word: 'administrat' trying 'i' with node (2, 2)
----cur word: 'administrati' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'administrati' trying 'n' with node (2, 1)
----cur word: 'administratin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'administratin' trying 'g' with node (2, 0)
cur word: 'administrati' trying 'o' with node (2, 1)
----cur word: 'administratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'administratio' trying 'n' with node (2, 0)
----cur word: 'administration' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'administration' trying 's' with node (3, 0)
cur word: 'administratio' trying 'n' with node (3, 0)
cur word: 'administratio' trying 'n' with node (3, 1)
cur word: 'administratio' trying 'n' with node (3, 2)
cur word: 'administrati' trying 'v' with node (2, 1)
----cur word: 'administrativ' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'administrativ' trying 'e' with node (2, 0)
----cur word: 'administrative' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'administrative' trying 'l' with node (3, 0)
----cur word: 'administrativel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0), (3, 0)], 0----
cur word: 'administrativel' trying 'y' with node (3, 1)
cur word: 'administrative' trying 'l' with node (3, 1)
cur word: 'administrativ' trying 'e' with node (3, 0)
cur word: 'administrativ' trying 'e' with node (3, 1)
cur word: 'administrativ' trying 'e' with node (3, 2)
cur word: 'administrati' trying 'n' with node (3, 1)
cur word: 'administrati' trying 'o' with node (3, 1)
cur word: 'administrati' trying 'v' with node (3, 1)
cur word: 'administrati' trying 'n' with node (3, 2)
cur word: 'administrati' trying 'o' with node (3, 2)
cur word: 'administrati' trying 'v' with node (3, 2)
cur word: 'administrati' trying 'n' with node (3, 3)
cur word: 'administrati' trying 'o' with node (3, 3)
cur word: 'administrati' trying 'v' with node (3, 3)
cur word: 'administrat' trying 'o' with node (2, 4)
cur word: 'administrat' trying 'e' with node (2, 4)
cur word: 'administrat' trying 'i' with node (2, 4)
cur word: 'administrat' trying 'o' with node (3, 2)
cur word: 'administrat' trying 'e' with node (3, 2)
cur word: 'administrat' trying 'i' with node (3, 2)
cur word: 'administrat' trying 'o' with node (3, 3)
cur word: 'administrat' trying 'e' with node (3, 3)
cur word: 'administrat' trying 'i' with node (3, 3)
cur word: 'administrat' trying 'o' with node (3, 4)
cur word: 'administrat' trying 'e' with node (3, 4)
cur word: 'administrat' trying 'i' with node (3, 4)
cur word: 'administra' trying 'b' with node (2, 3)
----cur word: 'administrab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'administrab' trying 'l' with node (2, 2)
----cur word: 'administrabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'administrabl' trying 'e' with node (2, 1)
cur word: 'administrab' trying 'l' with node (2, 4)
cur word: 'administrab' trying 'l' with node (3, 2)
cur word: 'administrab' trying 'l' with node (3, 3)
cur word: 'administrab' trying 'l' with node (3, 4)
cur word: 'administra' trying 'n' with node (2, 4)
cur word: 'administra' trying 't' with node (2, 4)
cur word: 'administra' trying 'b' with node (2, 4)
cur word: 'administr' trying 'a' with node (2, 2)
cur word: 'administr' trying 'a' with node (2, 3)
cur word: 'administr' trying 'a' with node (2, 4)
cur word: 'administ' trying 'e' with node (1, 4)
cur word: 'administ' trying 'r' with node (1, 4)
cur word: 'adminis' trying 't' with node (1, 3)
cur word: 'adminis' trying 't' with node (1, 4)
cur word: 'admini' trying 'c' with node (1, 3)
cur word: 'admini' trying 's' with node (1, 3)
cur word: 'admin' trying 'i' with node (2, 0)
cur word: 'admin' trying 'i' with node (2, 1)
cur word: 'admin' trying 'i' with node (2, 2)
cur word: 'admi' trying 'x' with node (1, 1)
----cur word: 'admix' looking for {'e', 't', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admix' trying 'e' with node (0, 2)
----cur word: 'admixe' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admixe' trying 'd' with node (0, 3)
cur word: 'admixe' trying 's' with node (0, 3)
cur word: 'admix' trying 't' with node (0, 2)
----cur word: 'admixt' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admixt' trying 'u' with node (0, 3)
----cur word: 'admixtu' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admixtu' trying 'r' with node (0, 4)
----cur word: 'admixtur' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admixtur' trying 'e' with node (1, 3)
----cur word: 'admixture' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admixture' trying 's' with node (1, 4)
cur word: 'admixtur' trying 'e' with node (1, 4)
cur word: 'admixtu' trying 'r' with node (1, 3)
cur word: 'admixtu' trying 'r' with node (1, 4)
cur word: 'admixt' trying 'u' with node (1, 3)
cur word: 'admix' trying 'i' with node (0, 2)
----cur word: 'admixi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admixi' trying 'n' with node (0, 3)
----cur word: 'admixin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admixin' trying 'g' with node (0, 4)
cur word: 'admixi' trying 'n' with node (1, 3)
cur word: 'admix' trying 'e' with node (2, 0)
cur word: 'admix' trying 't' with node (2, 0)
cur word: 'admix' trying 'i' with node (2, 0)
cur word: 'admix' trying 'e' with node (2, 1)
cur word: 'admix' trying 't' with node (2, 1)
cur word: 'admix' trying 'i' with node (2, 1)
cur word: 'admix' trying 'e' with node (2, 2)
cur word: 'admix' trying 't' with node (2, 2)
cur word: 'admix' trying 'i' with node (2, 2)
cur word: 'admi' trying 's' with node (1, 1)
----cur word: 'admis' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admis' trying 's' with node (0, 2)
----cur word: 'admiss' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admiss' trying 'i' with node (0, 3)
----cur word: 'admissi' looking for {'o', 'v', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admissi' trying 'o' with node (0, 4)
----cur word: 'admissio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admissio' trying 'n' with node (1, 3)
----cur word: 'admission' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admission' trying 's' with node (1, 4)
cur word: 'admissio' trying 'n' with node (1, 4)
cur word: 'admissi' trying 'v' with node (0, 4)
----cur word: 'admissiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admissiv' trying 'e' with node (1, 3)
cur word: 'admissi' trying 'b' with node (0, 4)
----cur word: 'admissib' looking for {'l', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admissib' trying 'l' with node (1, 3)
----cur word: 'admissibl' looking for {'y', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admissibl' trying 'y' with node (1, 4)
cur word: 'admissibl' trying 'e' with node (1, 4)
----cur word: 'admissible' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admissible' trying 'n' with node (2, 3)
----cur word: 'admissiblen' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admissiblen' trying 'e' with node (2, 2)
----cur word: 'admissiblene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admissiblene' trying 's' with node (2, 1)
----cur word: 'admissiblenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'admissiblenes' trying 's' with node (2, 0)
cur word: 'admissiblene' trying 's' with node (3, 1)
cur word: 'admissiblene' trying 's' with node (3, 2)
cur word: 'admissiblene' trying 's' with node (3, 3)
cur word: 'admissiblen' trying 'e' with node (2, 4)
cur word: 'admissiblen' trying 'e' with node (3, 2)
cur word: 'admissiblen' trying 'e' with node (3, 3)
cur word: 'admissiblen' trying 'e' with node (3, 4)
cur word: 'admissible' trying 'n' with node (2, 4)
cur word: 'admissibl' trying 'e' with node (2, 2)
cur word: 'admissibl' trying 'e' with node (2, 3)
cur word: 'admissibl' trying 'e' with node (2, 4)
cur word: 'admissib' trying 'i' with node (1, 3)
----cur word: 'admissibi' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admissibi' trying 'l' with node (1, 4)
----cur word: 'admissibil' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admissibil' trying 'i' with node (2, 3)
----cur word: 'admissibili' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admissibili' trying 't' with node (2, 2)
----cur word: 'admissibilit' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admissibilit' trying 'y' with node (2, 1)
cur word: 'admissibili' trying 't' with node (2, 4)
cur word: 'admissibili' trying 't' with node (3, 2)
cur word: 'admissibili' trying 't' with node (3, 3)
cur word: 'admissibili' trying 't' with node (3, 4)
cur word: 'admissibil' trying 'i' with node (2, 4)
cur word: 'admissibi' trying 'l' with node (2, 2)
cur word: 'admissibi' trying 'l' with node (2, 3)
cur word: 'admissibi' trying 'l' with node (2, 4)
cur word: 'admissib' trying 'l' with node (1, 4)
cur word: 'admissib' trying 'i' with node (1, 4)
cur word: 'admissi' trying 'o' with node (1, 3)
cur word: 'admissi' trying 'v' with node (1, 3)
cur word: 'admissi' trying 'b' with node (1, 3)
cur word: 'admissi' trying 'o' with node (1, 4)
cur word: 'admissi' trying 'v' with node (1, 4)
cur word: 'admissi' trying 'b' with node (1, 4)
cur word: 'admiss' trying 'i' with node (1, 3)
cur word: 'admis' trying 's' with node (2, 0)
cur word: 'admis' trying 's' with node (2, 1)
cur word: 'admis' trying 's' with node (2, 2)
cur word: 'admi' trying 'r' with node (1, 1)
----cur word: 'admir' looking for {'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'admir' trying 'e' with node (0, 2)
----cur word: 'admire' looking for {'d', 'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admire' trying 'd' with node (0, 3)
cur word: 'admire' trying 'r' with node (0, 3)
----cur word: 'admirer' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admirer' trying 's' with node (0, 4)
cur word: 'admire' trying 's' with node (0, 3)
cur word: 'admire' trying 'r' with node (1, 3)
cur word: 'admir' trying 'i' with node (0, 2)
----cur word: 'admiri' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admiri' trying 'n' with node (0, 3)
----cur word: 'admirin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admirin' trying 'g' with node (0, 4)
----cur word: 'admiring' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admiring' trying 'l' with node (1, 3)
----cur word: 'admiringl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admiringl' trying 'y' with node (1, 4)
cur word: 'admiring' trying 'l' with node (1, 4)
cur word: 'admirin' trying 'g' with node (1, 3)
cur word: 'admirin' trying 'g' with node (1, 4)
cur word: 'admiri' trying 'n' with node (1, 3)
cur word: 'admir' trying 'a' with node (0, 2)
----cur word: 'admira' looking for {'l', 't', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'admira' trying 'l' with node (0, 3)
----cur word: 'admiral' looking for {'s', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admiral' trying 's' with node (0, 4)
cur word: 'admiral' trying 't' with node (0, 4)
----cur word: 'admiralt' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admiralt' trying 'y' with node (1, 3)
cur word: 'admiral' trying 't' with node (1, 3)
cur word: 'admiral' trying 't' with node (1, 4)
cur word: 'admira' trying 't' with node (0, 3)
----cur word: 'admirat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admirat' trying 'i' with node (0, 4)
----cur word: 'admirati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admirati' trying 'o' with node (1, 3)
----cur word: 'admiratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admiratio' trying 'n' with node (1, 4)
cur word: 'admirati' trying 'o' with node (1, 4)
cur word: 'admirat' trying 'i' with node (1, 3)
cur word: 'admirat' trying 'i' with node (1, 4)
cur word: 'admira' trying 'b' with node (0, 3)
----cur word: 'admirab' looking for {'l', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'admirab' trying 'l' with node (0, 4)
----cur word: 'admirabl' looking for {'y', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admirabl' trying 'y' with node (1, 3)
cur word: 'admirabl' trying 'e' with node (1, 3)
----cur word: 'admirable' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admirable' trying 'n' with node (1, 4)
----cur word: 'admirablen' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admirablen' trying 'e' with node (2, 3)
----cur word: 'admirablene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admirablene' trying 's' with node (2, 2)
----cur word: 'admirablenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admirablenes' trying 's' with node (2, 1)
----cur word: 'admirableness' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'admirableness' trying 'e' with node (2, 0)
----cur word: 'admirablenesse' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'admirablenesse' trying 's' with node (3, 0)
cur word: 'admirableness' trying 'e' with node (3, 0)
cur word: 'admirableness' trying 'e' with node (3, 1)
cur word: 'admirableness' trying 'e' with node (3, 2)
cur word: 'admirablenes' trying 's' with node (3, 1)
cur word: 'admirablenes' trying 's' with node (3, 2)
cur word: 'admirablenes' trying 's' with node (3, 3)
cur word: 'admirablene' trying 's' with node (2, 4)
cur word: 'admirablene' trying 's' with node (3, 2)
cur word: 'admirablene' trying 's' with node (3, 3)
cur word: 'admirablene' trying 's' with node (3, 4)
cur word: 'admirablen' trying 'e' with node (2, 4)
cur word: 'admirable' trying 'n' with node (2, 2)
cur word: 'admirable' trying 'n' with node (2, 3)
cur word: 'admirable' trying 'n' with node (2, 4)
cur word: 'admirabl' trying 'e' with node (1, 4)
cur word: 'admirab' trying 'i' with node (0, 4)
----cur word: 'admirabi' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'admirabi' trying 'l' with node (1, 3)
----cur word: 'admirabil' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'admirabil' trying 'i' with node (1, 4)
----cur word: 'admirabili' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'admirabili' trying 't' with node (2, 3)
----cur word: 'admirabilit' looking for {'y', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'admirabilit' trying 'y' with node (2, 2)
cur word: 'admirabilit' trying 'i' with node (2, 2)
----cur word: 'admirabiliti' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'admirabiliti' trying 'e' with node (2, 1)
----cur word: 'admirabilitie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'admirabilitie' trying 's' with node (2, 0)
cur word: 'admirabiliti' trying 'e' with node (3, 1)
cur word: 'admirabiliti' trying 'e' with node (3, 2)
cur word: 'admirabiliti' trying 'e' with node (3, 3)
cur word: 'admirabilit' trying 'i' with node (2, 4)
cur word: 'admirabilit' trying 'i' with node (3, 2)
cur word: 'admirabilit' trying 'i' with node (3, 3)
cur word: 'admirabilit' trying 'i' with node (3, 4)
cur word: 'admirabili' trying 't' with node (2, 4)
cur word: 'admirabil' trying 'i' with node (2, 2)
cur word: 'admirabil' trying 'i' with node (2, 3)
cur word: 'admirabil' trying 'i' with node (2, 4)
cur word: 'admirabi' trying 'l' with node (1, 4)
cur word: 'admirab' trying 'l' with node (1, 3)
cur word: 'admirab' trying 'i' with node (1, 3)
cur word: 'admirab' trying 'l' with node (1, 4)
cur word: 'admirab' trying 'i' with node (1, 4)
cur word: 'admira' trying 'l' with node (1, 3)
cur word: 'admira' trying 't' with node (1, 3)
cur word: 'admira' trying 'b' with node (1, 3)
cur word: 'admir' trying 'e' with node (2, 0)
cur word: 'admir' trying 'i' with node (2, 0)
cur word: 'admir' trying 'a' with node (2, 0)
cur word: 'admir' trying 'e' with node (2, 1)
cur word: 'admir' trying 'i' with node (2, 1)
cur word: 'admir' trying 'a' with node (2, 1)
cur word: 'admir' trying 'e' with node (2, 2)
cur word: 'admir' trying 'i' with node (2, 2)
cur word: 'admir' trying 'a' with node (2, 2)
cur word: 'admi' trying 't' with node (2, 0)
cur word: 'admi' trying 'n' with node (2, 0)
cur word: 'admi' trying 'x' with node (2, 0)
cur word: 'admi' trying 's' with node (2, 0)
cur word: 'admi' trying 'r' with node (2, 0)
cur word: 'admi' trying 't' with node (2, 1)
cur word: 'admi' trying 'n' with node (2, 1)
cur word: 'admi' trying 'x' with node (2, 1)
cur word: 'admi' trying 's' with node (2, 1)
cur word: 'admi' trying 'r' with node (2, 1)
cur word: 'adm' trying 'o' with node (1, 1)
cur word: 'adm' trying 'e' with node (1, 1)
cur word: 'adm' trying 'a' with node (1, 1)
cur word: 'adm' trying 'i' with node (1, 1)
cur word: 'ad' trying 'i' with node (0, 0)
----cur word: 'adi' looking for {'e', 'p', 't', 'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adi' trying 'e' with node (1, 0)
----cur word: 'adie' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adie' trying 'u' with node (1, 1)
----cur word: 'adieu' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adieu' trying 's' with node (0, 2)
cur word: 'adie' trying 'u' with node (2, 0)
cur word: 'adie' trying 'u' with node (2, 1)
cur word: 'adi' trying 'p' with node (1, 0)
----cur word: 'adip' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adip' trying 'o' with node (1, 1)
----cur word: 'adipo' looking for {'c', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adipo' trying 'c' with node (0, 2)
----cur word: 'adipoc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adipoc' trying 'e' with node (0, 3)
----cur word: 'adipoce' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adipoce' trying 'r' with node (0, 4)
----cur word: 'adipocer' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adipocer' trying 'e' with node (1, 3)
cur word: 'adipoce' trying 'r' with node (1, 3)
cur word: 'adipoce' trying 'r' with node (1, 4)
cur word: 'adipoc' trying 'e' with node (1, 3)
cur word: 'adipo' trying 's' with node (0, 2)
----cur word: 'adipos' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adipos' trying 'e' with node (0, 3)
cur word: 'adipos' trying 'i' with node (0, 3)
----cur word: 'adiposi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adiposi' trying 't' with node (0, 4)
----cur word: 'adiposit' looking for {'y', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adiposit' trying 'y' with node (1, 3)
cur word: 'adiposit' trying 'i' with node (1, 3)
----cur word: 'adipositi' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adipositi' trying 'e' with node (1, 4)
----cur word: 'adipositie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adipositie' trying 's' with node (2, 3)
cur word: 'adipositi' trying 'e' with node (2, 2)
cur word: 'adipositi' trying 'e' with node (2, 3)
cur word: 'adipositi' trying 'e' with node (2, 4)
cur word: 'adiposit' trying 'i' with node (1, 4)
cur word: 'adiposi' trying 't' with node (1, 3)
cur word: 'adiposi' trying 't' with node (1, 4)
cur word: 'adipos' trying 'i' with node (1, 3)
cur word: 'adipo' trying 'c' with node (2, 0)
cur word: 'adipo' trying 's' with node (2, 0)
cur word: 'adipo' trying 'c' with node (2, 1)
cur word: 'adipo' trying 's' with node (2, 1)
cur word: 'adipo' trying 'c' with node (2, 2)
cur word: 'adipo' trying 's' with node (2, 2)
cur word: 'adip' trying 'o' with node (2, 0)
cur word: 'adip' trying 'o' with node (2, 1)
cur word: 'adi' trying 't' with node (1, 0)
----cur word: 'adit' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adit' trying 's' with node (1, 1)
cur word: 'adi' trying 'a' with node (1, 0)
----cur word: 'adia' looking for {'p', 't', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adia' trying 'p' with node (1, 1)
----cur word: 'adiap' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adiap' trying 'h' with node (0, 2)
----cur word: 'adiaph' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adiaph' trying 'o' with node (0, 3)
----cur word: 'adiapho' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adiapho' trying 'r' with node (0, 4)
----cur word: 'adiaphor' looking for {'o', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adiaphor' trying 'o' with node (1, 3)
----cur word: 'adiaphoro' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adiaphoro' trying 'u' with node (1, 4)
----cur word: 'adiaphorou' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adiaphorou' trying 's' with node (2, 3)
cur word: 'adiaphoro' trying 'u' with node (2, 2)
cur word: 'adiaphoro' trying 'u' with node (2, 3)
cur word: 'adiaphoro' trying 'u' with node (2, 4)
cur word: 'adiaphor' trying 'i' with node (1, 3)
----cur word: 'adiaphori' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adiaphori' trying 's' with node (1, 4)
----cur word: 'adiaphoris' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adiaphoris' trying 'm' with node (2, 3)
cur word: 'adiaphori' trying 's' with node (2, 2)
cur word: 'adiaphori' trying 's' with node (2, 3)
cur word: 'adiaphori' trying 's' with node (2, 4)
cur word: 'adiaphor' trying 'o' with node (1, 4)
cur word: 'adiaphor' trying 'i' with node (1, 4)
cur word: 'adiapho' trying 'r' with node (1, 3)
cur word: 'adiapho' trying 'r' with node (1, 4)
cur word: 'adiaph' trying 'o' with node (1, 3)
cur word: 'adiap' trying 'h' with node (2, 0)
cur word: 'adiap' trying 'h' with node (2, 1)
cur word: 'adiap' trying 'h' with node (2, 2)
cur word: 'adia' trying 't' with node (1, 1)
----cur word: 'adiat' looking for {'h'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adiat' trying 'h' with node (0, 2)
----cur word: 'adiath' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adiath' trying 'e' with node (0, 3)
----cur word: 'adiathe' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adiathe' trying 'r' with node (0, 4)
----cur word: 'adiather' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adiather' trying 'm' with node (1, 3)
----cur word: 'adiatherm' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adiatherm' trying 'a' with node (1, 4)
----cur word: 'adiatherma' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adiatherma' trying 'n' with node (2, 3)
----cur word: 'adiatherman' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adiatherman' trying 'c' with node (2, 2)
----cur word: 'adiathermanc' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adiathermanc' trying 'y' with node (2, 1)
cur word: 'adiatherman' trying 'c' with node (2, 4)
cur word: 'adiatherman' trying 'c' with node (3, 2)
cur word: 'adiatherman' trying 'c' with node (3, 3)
cur word: 'adiatherman' trying 'c' with node (3, 4)
cur word: 'adiatherma' trying 'n' with node (2, 4)
cur word: 'adiatherm' trying 'a' with node (2, 2)
cur word: 'adiatherm' trying 'a' with node (2, 3)
cur word: 'adiatherm' trying 'a' with node (2, 4)
cur word: 'adiather' trying 'm' with node (1, 4)
cur word: 'adiathe' trying 'r' with node (1, 3)
cur word: 'adiathe' trying 'r' with node (1, 4)
cur word: 'adiath' trying 'e' with node (1, 3)
cur word: 'adiat' trying 'h' with node (2, 0)
cur word: 'adiat' trying 'h' with node (2, 1)
cur word: 'adiat' trying 'h' with node (2, 2)
cur word: 'adia' trying 'b' with node (1, 1)
----cur word: 'adiab' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adiab' trying 'a' with node (0, 2)
----cur word: 'adiaba' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adiaba' trying 't' with node (0, 3)
----cur word: 'adiabat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adiabat' trying 'i' with node (0, 4)
----cur word: 'adiabati' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adiabati' trying 'c' with node (1, 3)
----cur word: 'adiabatic' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adiabatic' trying 'a' with node (1, 4)
----cur word: 'adiabatica' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adiabatica' trying 'l' with node (2, 3)
----cur word: 'adiabatical' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adiabatical' trying 'l' with node (2, 2)
----cur word: 'adiabaticall' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adiabaticall' trying 'y' with node (2, 1)
cur word: 'adiabatical' trying 'l' with node (2, 4)
cur word: 'adiabatical' trying 'l' with node (3, 2)
cur word: 'adiabatical' trying 'l' with node (3, 3)
cur word: 'adiabatical' trying 'l' with node (3, 4)
cur word: 'adiabatica' trying 'l' with node (2, 4)
cur word: 'adiabatic' trying 'a' with node (2, 2)
cur word: 'adiabatic' trying 'a' with node (2, 3)
cur word: 'adiabatic' trying 'a' with node (2, 4)
cur word: 'adiabati' trying 'c' with node (1, 4)
cur word: 'adiabat' trying 'i' with node (1, 3)
cur word: 'adiabat' trying 'i' with node (1, 4)
cur word: 'adiaba' trying 't' with node (1, 3)
cur word: 'adiab' trying 'a' with node (2, 0)
cur word: 'adiab' trying 'a' with node (2, 1)
cur word: 'adiab' trying 'a' with node (2, 2)
cur word: 'adia' trying 'p' with node (2, 0)
cur word: 'adia' trying 't' with node (2, 0)
cur word: 'adia' trying 'b' with node (2, 0)
cur word: 'adia' trying 'p' with node (2, 1)
cur word: 'adia' trying 't' with node (2, 1)
cur word: 'adia' trying 'b' with node (2, 1)
cur word: 'adi' trying 'e' with node (1, 1)
cur word: 'adi' trying 'p' with node (1, 1)
cur word: 'adi' trying 't' with node (1, 1)
cur word: 'adi' trying 'a' with node (1, 1)
cur word: 'ad' trying 'y' with node (0, 0)
----cur word: 'ady' looking for {'n', 't'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'ady' trying 'n' with node (1, 0)
----cur word: 'adyn' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adyn' trying 'a' with node (1, 1)
----cur word: 'adyna' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adyna' trying 'm' with node (0, 2)
----cur word: 'adynam' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adynam' trying 'i' with node (0, 3)
----cur word: 'adynami' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adynami' trying 'a' with node (0, 4)
----cur word: 'adynamia' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adynamia' trying 's' with node (1, 3)
cur word: 'adynami' trying 'a' with node (1, 3)
cur word: 'adynami' trying 'a' with node (1, 4)
cur word: 'adynam' trying 'i' with node (1, 3)
cur word: 'adyna' trying 'm' with node (2, 0)
cur word: 'adyna' trying 'm' with node (2, 1)
cur word: 'adyna' trying 'm' with node (2, 2)
cur word: 'adyn' trying 'a' with node (2, 0)
cur word: 'adyn' trying 'a' with node (2, 1)
cur word: 'ady' trying 't' with node (1, 0)
----cur word: 'adyt' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adyt' trying 'u' with node (1, 1)
----cur word: 'adytu' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adytu' trying 'm' with node (0, 2)
cur word: 'adyt' trying 'u' with node (2, 0)
cur word: 'adyt' trying 'u' with node (2, 1)
cur word: 'ady' trying 'n' with node (1, 1)
cur word: 'ady' trying 't' with node (1, 1)
cur word: 'ad' trying 'n' with node (0, 0)
----cur word: 'adn' looking for {'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adn' trying 'a' with node (1, 0)
----cur word: 'adna' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adna' trying 't' with node (1, 1)
----cur word: 'adnat' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adnat' trying 'e' with node (0, 2)
cur word: 'adna' trying 't' with node (2, 0)
cur word: 'adna' trying 't' with node (2, 1)
cur word: 'adn' trying 'a' with node (1, 1)
cur word: 'ad' trying 'e' with node (0, 0)
----cur word: 'ade' looking for {'p', 'm', 'n', 's', 'r', 'q'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'ade' trying 'p' with node (1, 0)
----cur word: 'adep' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adep' trying 't' with node (1, 1)
----cur word: 'adept' looking for {'n', 'l', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adept' trying 'n' with node (0, 2)
----cur word: 'adeptn' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adeptn' trying 'e' with node (0, 3)
----cur word: 'adeptne' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adeptne' trying 's' with node (0, 4)
----cur word: 'adeptnes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adeptnes' trying 's' with node (1, 3)
cur word: 'adeptne' trying 's' with node (1, 3)
cur word: 'adeptne' trying 's' with node (1, 4)
cur word: 'adeptn' trying 'e' with node (1, 3)
cur word: 'adept' trying 'l' with node (0, 2)
----cur word: 'adeptl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adeptl' trying 'y' with node (0, 3)
cur word: 'adept' trying 's' with node (0, 2)
cur word: 'adept' trying 'n' with node (2, 0)
cur word: 'adept' trying 'l' with node (2, 0)
cur word: 'adept' trying 'n' with node (2, 1)
cur word: 'adept' trying 'l' with node (2, 1)
cur word: 'adept' trying 'n' with node (2, 2)
cur word: 'adept' trying 'l' with node (2, 2)
cur word: 'adep' trying 't' with node (2, 0)
cur word: 'adep' trying 't' with node (2, 1)
cur word: 'ade' trying 'm' with node (1, 0)
----cur word: 'adem' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adem' trying 'p' with node (1, 1)
----cur word: 'ademp' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'ademp' trying 't' with node (0, 2)
----cur word: 'adempt' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adempt' trying 'i' with node (0, 3)
----cur word: 'adempti' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adempti' trying 'o' with node (0, 4)
----cur word: 'ademptio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'ademptio' trying 'n' with node (1, 3)
cur word: 'adempti' trying 'o' with node (1, 3)
cur word: 'adempti' trying 'o' with node (1, 4)
cur word: 'adempt' trying 'i' with node (1, 3)
cur word: 'ademp' trying 't' with node (2, 0)
cur word: 'ademp' trying 't' with node (2, 1)
cur word: 'ademp' trying 't' with node (2, 2)
cur word: 'adem' trying 'p' with node (2, 0)
cur word: 'adem' trying 'p' with node (2, 1)
cur word: 'ade' trying 'n' with node (1, 0)
----cur word: 'aden' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'aden' trying 'o' with node (1, 1)
----cur word: 'adeno' looking for {'m', 'i', 's', 'c', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adeno' trying 'm' with node (0, 2)
----cur word: 'adenom' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenom' trying 'a' with node (0, 3)
----cur word: 'adenoma' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenoma' trying 's' with node (0, 4)
cur word: 'adenom' trying 'a' with node (1, 3)
cur word: 'adeno' trying 'i' with node (0, 2)
----cur word: 'adenoi' looking for {'d'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenoi' trying 'd' with node (0, 3)
----cur word: 'adenoid' looking for {'e', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenoid' trying 'e' with node (0, 4)
----cur word: 'adenoide' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenoide' trying 'c' with node (1, 3)
----cur word: 'adenoidec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenoidec' trying 't' with node (1, 4)
----cur word: 'adenoidect' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adenoidect' trying 'o' with node (2, 3)
----cur word: 'adenoidecto' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adenoidecto' trying 'm' with node (2, 2)
----cur word: 'adenoidectom' looking for {'y', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adenoidectom' trying 'y' with node (2, 1)
cur word: 'adenoidectom' trying 'i' with node (2, 1)
----cur word: 'adenoidectomi' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'adenoidectomi' trying 'e' with node (2, 0)
----cur word: 'adenoidectomie' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'adenoidectomie' trying 's' with node (3, 0)
cur word: 'adenoidectomi' trying 'e' with node (3, 0)
cur word: 'adenoidectomi' trying 'e' with node (3, 1)
cur word: 'adenoidectomi' trying 'e' with node (3, 2)
cur word: 'adenoidectom' trying 'i' with node (3, 1)
cur word: 'adenoidectom' trying 'i' with node (3, 2)
cur word: 'adenoidectom' trying 'i' with node (3, 3)
cur word: 'adenoidecto' trying 'm' with node (2, 4)
cur word: 'adenoidecto' trying 'm' with node (3, 2)
cur word: 'adenoidecto' trying 'm' with node (3, 3)
cur word: 'adenoidecto' trying 'm' with node (3, 4)
cur word: 'adenoidect' trying 'o' with node (2, 4)
cur word: 'adenoidec' trying 't' with node (2, 2)
cur word: 'adenoidec' trying 't' with node (2, 3)
cur word: 'adenoidec' trying 't' with node (2, 4)
cur word: 'adenoide' trying 'c' with node (1, 4)
cur word: 'adenoid' trying 's' with node (0, 4)
cur word: 'adenoid' trying 'a' with node (0, 4)
----cur word: 'adenoida' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenoida' trying 'l' with node (1, 3)
cur word: 'adenoid' trying 'e' with node (1, 3)
cur word: 'adenoid' trying 'a' with node (1, 3)
cur word: 'adenoid' trying 'e' with node (1, 4)
cur word: 'adenoid' trying 'a' with node (1, 4)
cur word: 'adenoi' trying 'd' with node (1, 3)
cur word: 'adeno' trying 's' with node (0, 2)
----cur word: 'adenos' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenos' trying 'i' with node (0, 3)
----cur word: 'adenosi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenosi' trying 'n' with node (0, 4)
----cur word: 'adenosin' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenosin' trying 'e' with node (1, 3)
----cur word: 'adenosine' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenosine' trying 's' with node (1, 4)
cur word: 'adenosin' trying 'e' with node (1, 4)
cur word: 'adenosi' trying 'n' with node (1, 3)
cur word: 'adenosi' trying 'n' with node (1, 4)
cur word: 'adenos' trying 'i' with node (1, 3)
cur word: 'adeno' trying 'c' with node (0, 2)
----cur word: 'adenoc' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenoc' trying 'a' with node (0, 3)
----cur word: 'adenoca' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenoca' trying 'r' with node (0, 4)
----cur word: 'adenocar' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenocar' trying 'c' with node (1, 3)
----cur word: 'adenocarc' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenocarc' trying 'i' with node (1, 4)
----cur word: 'adenocarci' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adenocarci' trying 'n' with node (2, 3)
----cur word: 'adenocarcin' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adenocarcin' trying 'o' with node (2, 2)
----cur word: 'adenocarcino' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adenocarcino' trying 'm' with node (2, 1)
----cur word: 'adenocarcinom' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'adenocarcinom' trying 'a' with node (2, 0)
----cur word: 'adenocarcinoma' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'adenocarcinoma' trying 's' with node (3, 0)
cur word: 'adenocarcinom' trying 'a' with node (3, 0)
cur word: 'adenocarcinom' trying 'a' with node (3, 1)
cur word: 'adenocarcinom' trying 'a' with node (3, 2)
cur word: 'adenocarcino' trying 'm' with node (3, 1)
cur word: 'adenocarcino' trying 'm' with node (3, 2)
cur word: 'adenocarcino' trying 'm' with node (3, 3)
cur word: 'adenocarcin' trying 'o' with node (2, 4)
cur word: 'adenocarcin' trying 'o' with node (3, 2)
cur word: 'adenocarcin' trying 'o' with node (3, 3)
cur word: 'adenocarcin' trying 'o' with node (3, 4)
cur word: 'adenocarci' trying 'n' with node (2, 4)
cur word: 'adenocarc' trying 'i' with node (2, 2)
cur word: 'adenocarc' trying 'i' with node (2, 3)
cur word: 'adenocarc' trying 'i' with node (2, 4)
cur word: 'adenocar' trying 'c' with node (1, 4)
cur word: 'adenoca' trying 'r' with node (1, 3)
cur word: 'adenoca' trying 'r' with node (1, 4)
cur word: 'adenoc' trying 'a' with node (1, 3)
cur word: 'adeno' trying 'v' with node (0, 2)
----cur word: 'adenov' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenov' trying 'i' with node (0, 3)
----cur word: 'adenovi' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenovi' trying 'r' with node (0, 4)
----cur word: 'adenovir' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenovir' trying 'u' with node (1, 3)
----cur word: 'adenoviru' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenoviru' trying 's' with node (1, 4)
----cur word: 'adenovirus' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adenovirus' trying 'e' with node (2, 3)
----cur word: 'adenoviruse' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adenoviruse' trying 's' with node (2, 2)
cur word: 'adenovirus' trying 'e' with node (2, 4)
cur word: 'adenoviru' trying 's' with node (2, 2)
cur word: 'adenoviru' trying 's' with node (2, 3)
cur word: 'adenoviru' trying 's' with node (2, 4)
cur word: 'adenovir' trying 'u' with node (1, 4)
cur word: 'adenovi' trying 'r' with node (1, 3)
cur word: 'adenovi' trying 'r' with node (1, 4)
cur word: 'adenov' trying 'i' with node (1, 3)
cur word: 'adeno' trying 'm' with node (2, 0)
cur word: 'adeno' trying 'i' with node (2, 0)
cur word: 'adeno' trying 's' with node (2, 0)
cur word: 'adeno' trying 'c' with node (2, 0)
cur word: 'adeno' trying 'v' with node (2, 0)
cur word: 'adeno' trying 'm' with node (2, 1)
cur word: 'adeno' trying 'i' with node (2, 1)
cur word: 'adeno' trying 's' with node (2, 1)
cur word: 'adeno' trying 'c' with node (2, 1)
cur word: 'adeno' trying 'v' with node (2, 1)
cur word: 'adeno' trying 'm' with node (2, 2)
cur word: 'adeno' trying 'i' with node (2, 2)
cur word: 'adeno' trying 's' with node (2, 2)
cur word: 'adeno' trying 'c' with node (2, 2)
cur word: 'adeno' trying 'v' with node (2, 2)
cur word: 'aden' trying 'e' with node (1, 1)
----cur word: 'adene' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adene' trying 'c' with node (0, 2)
----cur word: 'adenec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenec' trying 't' with node (0, 3)
----cur word: 'adenect' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adenect' trying 'o' with node (0, 4)
----cur word: 'adenecto' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenecto' trying 'm' with node (1, 3)
----cur word: 'adenectom' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenectom' trying 'y' with node (1, 4)
cur word: 'adenecto' trying 'm' with node (1, 4)
cur word: 'adenect' trying 'o' with node (1, 3)
cur word: 'adenect' trying 'o' with node (1, 4)
cur word: 'adenec' trying 't' with node (1, 3)
cur word: 'adene' trying 'c' with node (2, 0)
cur word: 'adene' trying 'c' with node (2, 1)
cur word: 'adene' trying 'c' with node (2, 2)
cur word: 'aden' trying 'i' with node (1, 1)
----cur word: 'adeni' looking for {'n', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adeni' trying 'n' with node (0, 2)
----cur word: 'adenin' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenin' trying 'e' with node (0, 3)
cur word: 'adeni' trying 't' with node (0, 2)
----cur word: 'adenit' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adenit' trying 'i' with node (0, 3)
----cur word: 'adeniti' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adeniti' trying 's' with node (0, 4)
----cur word: 'adenitis' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adenitis' trying 'e' with node (1, 3)
----cur word: 'adenitise' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adenitise' trying 's' with node (1, 4)
cur word: 'adenitis' trying 'e' with node (1, 4)
cur word: 'adeniti' trying 's' with node (1, 3)
cur word: 'adeniti' trying 's' with node (1, 4)
cur word: 'adenit' trying 'i' with node (1, 3)
cur word: 'adeni' trying 'n' with node (2, 0)
cur word: 'adeni' trying 't' with node (2, 0)
cur word: 'adeni' trying 'n' with node (2, 1)
cur word: 'adeni' trying 't' with node (2, 1)
cur word: 'adeni' trying 'n' with node (2, 2)
cur word: 'adeni' trying 't' with node (2, 2)
cur word: 'aden' trying 'o' with node (2, 0)
cur word: 'aden' trying 'e' with node (2, 0)
cur word: 'aden' trying 'i' with node (2, 0)
cur word: 'aden' trying 'o' with node (2, 1)
cur word: 'aden' trying 'e' with node (2, 1)
cur word: 'aden' trying 'i' with node (2, 1)
cur word: 'ade' trying 's' with node (1, 0)
----cur word: 'ades' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'ades' trying 's' with node (1, 1)
----cur word: 'adess' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adess' trying 'i' with node (0, 2)
----cur word: 'adessi' looking for {'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adessi' trying 'v' with node (0, 3)
----cur word: 'adessiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adessiv' trying 'e' with node (0, 4)
cur word: 'adessi' trying 'v' with node (1, 3)
cur word: 'adess' trying 'i' with node (2, 0)
cur word: 'adess' trying 'i' with node (2, 1)
cur word: 'adess' trying 'i' with node (2, 2)
cur word: 'ades' trying 's' with node (2, 0)
cur word: 'ades' trying 's' with node (2, 1)
cur word: 'ade' trying 'r' with node (1, 0)
----cur word: 'ader' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'ader' trying 'm' with node (1, 1)
----cur word: 'aderm' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'aderm' trying 'i' with node (0, 2)
----cur word: 'adermi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adermi' trying 'n' with node (0, 3)
cur word: 'aderm' trying 'i' with node (2, 0)
cur word: 'aderm' trying 'i' with node (2, 1)
cur word: 'aderm' trying 'i' with node (2, 2)
cur word: 'ader' trying 'm' with node (2, 0)
cur word: 'ader' trying 'm' with node (2, 1)
cur word: 'ade' trying 'q' with node (1, 0)
----cur word: 'adeq' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adeq' trying 'u' with node (1, 1)
----cur word: 'adequ' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adequ' trying 'a' with node (0, 2)
----cur word: 'adequa' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adequa' trying 'c' with node (0, 3)
----cur word: 'adequac' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adequac' trying 'y' with node (0, 4)
cur word: 'adequa' trying 't' with node (0, 3)
----cur word: 'adequat' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adequat' trying 'e' with node (0, 4)
----cur word: 'adequate' looking for {'n', 'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adequate' trying 'n' with node (1, 3)
----cur word: 'adequaten' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adequaten' trying 'e' with node (1, 4)
----cur word: 'adequatene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adequatene' trying 's' with node (2, 3)
----cur word: 'adequatenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adequatenes' trying 's' with node (2, 2)
cur word: 'adequatene' trying 's' with node (2, 4)
cur word: 'adequaten' trying 'e' with node (2, 2)
cur word: 'adequaten' trying 'e' with node (2, 3)
cur word: 'adequaten' trying 'e' with node (2, 4)
cur word: 'adequate' trying 'l' with node (1, 3)
----cur word: 'adequatel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adequatel' trying 'y' with node (1, 4)
cur word: 'adequate' trying 'n' with node (1, 4)
cur word: 'adequate' trying 'l' with node (1, 4)
cur word: 'adequat' trying 'e' with node (1, 3)
cur word: 'adequat' trying 'e' with node (1, 4)
cur word: 'adequa' trying 'c' with node (1, 3)
cur word: 'adequa' trying 't' with node (1, 3)
cur word: 'adequ' trying 'a' with node (2, 0)
cur word: 'adequ' trying 'a' with node (2, 1)
cur word: 'adequ' trying 'a' with node (2, 2)
cur word: 'adeq' trying 'u' with node (2, 0)
cur word: 'adeq' trying 'u' with node (2, 1)
cur word: 'ade' trying 'p' with node (1, 1)
cur word: 'ade' trying 'm' with node (1, 1)
cur word: 'ade' trying 'n' with node (1, 1)
cur word: 'ade' trying 's' with node (1, 1)
cur word: 'ade' trying 'r' with node (1, 1)
cur word: 'ade' trying 'q' with node (1, 1)
cur word: 'ad' trying 'z' with node (0, 0)
----cur word: 'adz' looking for {'e'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adz' trying 'e' with node (1, 0)
----cur word: 'adze' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adze' trying 's' with node (1, 1)
cur word: 'adz' trying 'e' with node (1, 1)
cur word: 'ad' trying 's' with node (0, 0)
----cur word: 'ads' looking for {'o', 'c'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'ads' trying 'o' with node (1, 0)
----cur word: 'adso' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adso' trying 'r' with node (1, 1)
----cur word: 'adsor' looking for {'p', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adsor' trying 'p' with node (0, 2)
----cur word: 'adsorp' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adsorp' trying 't' with node (0, 3)
----cur word: 'adsorpt' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adsorpt' trying 'i' with node (0, 4)
----cur word: 'adsorpti' looking for {'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adsorpti' trying 'o' with node (1, 3)
----cur word: 'adsorptio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adsorptio' trying 'n' with node (1, 4)
----cur word: 'adsorption' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adsorption' trying 's' with node (2, 3)
cur word: 'adsorptio' trying 'n' with node (2, 2)
cur word: 'adsorptio' trying 'n' with node (2, 3)
cur word: 'adsorptio' trying 'n' with node (2, 4)
cur word: 'adsorpti' trying 'v' with node (1, 3)
----cur word: 'adsorptiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adsorptiv' trying 'e' with node (1, 4)
cur word: 'adsorpti' trying 'o' with node (1, 4)
cur word: 'adsorpti' trying 'v' with node (1, 4)
cur word: 'adsorpt' trying 'i' with node (1, 3)
cur word: 'adsorpt' trying 'i' with node (1, 4)
cur word: 'adsorp' trying 't' with node (1, 3)
cur word: 'adsor' trying 'b' with node (0, 2)
----cur word: 'adsorb' looking for {'i', 'e', 's', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adsorb' trying 'i' with node (0, 3)
----cur word: 'adsorbi' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adsorbi' trying 'n' with node (0, 4)
----cur word: 'adsorbin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adsorbin' trying 'g' with node (1, 3)
cur word: 'adsorbi' trying 'n' with node (1, 3)
cur word: 'adsorbi' trying 'n' with node (1, 4)
cur word: 'adsorb' trying 'e' with node (0, 3)
----cur word: 'adsorbe' looking for {'d', 'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adsorbe' trying 'd' with node (0, 4)
cur word: 'adsorbe' trying 'n' with node (0, 4)
----cur word: 'adsorben' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adsorben' trying 't' with node (1, 3)
----cur word: 'adsorbent' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adsorbent' trying 's' with node (1, 4)
cur word: 'adsorben' trying 't' with node (1, 4)
cur word: 'adsorbe' trying 'n' with node (1, 3)
cur word: 'adsorbe' trying 'n' with node (1, 4)
cur word: 'adsorb' trying 's' with node (0, 3)
cur word: 'adsorb' trying 'a' with node (0, 3)
----cur word: 'adsorba' looking for {'t', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adsorba' trying 't' with node (0, 4)
----cur word: 'adsorbat' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adsorbat' trying 'e' with node (1, 3)
----cur word: 'adsorbate' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adsorbate' trying 's' with node (1, 4)
cur word: 'adsorbat' trying 'e' with node (1, 4)
cur word: 'adsorba' trying 'b' with node (0, 4)
----cur word: 'adsorbab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adsorbab' trying 'l' with node (1, 3)
----cur word: 'adsorbabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adsorbabl' trying 'e' with node (1, 4)
cur word: 'adsorbab' trying 'l' with node (1, 4)
cur word: 'adsorba' trying 't' with node (1, 3)
cur word: 'adsorba' trying 'b' with node (1, 3)
cur word: 'adsorba' trying 't' with node (1, 4)
cur word: 'adsorba' trying 'b' with node (1, 4)
cur word: 'adsorb' trying 'e' with node (1, 3)
cur word: 'adsorb' trying 'i' with node (1, 3)
cur word: 'adsorb' trying 'a' with node (1, 3)
cur word: 'adsor' trying 'p' with node (2, 0)
cur word: 'adsor' trying 'b' with node (2, 0)
cur word: 'adsor' trying 'p' with node (2, 1)
cur word: 'adsor' trying 'b' with node (2, 1)
cur word: 'adsor' trying 'p' with node (2, 2)
cur word: 'adsor' trying 'b' with node (2, 2)
cur word: 'adso' trying 'r' with node (2, 0)
cur word: 'adso' trying 'r' with node (2, 1)
cur word: 'ads' trying 'c' with node (1, 0)
----cur word: 'adsc' looking for {'r', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adsc' trying 'r' with node (1, 1)
----cur word: 'adscr' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adscr' trying 'i' with node (0, 2)
----cur word: 'adscri' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adscri' trying 'p' with node (0, 3)
----cur word: 'adscrip' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adscrip' trying 't' with node (0, 4)
----cur word: 'adscript' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adscript' trying 'i' with node (1, 3)
----cur word: 'adscripti' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adscripti' trying 'o' with node (1, 4)
----cur word: 'adscriptio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adscriptio' trying 'n' with node (2, 3)
cur word: 'adscripti' trying 'o' with node (2, 2)
cur word: 'adscripti' trying 'o' with node (2, 3)
cur word: 'adscripti' trying 'o' with node (2, 4)
cur word: 'adscript' trying 'i' with node (1, 4)
cur word: 'adscrip' trying 't' with node (1, 3)
cur word: 'adscrip' trying 't' with node (1, 4)
cur word: 'adscri' trying 'p' with node (1, 3)
cur word: 'adscr' trying 'i' with node (2, 0)
cur word: 'adscr' trying 'i' with node (2, 1)
cur word: 'adscr' trying 'i' with node (2, 2)
cur word: 'adsc' trying 'i' with node (1, 1)
----cur word: 'adsci' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adsci' trying 't' with node (0, 2)
----cur word: 'adscit' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adscit' trying 'i' with node (0, 3)
----cur word: 'adsciti' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adsciti' trying 't' with node (0, 4)
----cur word: 'adscitit' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adscitit' trying 'i' with node (1, 3)
----cur word: 'adscititi' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adscititi' trying 'o' with node (1, 4)
----cur word: 'adscititio' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adscititio' trying 'u' with node (2, 3)
----cur word: 'adscititiou' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adscititiou' trying 's' with node (2, 2)
cur word: 'adscititio' trying 'u' with node (2, 4)
cur word: 'adscititi' trying 'o' with node (2, 2)
cur word: 'adscititi' trying 'o' with node (2, 3)
cur word: 'adscititi' trying 'o' with node (2, 4)
cur word: 'adscitit' trying 'i' with node (1, 4)
cur word: 'adsciti' trying 't' with node (1, 3)
cur word: 'adsciti' trying 't' with node (1, 4)
cur word: 'adscit' trying 'i' with node (1, 3)
cur word: 'adsci' trying 't' with node (2, 0)
cur word: 'adsci' trying 't' with node (2, 1)
cur word: 'adsci' trying 't' with node (2, 2)
cur word: 'adsc' trying 'r' with node (2, 0)
cur word: 'adsc' trying 'i' with node (2, 0)
cur word: 'adsc' trying 'r' with node (2, 1)
cur word: 'adsc' trying 'i' with node (2, 1)
cur word: 'ads' trying 'o' with node (1, 1)
cur word: 'ads' trying 'c' with node (1, 1)
cur word: 'ad' trying 'w' with node (0, 0)
----cur word: 'adw' looking for {'a'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adw' trying 'a' with node (1, 0)
----cur word: 'adwa' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adwa' trying 'r' with node (1, 1)
----cur word: 'adwar' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adwar' trying 'e' with node (0, 2)
cur word: 'adwa' trying 'r' with node (2, 0)
cur word: 'adwa' trying 'r' with node (2, 1)
cur word: 'adw' trying 'a' with node (1, 1)
cur word: 'ad' trying 'h' with node (0, 0)
----cur word: 'adh' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adh' trying 'e' with node (1, 0)
----cur word: 'adhe' looking for {'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adhe' trying 'r' with node (1, 1)
----cur word: 'adher' looking for {'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adher' trying 'e' with node (0, 2)
----cur word: 'adhere' looking for {'s', 'n', 'r', 'd'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adhere' trying 's' with node (0, 3)
cur word: 'adhere' trying 'n' with node (0, 3)
----cur word: 'adheren' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adheren' trying 'c' with node (0, 4)
----cur word: 'adherenc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adherenc' trying 'e' with node (1, 3)
cur word: 'adheren' trying 't' with node (0, 4)
----cur word: 'adherent' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adherent' trying 's' with node (1, 3)
cur word: 'adheren' trying 'c' with node (1, 3)
cur word: 'adheren' trying 't' with node (1, 3)
cur word: 'adheren' trying 'c' with node (1, 4)
cur word: 'adheren' trying 't' with node (1, 4)
cur word: 'adhere' trying 'r' with node (0, 3)
----cur word: 'adherer' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adherer' trying 's' with node (0, 4)
cur word: 'adhere' trying 'd' with node (0, 3)
cur word: 'adhere' trying 'n' with node (1, 3)
cur word: 'adhere' trying 'r' with node (1, 3)
cur word: 'adher' trying 'i' with node (0, 2)
----cur word: 'adheri' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adheri' trying 'n' with node (0, 3)
----cur word: 'adherin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adherin' trying 'g' with node (0, 4)
cur word: 'adheri' trying 'n' with node (1, 3)
cur word: 'adher' trying 'e' with node (2, 0)
cur word: 'adher' trying 'i' with node (2, 0)
cur word: 'adher' trying 'e' with node (2, 1)
cur word: 'adher' trying 'i' with node (2, 1)
cur word: 'adher' trying 'e' with node (2, 2)
cur word: 'adher' trying 'i' with node (2, 2)
cur word: 'adhe' trying 's' with node (1, 1)
----cur word: 'adhes' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adhes' trying 'i' with node (0, 2)
----cur word: 'adhesi' looking for {'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adhesi' trying 'o' with node (0, 3)
----cur word: 'adhesio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adhesio' trying 'n' with node (0, 4)
cur word: 'adhesi' trying 'v' with node (0, 3)
----cur word: 'adhesiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adhesiv' trying 'e' with node (0, 4)
----cur word: 'adhesive' looking for {'n', 'l', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adhesive' trying 'n' with node (1, 3)
----cur word: 'adhesiven' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adhesiven' trying 'e' with node (1, 4)
----cur word: 'adhesivene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adhesivene' trying 's' with node (2, 3)
----cur word: 'adhesivenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adhesivenes' trying 's' with node (2, 2)
cur word: 'adhesivene' trying 's' with node (2, 4)
cur word: 'adhesiven' trying 'e' with node (2, 2)
cur word: 'adhesiven' trying 'e' with node (2, 3)
cur word: 'adhesiven' trying 'e' with node (2, 4)
cur word: 'adhesive' trying 'l' with node (1, 3)
----cur word: 'adhesivel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adhesivel' trying 'y' with node (1, 4)
cur word: 'adhesive' trying 's' with node (1, 3)
cur word: 'adhesive' trying 'n' with node (1, 4)
cur word: 'adhesive' trying 'l' with node (1, 4)
cur word: 'adhesiv' trying 'e' with node (1, 3)
cur word: 'adhesiv' trying 'e' with node (1, 4)
cur word: 'adhesi' trying 'o' with node (1, 3)
cur word: 'adhesi' trying 'v' with node (1, 3)
cur word: 'adhes' trying 'i' with node (2, 0)
cur word: 'adhes' trying 'i' with node (2, 1)
cur word: 'adhes' trying 'i' with node (2, 2)
cur word: 'adhe' trying 'r' with node (2, 0)
cur word: 'adhe' trying 's' with node (2, 0)
cur word: 'adhe' trying 'r' with node (2, 1)
cur word: 'adhe' trying 's' with node (2, 1)
cur word: 'adh' trying 'i' with node (1, 0)
----cur word: 'adhi' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adhi' trying 'b' with node (1, 1)
----cur word: 'adhib' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adhib' trying 'i' with node (0, 2)
----cur word: 'adhibi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adhibi' trying 't' with node (0, 3)
cur word: 'adhib' trying 'i' with node (2, 0)
cur word: 'adhib' trying 'i' with node (2, 1)
cur word: 'adhib' trying 'i' with node (2, 2)
cur word: 'adhi' trying 'b' with node (2, 0)
cur word: 'adhi' trying 'b' with node (2, 1)
cur word: 'adh' trying 'e' with node (1, 1)
cur word: 'adh' trying 'i' with node (1, 1)
cur word: 'ad' trying 'o' with node (0, 0)
----cur word: 'ado' looking for {'l', 'p', 'b', 'n', 'w', 'r'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'ado' trying 'l' with node (1, 0)
----cur word: 'adol' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adol' trying 'e' with node (1, 1)
----cur word: 'adole' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adole' trying 's' with node (0, 2)
----cur word: 'adoles' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adoles' trying 'c' with node (0, 3)
----cur word: 'adolesc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adolesc' trying 'e' with node (0, 4)
----cur word: 'adolesce' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adolesce' trying 'n' with node (1, 3)
----cur word: 'adolescen' looking for {'c', 't'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adolescen' trying 'c' with node (1, 4)
----cur word: 'adolescenc' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adolescenc' trying 'e' with node (2, 3)
----cur word: 'adolescence' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adolescence' trying 's' with node (2, 2)
cur word: 'adolescenc' trying 'e' with node (2, 4)
cur word: 'adolescen' trying 't' with node (1, 4)
----cur word: 'adolescent' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adolescent' trying 's' with node (2, 3)
cur word: 'adolescen' trying 'c' with node (2, 2)
cur word: 'adolescen' trying 't' with node (2, 2)
cur word: 'adolescen' trying 'c' with node (2, 3)
cur word: 'adolescen' trying 't' with node (2, 3)
cur word: 'adolescen' trying 'c' with node (2, 4)
cur word: 'adolescen' trying 't' with node (2, 4)
cur word: 'adolesce' trying 'n' with node (1, 4)
cur word: 'adolesc' trying 'e' with node (1, 3)
cur word: 'adolesc' trying 'e' with node (1, 4)
cur word: 'adoles' trying 'c' with node (1, 3)
cur word: 'adole' trying 's' with node (2, 0)
cur word: 'adole' trying 's' with node (2, 1)
cur word: 'adole' trying 's' with node (2, 2)
cur word: 'adol' trying 'e' with node (2, 0)
cur word: 'adol' trying 'e' with node (2, 1)
cur word: 'ado' trying 'p' with node (1, 0)
----cur word: 'adop' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adop' trying 't' with node (1, 1)
----cur word: 'adopt' looking for {'s', 'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adopt' trying 's' with node (0, 2)
cur word: 'adopt' trying 'e' with node (0, 2)
----cur word: 'adopte' looking for {'d', 'e', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adopte' trying 'd' with node (0, 3)
cur word: 'adopte' trying 'e' with node (0, 3)
cur word: 'adopte' trying 'r' with node (0, 3)
----cur word: 'adopter' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adopter' trying 's' with node (0, 4)
cur word: 'adopte' trying 'r' with node (1, 3)
cur word: 'adopt' trying 'a' with node (0, 2)
----cur word: 'adopta' looking for {'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adopta' trying 'b' with node (0, 3)
----cur word: 'adoptab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adoptab' trying 'l' with node (0, 4)
----cur word: 'adoptabl' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adoptabl' trying 'e' with node (1, 3)
cur word: 'adoptab' trying 'l' with node (1, 3)
cur word: 'adoptab' trying 'l' with node (1, 4)
cur word: 'adopta' trying 'b' with node (1, 3)
cur word: 'adopt' trying 'i' with node (0, 2)
----cur word: 'adopti' looking for {'n', 'o', 'v'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adopti' trying 'n' with node (0, 3)
----cur word: 'adoptin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adoptin' trying 'g' with node (0, 4)
cur word: 'adopti' trying 'o' with node (0, 3)
----cur word: 'adoptio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adoptio' trying 'n' with node (0, 4)
----cur word: 'adoption' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adoption' trying 's' with node (1, 3)
cur word: 'adoptio' trying 'n' with node (1, 3)
cur word: 'adoptio' trying 'n' with node (1, 4)
cur word: 'adopti' trying 'v' with node (0, 3)
----cur word: 'adoptiv' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adoptiv' trying 'e' with node (0, 4)
----cur word: 'adoptive' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adoptive' trying 'l' with node (1, 3)
----cur word: 'adoptivel' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adoptivel' trying 'y' with node (1, 4)
cur word: 'adoptive' trying 'l' with node (1, 4)
cur word: 'adoptiv' trying 'e' with node (1, 3)
cur word: 'adoptiv' trying 'e' with node (1, 4)
cur word: 'adopti' trying 'n' with node (1, 3)
cur word: 'adopti' trying 'o' with node (1, 3)
cur word: 'adopti' trying 'v' with node (1, 3)
cur word: 'adopt' trying 'e' with node (2, 0)
cur word: 'adopt' trying 'a' with node (2, 0)
cur word: 'adopt' trying 'i' with node (2, 0)
cur word: 'adopt' trying 'e' with node (2, 1)
cur word: 'adopt' trying 'a' with node (2, 1)
cur word: 'adopt' trying 'i' with node (2, 1)
cur word: 'adopt' trying 'e' with node (2, 2)
cur word: 'adopt' trying 'a' with node (2, 2)
cur word: 'adopt' trying 'i' with node (2, 2)
cur word: 'adop' trying 't' with node (2, 0)
cur word: 'adop' trying 't' with node (2, 1)
cur word: 'ado' trying 'b' with node (1, 0)
----cur word: 'adob' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adob' trying 'e' with node (1, 1)
----cur word: 'adobe' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adobe' trying 's' with node (0, 2)
cur word: 'adob' trying 'e' with node (2, 0)
cur word: 'adob' trying 'e' with node (2, 1)
cur word: 'ado' trying 'n' with node (1, 0)
----cur word: 'adon' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adon' trying 'i' with node (1, 1)
----cur word: 'adoni' looking for {'z', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adoni' trying 'z' with node (0, 2)
----cur word: 'adoniz' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adoniz' trying 'e' with node (0, 3)
----cur word: 'adonize' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adonize' trying 's' with node (0, 4)
cur word: 'adoniz' trying 'e' with node (1, 3)
cur word: 'adoni' trying 's' with node (0, 2)
----cur word: 'adonis' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adonis' trying 'e' with node (0, 3)
----cur word: 'adonise' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adonise' trying 's' with node (0, 4)
cur word: 'adonis' trying 'e' with node (1, 3)
cur word: 'adoni' trying 'z' with node (2, 0)
cur word: 'adoni' trying 's' with node (2, 0)
cur word: 'adoni' trying 'z' with node (2, 1)
cur word: 'adoni' trying 's' with node (2, 1)
cur word: 'adoni' trying 'z' with node (2, 2)
cur word: 'adoni' trying 's' with node (2, 2)
cur word: 'adon' trying 'i' with node (2, 0)
cur word: 'adon' trying 'i' with node (2, 1)
cur word: 'ado' trying 'w' with node (1, 0)
----cur word: 'adow' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adow' trying 'n' with node (1, 1)
cur word: 'ado' trying 'r' with node (1, 0)
----cur word: 'ador' looking for {'n', 'e', 'i', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'ador' trying 'n' with node (1, 1)
----cur word: 'adorn' looking for {'m', 'e', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adorn' trying 'm' with node (0, 2)
----cur word: 'adornm' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adornm' trying 'e' with node (0, 3)
----cur word: 'adornme' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adornme' trying 'n' with node (0, 4)
----cur word: 'adornmen' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adornmen' trying 't' with node (1, 3)
----cur word: 'adornment' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adornment' trying 's' with node (1, 4)
cur word: 'adornmen' trying 't' with node (1, 4)
cur word: 'adornme' trying 'n' with node (1, 3)
cur word: 'adornme' trying 'n' with node (1, 4)
cur word: 'adornm' trying 'e' with node (1, 3)
cur word: 'adorn' trying 'e' with node (0, 2)
----cur word: 'adorne' looking for {'d', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorne' trying 'd' with node (0, 3)
cur word: 'adorne' trying 'r' with node (0, 3)
cur word: 'adorn' trying 's' with node (0, 2)
cur word: 'adorn' trying 'i' with node (0, 2)
----cur word: 'adorni' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorni' trying 'n' with node (0, 3)
----cur word: 'adornin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adornin' trying 'g' with node (0, 4)
cur word: 'adorni' trying 'n' with node (1, 3)
cur word: 'adorn' trying 'm' with node (2, 0)
cur word: 'adorn' trying 'e' with node (2, 0)
cur word: 'adorn' trying 'i' with node (2, 0)
cur word: 'adorn' trying 'm' with node (2, 1)
cur word: 'adorn' trying 'e' with node (2, 1)
cur word: 'adorn' trying 'i' with node (2, 1)
cur word: 'adorn' trying 'm' with node (2, 2)
cur word: 'adorn' trying 'e' with node (2, 2)
cur word: 'adorn' trying 'i' with node (2, 2)
cur word: 'ador' trying 'e' with node (1, 1)
----cur word: 'adore' looking for {'d', 'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adore' trying 'd' with node (0, 2)
cur word: 'adore' trying 'r' with node (0, 2)
----cur word: 'adorer' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorer' trying 's' with node (0, 3)
cur word: 'adore' trying 's' with node (0, 2)
cur word: 'adore' trying 'r' with node (2, 0)
cur word: 'adore' trying 'r' with node (2, 1)
cur word: 'adore' trying 'r' with node (2, 2)
cur word: 'ador' trying 'i' with node (1, 1)
----cur word: 'adori' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adori' trying 'n' with node (0, 2)
----cur word: 'adorin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorin' trying 'g' with node (0, 3)
----cur word: 'adoring' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adoring' trying 'l' with node (0, 4)
----cur word: 'adoringl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adoringl' trying 'y' with node (1, 3)
cur word: 'adoring' trying 'l' with node (1, 3)
cur word: 'adoring' trying 'l' with node (1, 4)
cur word: 'adorin' trying 'g' with node (1, 3)
cur word: 'adori' trying 'n' with node (2, 0)
cur word: 'adori' trying 'n' with node (2, 1)
cur word: 'adori' trying 'n' with node (2, 2)
cur word: 'ador' trying 'a' with node (1, 1)
----cur word: 'adora' looking for {'t', 'b'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adora' trying 't' with node (0, 2)
----cur word: 'adorat' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorat' trying 'i' with node (0, 3)
----cur word: 'adorati' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adorati' trying 'o' with node (0, 4)
----cur word: 'adoratio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adoratio' trying 'n' with node (1, 3)
cur word: 'adorati' trying 'o' with node (1, 3)
cur word: 'adorati' trying 'o' with node (1, 4)
cur word: 'adorat' trying 'i' with node (1, 3)
cur word: 'adora' trying 'b' with node (0, 2)
----cur word: 'adorab' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adorab' trying 'l' with node (0, 3)
----cur word: 'adorabl' looking for {'y', 'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adorabl' trying 'y' with node (0, 4)
cur word: 'adorabl' trying 'e' with node (0, 4)
----cur word: 'adorable' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adorable' trying 'n' with node (1, 3)
----cur word: 'adorablen' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adorablen' trying 'e' with node (1, 4)
----cur word: 'adorablene' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adorablene' trying 's' with node (2, 3)
----cur word: 'adorablenes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adorablenes' trying 's' with node (2, 2)
cur word: 'adorablene' trying 's' with node (2, 4)
cur word: 'adorablen' trying 'e' with node (2, 2)
cur word: 'adorablen' trying 'e' with node (2, 3)
cur word: 'adorablen' trying 'e' with node (2, 4)
cur word: 'adorable' trying 'n' with node (1, 4)
cur word: 'adorabl' trying 'e' with node (1, 3)
cur word: 'adorabl' trying 'e' with node (1, 4)
cur word: 'adorab' trying 'l' with node (1, 3)
cur word: 'adora' trying 't' with node (2, 0)
cur word: 'adora' trying 'b' with node (2, 0)
cur word: 'adora' trying 't' with node (2, 1)
cur word: 'adora' trying 'b' with node (2, 1)
cur word: 'adora' trying 't' with node (2, 2)
cur word: 'adora' trying 'b' with node (2, 2)
cur word: 'ador' trying 'n' with node (2, 0)
cur word: 'ador' trying 'e' with node (2, 0)
cur word: 'ador' trying 'i' with node (2, 0)
cur word: 'ador' trying 'a' with node (2, 0)
cur word: 'ador' trying 'n' with node (2, 1)
cur word: 'ador' trying 'e' with node (2, 1)
cur word: 'ador' trying 'i' with node (2, 1)
cur word: 'ador' trying 'a' with node (2, 1)
cur word: 'ado' trying 'l' with node (1, 1)
cur word: 'ado' trying 'p' with node (1, 1)
cur word: 'ado' trying 'b' with node (1, 1)
cur word: 'ado' trying 'n' with node (1, 1)
cur word: 'ado' trying 'w' with node (1, 1)
cur word: 'ado' trying 'r' with node (1, 1)
cur word: 'ad' trying 'r' with node (0, 0)
----cur word: 'adr' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adr' trying 'o' with node (1, 0)
----cur word: 'adro' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adro' trying 'i' with node (1, 1)
----cur word: 'adroi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adroi' trying 't' with node (0, 2)
----cur word: 'adroit' looking for {'n', 'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adroit' trying 'n' with node (0, 3)
----cur word: 'adroitn' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adroitn' trying 'e' with node (0, 4)
----cur word: 'adroitne' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adroitne' trying 's' with node (1, 3)
----cur word: 'adroitnes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adroitnes' trying 's' with node (1, 4)
cur word: 'adroitne' trying 's' with node (1, 4)
cur word: 'adroitn' trying 'e' with node (1, 3)
cur word: 'adroitn' trying 'e' with node (1, 4)
cur word: 'adroit' trying 'l' with node (0, 3)
----cur word: 'adroitl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adroitl' trying 'y' with node (0, 4)
cur word: 'adroit' trying 'n' with node (1, 3)
cur word: 'adroit' trying 'l' with node (1, 3)
cur word: 'adroi' trying 't' with node (2, 0)
cur word: 'adroi' trying 't' with node (2, 1)
cur word: 'adroi' trying 't' with node (2, 2)
cur word: 'adro' trying 'i' with node (2, 0)
cur word: 'adro' trying 'i' with node (2, 1)
cur word: 'adr' trying 'e' with node (1, 0)
----cur word: 'adre' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adre' trying 'n' with node (1, 1)
----cur word: 'adren' looking for {'o', 'e', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adren' trying 'o' with node (0, 2)
----cur word: 'adreno' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adreno' trying 'c' with node (0, 3)
----cur word: 'adrenoc' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adrenoc' trying 'o' with node (0, 4)
----cur word: 'adrenoco' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adrenoco' trying 'r' with node (1, 3)
----cur word: 'adrenocor' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adrenocor' trying 't' with node (1, 4)
----cur word: 'adrenocort' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adrenocort' trying 'i' with node (2, 3)
----cur word: 'adrenocorti' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adrenocorti' trying 'c' with node (2, 2)
----cur word: 'adrenocortic' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adrenocortic' trying 'o' with node (2, 1)
----cur word: 'adrenocortico' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'adrenocortico' trying 't' with node (2, 0)
----cur word: 'adrenocorticot' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'adrenocorticot' trying 'r' with node (3, 0)
----cur word: 'adrenocorticotr' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0), (3, 0)], 0----
cur word: 'adrenocorticotr' trying 'o' with node (3, 1)
----cur word: 'adrenocorticotro' looking for {'p'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0), (3, 0), (3, 1)], 0----
cur word: 'adrenocorticotro' trying 'p' with node (3, 2)
----cur word: 'adrenocorticotrop' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0), (3, 0), (3, 1), (3, 2)], 0----
cur word: 'adrenocorticotrop' trying 'i' with node (3, 3)
----cur word: 'adrenocorticotropi' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0), (3, 0), (3, 1), (3, 2), (3, 3)], 0----
cur word: 'adrenocorticotropi' trying 'c' with node (2, 4)
cur word: 'adrenocorticotrop' trying 'i' with node (4, 1)
cur word: 'adrenocorticotrop' trying 'i' with node (4, 2)
cur word: 'adrenocorticotrop' trying 'i' with node (4, 3)
cur word: 'adrenocorticotro' trying 'p' with node (4, 0)
cur word: 'adrenocorticotro' trying 'p' with node (4, 1)
cur word: 'adrenocorticotro' trying 'p' with node (4, 2)
cur word: 'adrenocorticotr' trying 'o' with node (4, 0)
cur word: 'adrenocorticotr' trying 'o' with node (4, 1)
cur word: 'adrenocorticot' trying 'r' with node (3, 1)
cur word: 'adrenocortico' trying 't' with node (3, 0)
cur word: 'adrenocortico' trying 't' with node (3, 1)
cur word: 'adrenocortico' trying 't' with node (3, 2)
cur word: 'adrenocortic' trying 'o' with node (3, 1)
cur word: 'adrenocortic' trying 'o' with node (3, 2)
cur word: 'adrenocortic' trying 'o' with node (3, 3)
cur word: 'adrenocorti' trying 'c' with node (2, 4)
cur word: 'adrenocorti' trying 'c' with node (3, 2)
cur word: 'adrenocorti' trying 'c' with node (3, 3)
cur word: 'adrenocorti' trying 'c' with node (3, 4)
cur word: 'adrenocort' trying 'i' with node (2, 4)
cur word: 'adrenocor' trying 't' with node (2, 2)
cur word: 'adrenocor' trying 't' with node (2, 3)
cur word: 'adrenocor' trying 't' with node (2, 4)
cur word: 'adrenoco' trying 'r' with node (1, 4)
cur word: 'adrenoc' trying 'o' with node (1, 3)
cur word: 'adrenoc' trying 'o' with node (1, 4)
cur word: 'adreno' trying 'c' with node (1, 3)
cur word: 'adren' trying 'e' with node (0, 2)
----cur word: 'adrene' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adrene' trying 'r' with node (0, 3)
----cur word: 'adrener' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adrener' trying 'g' with node (0, 4)
----cur word: 'adrenerg' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adrenerg' trying 'i' with node (1, 3)
----cur word: 'adrenergi' looking for {'c'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adrenergi' trying 'c' with node (1, 4)
cur word: 'adrenerg' trying 'i' with node (1, 4)
cur word: 'adrener' trying 'g' with node (1, 3)
cur word: 'adrener' trying 'g' with node (1, 4)
cur word: 'adrene' trying 'r' with node (1, 3)
cur word: 'adren' trying 'a' with node (0, 2)
----cur word: 'adrena' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'adrena' trying 'l' with node (0, 3)
----cur word: 'adrenal' looking for {'s', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adrenal' trying 's' with node (0, 4)
cur word: 'adrenal' trying 'i' with node (0, 4)
----cur word: 'adrenali' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adrenali' trying 'n' with node (1, 3)
----cur word: 'adrenalin' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adrenalin' trying 'e' with node (1, 4)
cur word: 'adrenali' trying 'n' with node (1, 4)
cur word: 'adrenal' trying 'i' with node (1, 3)
cur word: 'adrenal' trying 'i' with node (1, 4)
cur word: 'adrena' trying 'l' with node (1, 3)
cur word: 'adren' trying 'o' with node (2, 0)
cur word: 'adren' trying 'e' with node (2, 0)
cur word: 'adren' trying 'a' with node (2, 0)
cur word: 'adren' trying 'o' with node (2, 1)
cur word: 'adren' trying 'e' with node (2, 1)
cur word: 'adren' trying 'a' with node (2, 1)
cur word: 'adren' trying 'o' with node (2, 2)
cur word: 'adren' trying 'e' with node (2, 2)
cur word: 'adren' trying 'a' with node (2, 2)
cur word: 'adre' trying 'n' with node (2, 0)
cur word: 'adre' trying 'n' with node (2, 1)
cur word: 'adr' trying 'i' with node (1, 0)
----cur word: 'adri' looking for {'f'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adri' trying 'f' with node (1, 1)
----cur word: 'adrif' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adrif' trying 't' with node (0, 2)
cur word: 'adri' trying 'f' with node (2, 0)
cur word: 'adri' trying 'f' with node (2, 1)
cur word: 'adr' trying 'o' with node (1, 1)
cur word: 'adr' trying 'e' with node (1, 1)
cur word: 'adr' trying 'i' with node (1, 1)
cur word: 'ad' trying 'v' with node (0, 0)
----cur word: 'adv' looking for {'o', 'e', 'a', 'i'}, [(1, 2), (0, 1), (0, 0)], 0----
cur word: 'adv' trying 'o' with node (1, 0)
----cur word: 'advo' looking for {'c', 'w'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'advo' trying 'c' with node (1, 1)
----cur word: 'advoc' looking for {'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'advoc' trying 'a' with node (0, 2)
----cur word: 'advoca' looking for {'c', 't', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'advoca' trying 'c' with node (0, 3)
----cur word: 'advocac' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'advocac' trying 'y' with node (0, 4)
cur word: 'advoca' trying 't' with node (0, 3)
----cur word: 'advocat' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'advocat' trying 'o' with node (0, 4)
----cur word: 'advocato' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'advocato' trying 'r' with node (1, 3)
cur word: 'advocat' trying 'e' with node (0, 4)
----cur word: 'advocate' looking for {'d', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'advocate' trying 'd' with node (1, 3)
cur word: 'advocate' trying 's' with node (1, 3)
cur word: 'advocat' trying 'i' with node (0, 4)
----cur word: 'advocati' looking for {'n', 'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'advocati' trying 'n' with node (1, 3)
----cur word: 'advocatin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'advocatin' trying 'g' with node (1, 4)
cur word: 'advocati' trying 'o' with node (1, 3)
----cur word: 'advocatio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'advocatio' trying 'n' with node (1, 4)
cur word: 'advocati' trying 'n' with node (1, 4)
cur word: 'advocati' trying 'o' with node (1, 4)
cur word: 'advocat' trying 'o' with node (1, 3)
cur word: 'advocat' trying 'e' with node (1, 3)
cur word: 'advocat' trying 'i' with node (1, 3)
cur word: 'advocat' trying 'o' with node (1, 4)
cur word: 'advocat' trying 'e' with node (1, 4)
cur word: 'advocat' trying 'i' with node (1, 4)
cur word: 'advoca' trying 'a' with node (0, 3)
----cur word: 'advocaa' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'advocaa' trying 't' with node (0, 4)
cur word: 'advoca' trying 'c' with node (1, 3)
cur word: 'advoca' trying 't' with node (1, 3)
cur word: 'advoca' trying 'a' with node (1, 3)
cur word: 'advoc' trying 'a' with node (2, 0)
cur word: 'advoc' trying 'a' with node (2, 1)
cur word: 'advoc' trying 'a' with node (2, 2)
cur word: 'advo' trying 'w' with node (1, 1)
----cur word: 'advow' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'advow' trying 's' with node (0, 2)
----cur word: 'advows' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'advows' trying 'o' with node (0, 3)
----cur word: 'advowso' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'advowso' trying 'n' with node (0, 4)
----cur word: 'advowson' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'advowson' trying 's' with node (1, 3)
cur word: 'advowso' trying 'n' with node (1, 3)
cur word: 'advowso' trying 'n' with node (1, 4)
cur word: 'advows' trying 'o' with node (1, 3)
cur word: 'advow' trying 's' with node (2, 0)
cur word: 'advow' trying 's' with node (2, 1)
cur word: 'advow' trying 's' with node (2, 2)
cur word: 'advo' trying 'c' with node (2, 0)
cur word: 'advo' trying 'w' with node (2, 0)
cur word: 'advo' trying 'c' with node (2, 1)
cur word: 'advo' trying 'w' with node (2, 1)
cur word: 'adv' trying 'e' with node (1, 0)
----cur word: 'adve' looking for {'n', 'c', 'r'}, [(1, 2), (0, 1), (0, 0), (1, 0)], 0----
cur word: 'adve' trying 'n' with node (1, 1)
----cur word: 'adven' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'adven' trying 't' with node (0, 2)
----cur word: 'advent' looking for {'u', 's', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'advent' trying 'u' with node (0, 3)
----cur word: 'adventu' looking for {'r'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adventu' trying 'r' with node (0, 4)
----cur word: 'adventur' looking for {'o', 'e', 'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adventur' trying 'o' with node (1, 3)
----cur word: 'adventuro' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adventuro' trying 'u' with node (1, 4)
----cur word: 'adventurou' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventurou' trying 's' with node (2, 3)
----cur word: 'adventurous' looking for {'n', 'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventurous' trying 'n' with node (2, 2)
----cur word: 'adventurousn' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adventurousn' trying 'e' with node (2, 1)
----cur word: 'adventurousne' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'adventurousne' trying 's' with node (2, 0)
----cur word: 'adventurousnes' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1), (2, 0)], 0----
cur word: 'adventurousnes' trying 's' with node (3, 0)
cur word: 'adventurousne' trying 's' with node (3, 0)
cur word: 'adventurousne' trying 's' with node (3, 1)
cur word: 'adventurousne' trying 's' with node (3, 2)
cur word: 'adventurousn' trying 'e' with node (3, 1)
cur word: 'adventurousn' trying 'e' with node (3, 2)
cur word: 'adventurousn' trying 'e' with node (3, 3)
cur word: 'adventurous' trying 'l' with node (2, 2)
----cur word: 'adventurousl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adventurousl' trying 'y' with node (2, 1)
cur word: 'adventurous' trying 'n' with node (2, 4)
cur word: 'adventurous' trying 'l' with node (2, 4)
cur word: 'adventurous' trying 'n' with node (3, 2)
cur word: 'adventurous' trying 'l' with node (3, 2)
cur word: 'adventurous' trying 'n' with node (3, 3)
cur word: 'adventurous' trying 'l' with node (3, 3)
cur word: 'adventurous' trying 'n' with node (3, 4)
cur word: 'adventurous' trying 'l' with node (3, 4)
cur word: 'adventurou' trying 's' with node (2, 4)
cur word: 'adventuro' trying 'u' with node (2, 2)
cur word: 'adventuro' trying 'u' with node (2, 3)
cur word: 'adventuro' trying 'u' with node (2, 4)
cur word: 'adventur' trying 'e' with node (1, 3)
----cur word: 'adventure' looking for {'d', 'r', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adventure' trying 'd' with node (1, 4)
cur word: 'adventure' trying 'r' with node (1, 4)
----cur word: 'adventurer' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventurer' trying 's' with node (2, 3)
cur word: 'adventure' trying 's' with node (1, 4)
----cur word: 'adventures' looking for {'o', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventures' trying 'o' with node (2, 3)
----cur word: 'adventureso' looking for {'m'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventureso' trying 'm' with node (2, 2)
----cur word: 'adventuresom' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adventuresom' trying 'e' with node (2, 1)
cur word: 'adventureso' trying 'm' with node (2, 4)
cur word: 'adventureso' trying 'm' with node (3, 2)
cur word: 'adventureso' trying 'm' with node (3, 3)
cur word: 'adventureso' trying 'm' with node (3, 4)
cur word: 'adventures' trying 's' with node (2, 3)
----cur word: 'adventuress' looking for {'e'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventuress' trying 'e' with node (2, 2)
----cur word: 'adventuresse' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adventuresse' trying 's' with node (2, 1)
cur word: 'adventuress' trying 'e' with node (2, 4)
cur word: 'adventuress' trying 'e' with node (3, 2)
cur word: 'adventuress' trying 'e' with node (3, 3)
cur word: 'adventuress' trying 'e' with node (3, 4)
cur word: 'adventures' trying 'o' with node (2, 4)
cur word: 'adventures' trying 's' with node (2, 4)
cur word: 'adventure' trying 'r' with node (2, 2)
cur word: 'adventure' trying 's' with node (2, 2)
cur word: 'adventure' trying 'r' with node (2, 3)
cur word: 'adventure' trying 's' with node (2, 3)
cur word: 'adventure' trying 'r' with node (2, 4)
cur word: 'adventure' trying 's' with node (2, 4)
cur word: 'adventur' trying 'i' with node (1, 3)
----cur word: 'adventuri' looking for {'n', 's'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adventuri' trying 'n' with node (1, 4)
----cur word: 'adventurin' looking for {'g'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventurin' trying 'g' with node (2, 3)
cur word: 'adventuri' trying 's' with node (1, 4)
----cur word: 'adventuris' looking for {'t', 'm'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventuris' trying 't' with node (2, 3)
----cur word: 'adventurist' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventurist' trying 's' with node (2, 2)
cur word: 'adventuris' trying 'm' with node (2, 3)
----cur word: 'adventurism' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventurism' trying 's' with node (2, 2)
cur word: 'adventuris' trying 't' with node (2, 4)
cur word: 'adventuris' trying 'm' with node (2, 4)
cur word: 'adventuri' trying 'n' with node (2, 2)
cur word: 'adventuri' trying 's' with node (2, 2)
cur word: 'adventuri' trying 'n' with node (2, 3)
cur word: 'adventuri' trying 's' with node (2, 3)
cur word: 'adventuri' trying 'n' with node (2, 4)
cur word: 'adventuri' trying 's' with node (2, 4)
cur word: 'adventur' trying 'o' with node (1, 4)
cur word: 'adventur' trying 'e' with node (1, 4)
cur word: 'adventur' trying 'i' with node (1, 4)
cur word: 'adventu' trying 'r' with node (1, 3)
cur word: 'adventu' trying 'r' with node (1, 4)
cur word: 'advent' trying 's' with node (0, 3)
cur word: 'advent' trying 'i' with node (0, 3)
----cur word: 'adventi' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'adventi' trying 't' with node (0, 4)
----cur word: 'adventit' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'adventit' trying 'i' with node (1, 3)
----cur word: 'adventiti' looking for {'o', 'a'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'adventiti' trying 'o' with node (1, 4)
----cur word: 'adventitio' looking for {'u'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventitio' trying 'u' with node (2, 3)
----cur word: 'adventitiou' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3)], 0----
cur word: 'adventitiou' trying 's' with node (2, 2)
----cur word: 'adventitious' looking for {'l'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2)], 0----
cur word: 'adventitious' trying 'l' with node (2, 1)
----cur word: 'adventitiousl' looking for {'y'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 3), (2, 2), (2, 1)], 0----
cur word: 'adventitiousl' trying 'y' with node (2, 0)
cur word: 'adventitious' trying 'l' with node (3, 1)
cur word: 'adventitious' trying 'l' with node (3, 2)
cur word: 'adventitious' trying 'l' with node (3, 3)
cur word: 'adventitiou' trying 's' with node (2, 4)
cur word: 'adventitiou' trying 's' with node (3, 2)
cur word: 'adventitiou' trying 's' with node (3, 3)
cur word: 'adventitiou' trying 's' with node (3, 4)
cur word: 'adventitio' trying 'u' with node (2, 4)
cur word: 'adventiti' trying 'a' with node (1, 4)
----cur word: 'adventitia' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3), (1, 4)], 0----
cur word: 'adventitia' trying 's' with node (2, 3)
cur word: 'adventiti' trying 'o' with node (2, 2)
cur word: 'adventiti' trying 'a' with node (2, 2)
cur word: 'adventiti' trying 'o' with node (2, 3)
cur word: 'adventiti' trying 'a' with node (2, 3)
cur word: 'adventiti' trying 'o' with node (2, 4)
cur word: 'adventiti' trying 'a' with node (2, 4)
cur word: 'adventit' trying 'i' with node (1, 4)
cur word: 'adventi' trying 't' with node (1, 3)
cur word: 'adventi' trying 't' with node (1, 4)
cur word: 'advent' trying 'u' with node (1, 3)
cur word: 'advent' trying 'i' with node (1, 3)
cur word: 'adven' trying 't' with node (2, 0)
cur word: 'adven' trying 't' with node (2, 1)
cur word: 'adven' trying 't' with node (2, 2)
cur word: 'adve' trying 'c' with node (1, 1)
----cur word: 'advec' looking for {'t'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1)], 0----
cur word: 'advec' trying 't' with node (0, 2)
----cur word: 'advect' looking for {'i'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2)], 0----
cur word: 'advect' trying 'i' with node (0, 3)
----cur word: 'advecti' looking for {'o'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3)], 0----
cur word: 'advecti' trying 'o' with node (0, 4)
----cur word: 'advectio' looking for {'n'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4)], 0----
cur word: 'advectio' trying 'n' with node (1, 3)
----cur word: 'advection' looking for {'s'}, [(1, 2), (0, 1), (0, 0), (1, 0), (1, 1), (0, 2), (0, 3), (0, 4), (1, 3)], 0----
cur word: 'advection' trying 's' with node (1, 4)
